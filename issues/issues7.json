[
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2438",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2438/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2438/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2438/events",
    "html_url": "https://github.com/strongloop/express/issues/2438",
    "id": 48389102,
    "number": 2438,
    "title": "Better route filter and group routes",
    "user": {
      "login": "VictorQueiroz",
      "id": 5693176,
      "avatar_url": "https://avatars.githubusercontent.com/u/5693176?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VictorQueiroz",
      "html_url": "https://github.com/VictorQueiroz",
      "followers_url": "https://api.github.com/users/VictorQueiroz/followers",
      "following_url": "https://api.github.com/users/VictorQueiroz/following{/other_user}",
      "gists_url": "https://api.github.com/users/VictorQueiroz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VictorQueiroz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VictorQueiroz/subscriptions",
      "organizations_url": "https://api.github.com/users/VictorQueiroz/orgs",
      "repos_url": "https://api.github.com/users/VictorQueiroz/repos",
      "events_url": "https://api.github.com/users/VictorQueiroz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VictorQueiroz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-11-11T14:24:57Z",
    "updated_at": "2014-11-12T02:35:20Z",
    "closed_at": "2014-11-11T23:25:11Z",
    "body": "I made a little code which can help us developing better and more organized our route filters. I liked it, and it will be nice if someone implement it on Express 5 or 4. Hope you guys enjoy :+1: \r\n\r\n```js\r\nvar express = require('express');\r\nvar path = require('path');\r\n\r\nvar app = express();\r\n\r\nvar filters = [];\r\n\r\nfunction Filter (name, fn) {\r\n\treturn filters.push({\r\n\t\tname: name,\r\n\t\tfilter: fn\r\n\t});\r\n}\r\n\r\nfunction Group (app, opts, fn) {\r\n\tvar self = this;\r\n\tvar prefix = this.prefix = opts && opts.prefix || '';\r\n\tthis.filter = opts && opts.filter || false;\r\n\r\n\tfunction defineFilter (filter) {\r\n\t\tfilters.forEach(function (key) {\r\n\t\t\tif(key.name === filter) {\r\n\t\t\t\tfilter = key.filter;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn filter;\r\n\t}\r\n\r\n\tif(this.filter) {\r\n\t\t/**\r\n\t\t * Transforms this: 'SomeFilter'\r\n\t\t * On this: ['SomeFilter']\r\n\t\t */\r\n\t\tif(typeof this.filter === 'string') {\r\n\t\t\tthis.filter = [this.filter];\r\n\t\t}\r\n\r\n\t\tif(this.filter instanceof Array) {\r\n\t\t\tthis.filter.forEach(function (filter, i) {\r\n\t\t\t\tself.filter[i] = defineFilter(filter);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tthis.route = function (path) {\r\n\t\tvar route = app.route(prefix + path);\r\n\r\n\t\tif(self.filter) {\r\n\t\t\tself.filter.forEach(function (key) {\r\n\t\t\t\tif(typeof key !== 'function') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\troute.all(key);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn route;\r\n\t};\r\n\r\n\tthis.group = function (opts, fn) {\r\n\t\tif(opts && opts.prefix) {\r\n\t\t\topts.prefix = self.prefix + opts.prefix;\r\n\t\t}\r\n\r\n\t\treturn new Group (app, opts, fn);\r\n\t};\r\n\r\n\tfn.call(this, this);\r\n}\r\n\r\nnew Filter('SomeFilter', function (req, res, next) {\r\n\tres.json({ msg: 'Stay here, please.' });\r\n});\r\n\r\nnew Group(app, {\r\n\tfilter: 'SomeFilter', // filter\r\n\t// or:\r\n\t// filter: ['SomeFilter', 'AnotherFilter']\r\n\tprefix: '/api'\r\n}, function (groupOne) {\r\n        // It is important to remember that you should use 'this' or 'app' inside of the callback scope, or it will not work properly.\r\n\t// GET /api/user\r\n\tthis\r\n\t\t.route('/user')\r\n\t\t.get(function (req, res, next) {\r\n\t\t\tres.json([1, 2, 3, 4]);\r\n\t\t});\r\n\r\n\tthis.group({\r\n\t\tprefix: '/user'\r\n\t}, function (groupTwo) {\r\n\t\t// GET /api/user/list\r\n\t\tgroupTwo // or this\r\n\t\t\t.route('/list')\r\n\t\t\t.get(function (req, res, next) {\r\n\t\t\t\tres.json({ isJavascript: true });\r\n\t\t\t});\r\n\r\n\t\t// GET /api/user/prefix/:prefix\r\n\t\tthis\r\n\t\t\t.group({\r\n\t\t\t\tprefix: '/prefix'\r\n\t\t\t}, function (groupThree) {\r\n\t\t\t\tgroupThree.route('/:prefix').get(function (req, res) {\r\n\t\t\t\t\tres.json({ itWorks: true });\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t});\r\n});\r\n\r\napp.listen(3000, function () {\r\n\tconsole.log('Feel it at port 3000!');\r\n});\r\n```"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2437",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2437/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2437/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2437/events",
    "html_url": "https://github.com/strongloop/express/pull/2437",
    "id": 48378330,
    "number": 2437,
    "title": "Add tracing capabilities to Express",
    "user": {
      "login": "frankrousseau",
      "id": 1336623,
      "avatar_url": "https://avatars.githubusercontent.com/u/1336623?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankrousseau",
      "html_url": "https://github.com/frankrousseau",
      "followers_url": "https://api.github.com/users/frankrousseau/followers",
      "following_url": "https://api.github.com/users/frankrousseau/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankrousseau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankrousseau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankrousseau/subscriptions",
      "organizations_url": "https://api.github.com/users/frankrousseau/orgs",
      "repos_url": "https://api.github.com/users/frankrousseau/repos",
      "events_url": "https://api.github.com/users/frankrousseau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankrousseau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 25,
    "created_at": "2014-11-11T12:17:34Z",
    "updated_at": "2015-03-08T22:06:50Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2437",
      "html_url": "https://github.com/strongloop/express/pull/2437",
      "diff_url": "https://github.com/strongloop/express/pull/2437.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2437.patch"
    },
    "body": "Hi Express team,\r\n\r\nTo follow the discussion posted in the #2191 issue, I send you a proposal to implement tracing support in Express. Let me know if it matches your requirements. It is inspired by Koa Trace.\r\n\r\n**Goal**\r\n\r\nWe want to allow to trace the response life-cycle. The tracing should support any tracing technology. \r\n\r\n**Implementation**\r\n\r\n* Add a `tracers` array at the application level.\r\n* Add an `instrument` function on the application prototype to add a tracer to the tracer list.\r\n* Add a `dispatch` function on the application prototype to activate all set tracers.\r\n* Add a `trace` on the response prototype to run tracers with current context and given event as arguments. \r\n* Add tracing tests.\r\n* Add tracing example."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2436",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2436/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2436/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2436/events",
    "html_url": "https://github.com/strongloop/express/issues/2436",
    "id": 48256348,
    "number": 2436,
    "title": "Router middleware applied to static if defined after?",
    "user": {
      "login": "analytically",
      "id": 254434,
      "avatar_url": "https://avatars.githubusercontent.com/u/254434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/analytically",
      "html_url": "https://github.com/analytically",
      "followers_url": "https://api.github.com/users/analytically/followers",
      "following_url": "https://api.github.com/users/analytically/following{/other_user}",
      "gists_url": "https://api.github.com/users/analytically/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/analytically/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/analytically/subscriptions",
      "organizations_url": "https://api.github.com/users/analytically/orgs",
      "repos_url": "https://api.github.com/users/analytically/repos",
      "events_url": "https://api.github.com/users/analytically/events{/privacy}",
      "received_events_url": "https://api.github.com/users/analytically/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-10T11:47:47Z",
    "updated_at": "2014-11-10T14:46:14Z",
    "closed_at": "2014-11-10T14:46:14Z",
    "body": "```\r\nrouter = express.Router()\r\nrouter.use helmet.csp(config.server.csp)\r\nrouter.get '/config', site.config\r\napp.use '/', router\r\napp.use express.static(...)\r\n```\r\n\r\nThe images still have the helmet CSP headers, while the docs say \"A router is an isolated instance of middleware and routes.\"?\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2435",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2435/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2435/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2435/events",
    "html_url": "https://github.com/strongloop/express/issues/2435",
    "id": 48225228,
    "number": 2435,
    "title": "question about `U+2028/9` char handling in `res.jsonp`",
    "user": {
      "login": "luckydrq",
      "id": 1474688,
      "avatar_url": "https://avatars.githubusercontent.com/u/1474688?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luckydrq",
      "html_url": "https://github.com/luckydrq",
      "followers_url": "https://api.github.com/users/luckydrq/followers",
      "following_url": "https://api.github.com/users/luckydrq/following{/other_user}",
      "gists_url": "https://api.github.com/users/luckydrq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luckydrq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luckydrq/subscriptions",
      "organizations_url": "https://api.github.com/users/luckydrq/orgs",
      "repos_url": "https://api.github.com/users/luckydrq/repos",
      "events_url": "https://api.github.com/users/luckydrq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luckydrq/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-10T02:52:10Z",
    "updated_at": "2014-11-10T02:58:48Z",
    "closed_at": "2014-11-10T02:58:48Z",
    "body": "i know that `U+2028/9` means `line terminated` to javascript and it can cause XSS in jsonp. but why not just remove it such as `body = body.replace(/\\u2028/, '')` staff instead of turning it to `\\\\u2028` which is a string of 6 and seems non-sense?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2434",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2434/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2434/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2434/events",
    "html_url": "https://github.com/strongloop/express/pull/2434",
    "id": 48215193,
    "number": 2434,
    "title": "Add an example using the express router objects",
    "user": {
      "login": "josemarjobs",
      "id": 138081,
      "avatar_url": "https://avatars.githubusercontent.com/u/138081?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josemarjobs",
      "html_url": "https://github.com/josemarjobs",
      "followers_url": "https://api.github.com/users/josemarjobs/followers",
      "following_url": "https://api.github.com/users/josemarjobs/following{/other_user}",
      "gists_url": "https://api.github.com/users/josemarjobs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josemarjobs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josemarjobs/subscriptions",
      "organizations_url": "https://api.github.com/users/josemarjobs/orgs",
      "repos_url": "https://api.github.com/users/josemarjobs/repos",
      "events_url": "https://api.github.com/users/josemarjobs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josemarjobs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/examples",
        "name": "examples",
        "color": "5319e7"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-09T21:55:25Z",
    "updated_at": "2014-11-10T00:01:19Z",
    "closed_at": "2014-11-10T00:01:19Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2434",
      "html_url": "https://github.com/strongloop/express/pull/2434",
      "diff_url": "https://github.com/strongloop/express/pull/2434.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2434.patch"
    },
    "body": "I have noticed that in the examples section, there is no example about the new router objects, so I made one."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2433",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2433/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2433/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2433/events",
    "html_url": "https://github.com/strongloop/express/issues/2433",
    "id": 48201517,
    "number": 2433,
    "title": "sendFile \"Error: write EPIPE\", express >= 4.9",
    "user": {
      "login": "hex7c0",
      "id": 4419146,
      "avatar_url": "https://avatars.githubusercontent.com/u/4419146?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hex7c0",
      "html_url": "https://github.com/hex7c0",
      "followers_url": "https://api.github.com/users/hex7c0/followers",
      "following_url": "https://api.github.com/users/hex7c0/following{/other_user}",
      "gists_url": "https://api.github.com/users/hex7c0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hex7c0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hex7c0/subscriptions",
      "organizations_url": "https://api.github.com/users/hex7c0/orgs",
      "repos_url": "https://api.github.com/users/hex7c0/repos",
      "events_url": "https://api.github.com/users/hex7c0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hex7c0/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/bug",
        "name": "bug",
        "color": "fc2929"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 9,
    "created_at": "2014-11-09T13:35:58Z",
    "updated_at": "2014-11-24T08:52:54Z",
    "closed_at": "2014-11-23T21:53:37Z",
    "body": "Hi guys,\r\nI have an issue (no crash) with express 4.9.0 or 4.10.0, node 0.10.33\r\nwhen I send a \"big\" file ~12.6 MB with `sendFile`\r\nand browser splits the request in 3 chunks (1 HTTP code 200 + 2 HTTP code 206)\r\n\r\nerror:\r\n```shell\r\nError: write EPIPE\r\n    at errnoException (net.js:904:11)\r\n    at Object.afterWrite (net.js:720:19)\r\n```\r\n\r\ntesting code\r\n```js\r\nvar app = require('express')();\r\napp.get('/', function(req, res) {\r\n\r\n    res.sendFile(__dirname + '/a.pdf');\r\n});\r\napp.listen(3000);\r\n```\r\n\r\non express 4.8.0, node 0.10.33\r\nI haven't error with same code"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2432",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2432/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2432/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2432/events",
    "html_url": "https://github.com/strongloop/express/issues/2432",
    "id": 48047215,
    "number": 2432,
    "title": "Move req / res prototype extension to a separate repo",
    "user": {
      "login": "Fishrock123",
      "id": 1093990,
      "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fishrock123",
      "html_url": "https://github.com/Fishrock123",
      "followers_url": "https://api.github.com/users/Fishrock123/followers",
      "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
      "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
      "repos_url": "https://api.github.com/users/Fishrock123/repos",
      "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/future",
        "name": "future",
        "color": "e102d8"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Fishrock123",
      "id": 1093990,
      "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fishrock123",
      "html_url": "https://github.com/Fishrock123",
      "followers_url": "https://api.github.com/users/Fishrock123/followers",
      "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
      "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
      "repos_url": "https://api.github.com/users/Fishrock123/repos",
      "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": {
      "url": "https://api.github.com/repos/strongloop/express/milestones/11",
      "html_url": "https://github.com/strongloop/express/milestones/5.0",
      "labels_url": "https://api.github.com/repos/strongloop/express/milestones/11/labels",
      "id": 739972,
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 1,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2014-11-26T01:36:03Z",
      "due_on": "2015-01-01T08:00:00Z",
      "closed_at": null
    },
    "comments": 10,
    "created_at": "2014-11-07T04:33:52Z",
    "updated_at": "2015-04-08T02:18:52Z",
    "closed_at": null,
    "body": "@dougwilson should be added to #2237"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2431",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2431/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2431/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2431/events",
    "html_url": "https://github.com/strongloop/express/pull/2431",
    "id": 47984178,
    "number": 2431,
    "title": "Support custom router",
    "user": {
      "login": "bajtos",
      "id": 1140553,
      "avatar_url": "https://avatars.githubusercontent.com/u/1140553?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bajtos",
      "html_url": "https://github.com/bajtos",
      "followers_url": "https://api.github.com/users/bajtos/followers",
      "following_url": "https://api.github.com/users/bajtos/following{/other_user}",
      "gists_url": "https://api.github.com/users/bajtos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bajtos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bajtos/subscriptions",
      "organizations_url": "https://api.github.com/users/bajtos/orgs",
      "repos_url": "https://api.github.com/users/bajtos/repos",
      "events_url": "https://api.github.com/users/bajtos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bajtos/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 17,
    "created_at": "2014-11-06T16:44:17Z",
    "updated_at": "2014-11-13T18:33:34Z",
    "closed_at": "2014-11-13T18:33:34Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2431",
      "html_url": "https://github.com/strongloop/express/pull/2431",
      "diff_url": "https://github.com/strongloop/express/pull/2431.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2431.patch"
    },
    "body": "Add a new parameter to `express` function to provide a custom `Router`\r\nconstructor.\r\n\r\nExample:\r\n\r\n```js\r\nvar PromisedRouter = require('router-as-promised');\r\nvar app = express(PromisedRouter);\r\n```\r\n\r\n**Rationale**\r\n\r\nThis patch make it easier to experiment with different router implementations, as it enables developers (express users) to swap out the default Router implementation and replace it with their own.\r\n\r\n - As promises are coming to ES6, there is an initiative to get promise support into express (see #2259). The last recommendation was to create a new router implementation supporting promises ([promise-kernel](https://www.npmjs.org/package/promise-kernel)).\r\n\r\n - In LoopBack, StrongLoop's API framework based on express, we are experimenting with a different way of registering middleware (https://github.com/strongloop/loopback/pull/757). Our current solution involves overriding the default router used by express.\r\n\r\n**Discussion points**\r\n\r\nAn existing workaround is to copy and edit `app.lazyrouter` to call a different Router constructor. This is very brittle as the copied version must be manually synchronized with any changes made in express.\r\n\r\nAdding the first parameter to `express()` may be seen as controversial. Frankly, I don't really care about the API. I am happy to rework the PR to a different API as long as it allows me to change the Router ctor used by `app.lazyrouter`.\r\n\r\nExample:\r\n\r\n```js\r\nvar app = expres();\r\napp.Router = MyCustomRouterCtor;\r\n\r\n// perhaps a different name would be better?\r\napp.routerFactory = MyCustomRouterCtor;\r\n```\r\n\r\n@dougwilson @jonathanong Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2430",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2430/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2430/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2430/events",
    "html_url": "https://github.com/strongloop/express/issues/2430",
    "id": 47920318,
    "number": 2430,
    "title": "Deprecate app.param(name, fn) where name starts with a colon",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/strongloop/express/milestones/12",
      "html_url": "https://github.com/strongloop/express/milestones/4.11",
      "labels_url": "https://api.github.com/repos/strongloop/express/milestones/12/labels",
      "id": 875792,
      "number": 12,
      "title": "4.11",
      "description": null,
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 3,
      "state": "open",
      "created_at": "2014-11-21T15:17:15Z",
      "updated_at": "2015-01-14T03:28:59Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2014-11-06T03:47:08Z",
    "updated_at": "2015-01-14T03:28:59Z",
    "closed_at": "2015-01-14T03:28:59Z",
    "body": "Right now, `app.param(':id', fn)` is equivalent to `app.param('id', fn)`, which I believe is to be able to make the name look like it's the same syntax as in paths. This seems redundant and adds unnecessary complexity, and would be odd if there would someday be a way to use RFC 6570 for URLs."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2429",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2429/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2429/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2429/events",
    "html_url": "https://github.com/strongloop/express/issues/2429",
    "id": 47920104,
    "number": 2429,
    "title": "Deprecate app.param(fn)",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/deprecate",
        "name": "deprecate",
        "color": "f7c6c7"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": {
      "url": "https://api.github.com/repos/strongloop/express/milestones/12",
      "html_url": "https://github.com/strongloop/express/milestones/4.11",
      "labels_url": "https://api.github.com/repos/strongloop/express/milestones/12/labels",
      "id": 875792,
      "number": 12,
      "title": "4.11",
      "description": null,
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 3,
      "state": "open",
      "created_at": "2014-11-21T15:17:15Z",
      "updated_at": "2015-01-14T03:28:59Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 24,
    "created_at": "2014-11-06T03:42:34Z",
    "updated_at": "2015-02-02T02:54:32Z",
    "closed_at": "2015-01-14T03:28:59Z",
    "body": "This is a discussion for the deprecation of the `app.param(fn)` signature. To me, it solves a problem that doesn't exist. I would like to hear arguments to keep it around, hopefully with a use-case it actually solves, before it gets deprecated."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2428",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2428/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2428/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2428/events",
    "html_url": "https://github.com/strongloop/express/issues/2428",
    "id": 47900751,
    "number": 2428,
    "title": "Tries to write even tho connection is closed",
    "user": {
      "login": "jimmywarting",
      "id": 1148376,
      "avatar_url": "https://avatars.githubusercontent.com/u/1148376?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmywarting",
      "html_url": "https://github.com/jimmywarting",
      "followers_url": "https://api.github.com/users/jimmywarting/followers",
      "following_url": "https://api.github.com/users/jimmywarting/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmywarting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmywarting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmywarting/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmywarting/orgs",
      "repos_url": "https://api.github.com/users/jimmywarting/repos",
      "events_url": "https://api.github.com/users/jimmywarting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmywarting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-11-05T23:03:06Z",
    "updated_at": "2014-11-06T00:02:30Z",
    "closed_at": "2014-11-06T00:01:14Z",
    "body": "I got this error `error: write EPIPE` when you would do something like this:\r\n\r\n```\r\nfunction(req, res, next){\r\n   setTimeout(function(){\r\n       res.download(file);\r\n   }, 20000) // time it takes to convert a file\r\n\r\n  // user aborts the request after 5 sec timeout\r\n}\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2427",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2427/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2427/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2427/events",
    "html_url": "https://github.com/strongloop/express/issues/2427",
    "id": 47824173,
    "number": 2427,
    "title": "SSL node 0.10.32  + Express 4.2.0 not work",
    "user": {
      "login": "nvcken",
      "id": 3489866,
      "avatar_url": "https://avatars.githubusercontent.com/u/3489866?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nvcken",
      "html_url": "https://github.com/nvcken",
      "followers_url": "https://api.github.com/users/nvcken/followers",
      "following_url": "https://api.github.com/users/nvcken/following{/other_user}",
      "gists_url": "https://api.github.com/users/nvcken/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nvcken/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nvcken/subscriptions",
      "organizations_url": "https://api.github.com/users/nvcken/orgs",
      "repos_url": "https://api.github.com/users/nvcken/repos",
      "events_url": "https://api.github.com/users/nvcken/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nvcken/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-11-05T11:08:07Z",
    "updated_at": "2014-11-05T15:02:05Z",
    "closed_at": "2014-11-05T15:02:05Z",
    "body": "My code \r\n```js\r\nvar https = require('https');\r\nvar fs = require(\"fs\");\r\nvar express = require('express');\r\n\r\nvar port = 3000;\r\n\r\nvar https_options = {\r\n  ca: fs.readFileSync(\"ssl/ca-bundle.crt\"),\r\n  key: fs.readFileSync(\"ssl/server.key\"),\r\n  cert: fs.readFileSync(\"ssl/my-domain.crt\")\r\n};\r\nvar app = express();\r\n\r\nvar https_server = https.createServer(https_options, app).listen(port, function(){\r\n  console.log(\"Express server listening on port \" + port);\r\n});\r\n\r\napp.get('/', function (req, res) {\r\n    res.writeHead(200);\r\n    res.end(\"hello world\\n\");\r\n});\r\n```\r\nnodemon start app fine , but use curl -k https://localhost:3000\r\nI got\r\ncurl: (35) Unknown SSL protocol error in connection to localhost:3000"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2426",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2426/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2426/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2426/events",
    "html_url": "https://github.com/strongloop/express/issues/2426",
    "id": 47383096,
    "number": 2426,
    "title": "req.route being exposed to middleware after other routes",
    "user": {
      "login": "oyyd",
      "id": 5847587,
      "avatar_url": "https://avatars.githubusercontent.com/u/5847587?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oyyd",
      "html_url": "https://github.com/oyyd",
      "followers_url": "https://api.github.com/users/oyyd/followers",
      "following_url": "https://api.github.com/users/oyyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/oyyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oyyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oyyd/subscriptions",
      "organizations_url": "https://api.github.com/users/oyyd/orgs",
      "repos_url": "https://api.github.com/users/oyyd/repos",
      "events_url": "https://api.github.com/users/oyyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oyyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-31T11:11:15Z",
    "updated_at": "2014-10-31T13:56:36Z",
    "closed_at": "2014-10-31T13:37:22Z",
    "body": "```javascript\r\n      //When requested with path '/'\r\n      app.use('/',function(req,res,next){\r\n        //`req.route` equals `undefined`\r\n        next();\r\n      });\r\n\r\n      app.get('/',function(req,res,next){\r\n        //`req.route` is not `undefined`\r\n        next();\r\n      });\r\n\r\n      app.use('/',function(req,res,next){\r\n        //`req.route` is kept\r\n        res.end();\r\n      });\r\n```\r\nI'm not sure this is intentional or not, just found this when I read the source code. I could help to create a pull request If this behavior is not expected."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2425",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2425/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2425/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2425/events",
    "html_url": "https://github.com/strongloop/express/issues/2425",
    "id": 47312034,
    "number": 2425,
    "title": "Could .param take multiple functions?",
    "user": {
      "login": "dougmoscrop",
      "id": 586516,
      "avatar_url": "https://avatars.githubusercontent.com/u/586516?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougmoscrop",
      "html_url": "https://github.com/dougmoscrop",
      "followers_url": "https://api.github.com/users/dougmoscrop/followers",
      "following_url": "https://api.github.com/users/dougmoscrop/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougmoscrop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougmoscrop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougmoscrop/subscriptions",
      "organizations_url": "https://api.github.com/users/dougmoscrop/orgs",
      "repos_url": "https://api.github.com/users/dougmoscrop/repos",
      "events_url": "https://api.github.com/users/dougmoscrop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougmoscrop/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-30T18:52:26Z",
    "updated_at": "2014-10-30T21:18:58Z",
    "closed_at": "2014-10-30T21:18:58Z",
    "body": "Bah, nevermind I see it has been discussed already. My 'use case' was just to inline use a parameter parser.\r\n\r\nBut after reading the other issue, I think a serial_middleware library might be the right approach"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2424",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2424/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2424/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2424/events",
    "html_url": "https://github.com/strongloop/express/pull/2424",
    "id": 47308646,
    "number": 2424,
    "title": "gratipay url fixed ;)",
    "user": {
      "login": "jaimeagudo",
      "id": 4053914,
      "avatar_url": "https://avatars.githubusercontent.com/u/4053914?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaimeagudo",
      "html_url": "https://github.com/jaimeagudo",
      "followers_url": "https://api.github.com/users/jaimeagudo/followers",
      "following_url": "https://api.github.com/users/jaimeagudo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaimeagudo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaimeagudo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaimeagudo/subscriptions",
      "organizations_url": "https://api.github.com/users/jaimeagudo/orgs",
      "repos_url": "https://api.github.com/users/jaimeagudo/repos",
      "events_url": "https://api.github.com/users/jaimeagudo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaimeagudo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-30T18:22:50Z",
    "updated_at": "2014-11-01T04:10:51Z",
    "closed_at": "2014-11-01T04:10:21Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2424",
      "html_url": "https://github.com/strongloop/express/pull/2424",
      "diff_url": "https://github.com/strongloop/express/pull/2424.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2424.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2423",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2423/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2423/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2423/events",
    "html_url": "https://github.com/strongloop/express/issues/2423",
    "id": 47280983,
    "number": 2423,
    "title": "Calling next() without a callback causes an error",
    "user": {
      "login": "iq-dot",
      "id": 3438620,
      "avatar_url": "https://avatars.githubusercontent.com/u/3438620?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iq-dot",
      "html_url": "https://github.com/iq-dot",
      "followers_url": "https://api.github.com/users/iq-dot/followers",
      "following_url": "https://api.github.com/users/iq-dot/following{/other_user}",
      "gists_url": "https://api.github.com/users/iq-dot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iq-dot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iq-dot/subscriptions",
      "organizations_url": "https://api.github.com/users/iq-dot/orgs",
      "repos_url": "https://api.github.com/users/iq-dot/repos",
      "events_url": "https://api.github.com/users/iq-dot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iq-dot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-10-30T15:05:25Z",
    "updated_at": "2014-10-30T16:43:21Z",
    "closed_at": "2014-10-30T15:40:34Z",
    "body": "Hi Guys,\r\n\r\nI have an issue where I have two routes that utilize the same controller function:\r\n```js\r\napp.route('route1').post(callback1);\r\napp.route('route2').post(callback1, callback2);\r\n```\r\nAs you can see on route1 consists of just a single callback function,  and route2 contains a chain of two callbacks.\r\n\r\nCallback1 returns a response on the 'res' object and calls next(), callback2 does nothing on the res object, it primarily reads some data from req and does some processing.\r\n\r\nSo route2 works fine, however route1 causes the 'Error: can set headers...' primarily because there is no callback from calling next().\r\n\r\nIs this expected behaviour or there is a graceful way to handle this? As in just silently fail if there is no callback in the chain?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2422",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2422/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2422/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2422/events",
    "html_url": "https://github.com/strongloop/express/pull/2422",
    "id": 47164242,
    "number": 2422,
    "title": "Optional custom json replacer/spaces per response",
    "user": {
      "login": "rubenstolk",
      "id": 692644,
      "avatar_url": "https://avatars.githubusercontent.com/u/692644?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubenstolk",
      "html_url": "https://github.com/rubenstolk",
      "followers_url": "https://api.github.com/users/rubenstolk/followers",
      "following_url": "https://api.github.com/users/rubenstolk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubenstolk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubenstolk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubenstolk/subscriptions",
      "organizations_url": "https://api.github.com/users/rubenstolk/orgs",
      "repos_url": "https://api.github.com/users/rubenstolk/repos",
      "events_url": "https://api.github.com/users/rubenstolk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubenstolk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 27,
    "created_at": "2014-10-29T15:43:11Z",
    "updated_at": "2014-12-12T17:44:58Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2422",
      "html_url": "https://github.com/strongloop/express/pull/2422",
      "diff_url": "https://github.com/strongloop/express/pull/2422.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2422.patch"
    },
    "body": "In some cases it is useful to be able to overwrite the json replacer at response level, in the end it is something related to the response.\r\n\r\nThis change also makes it possible to simply say: `res.jsonReplacer = null; res.json(data);` to prevent the jsonReplacer from kicking in."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2421",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2421/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2421/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2421/events",
    "html_url": "https://github.com/strongloop/express/pull/2421",
    "id": 47108282,
    "number": 2421,
    "title": "Fix fqdn detection when stripping prefixes from routes",
    "user": {
      "login": "aredridel",
      "id": 2876,
      "avatar_url": "https://avatars.githubusercontent.com/u/2876?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aredridel",
      "html_url": "https://github.com/aredridel",
      "followers_url": "https://api.github.com/users/aredridel/followers",
      "following_url": "https://api.github.com/users/aredridel/following{/other_user}",
      "gists_url": "https://api.github.com/users/aredridel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aredridel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aredridel/subscriptions",
      "organizations_url": "https://api.github.com/users/aredridel/orgs",
      "repos_url": "https://api.github.com/users/aredridel/repos",
      "events_url": "https://api.github.com/users/aredridel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aredridel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/bug",
        "name": "bug",
        "color": "fc2929"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 16,
    "created_at": "2014-10-29T03:40:49Z",
    "updated_at": "2014-10-29T05:20:23Z",
    "closed_at": "2014-10-29T04:33:32Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2421",
      "html_url": "https://github.com/strongloop/express/pull/2421",
      "diff_url": "https://github.com/strongloop/express/pull/2421.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2421.patch"
    },
    "body": "A URL as a parameter (unescaped, so `://` shows) would cause too much of\nthe URL to be chopped, assuming the entire URL through the parameter was\na prefix to be maintained as the 'protocol and host' of the path."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2420",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2420/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2420/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2420/events",
    "html_url": "https://github.com/strongloop/express/issues/2420",
    "id": 47083924,
    "number": 2420,
    "title": "Missing application/octet-stream header for .end()",
    "user": {
      "login": "arcanis",
      "id": 1037931,
      "avatar_url": "https://avatars.githubusercontent.com/u/1037931?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arcanis",
      "html_url": "https://github.com/arcanis",
      "followers_url": "https://api.github.com/users/arcanis/followers",
      "following_url": "https://api.github.com/users/arcanis/following{/other_user}",
      "gists_url": "https://api.github.com/users/arcanis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arcanis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arcanis/subscriptions",
      "organizations_url": "https://api.github.com/users/arcanis/orgs",
      "repos_url": "https://api.github.com/users/arcanis/repos",
      "events_url": "https://api.github.com/users/arcanis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arcanis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2014-10-28T21:29:02Z",
    "updated_at": "2014-10-28T22:11:15Z",
    "closed_at": "2014-10-28T21:32:07Z",
    "body": "When using `res.end(new Buffer())`, the Content-Type is unset. I think it should set the application/octet-stream mime type, as does the send method."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2419",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2419/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2419/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2419/events",
    "html_url": "https://github.com/strongloop/express/issues/2419",
    "id": 47071580,
    "number": 2419,
    "title": "Proposal: Middleware Transform Hook",
    "user": {
      "login": "jmar777",
      "id": 183199,
      "avatar_url": "https://avatars.githubusercontent.com/u/183199?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmar777",
      "html_url": "https://github.com/jmar777",
      "followers_url": "https://api.github.com/users/jmar777/followers",
      "following_url": "https://api.github.com/users/jmar777/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmar777/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmar777/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmar777/subscriptions",
      "organizations_url": "https://api.github.com/users/jmar777/orgs",
      "repos_url": "https://api.github.com/users/jmar777/repos",
      "events_url": "https://api.github.com/users/jmar777/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmar777/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 19,
    "created_at": "2014-10-28T19:40:37Z",
    "updated_at": "2014-11-01T19:04:17Z",
    "closed_at": "2014-10-28T20:24:19Z",
    "body": "Motivation: provide a public API that can be consumed by modules like [suspend-express](https://github.com/jmar777/suspend-express), [co-express](https://github.com/mciparelli/co-express), etc.\r\n\r\nWith the growing popularity of generators-as-coroutines, it has become desirable to write middleware using generator functions.  E.g.,\r\n\r\n```javascript\r\napp.get('/foo/:id', function*(req, res, next) {\r\n    res.json(yield FooModel.find({ id: req.params.id }));\r\n});\r\n```\r\nCurrently this requires mucking around with [undocumented APIs](https://github.com/jmar777/suspend-express/blob/v0.1.0/lib/suspend-express.js#L12) and [monkey patching](https://github.com/jmar777/suspend-express/blob/v0.1.0/lib/suspend-express.js#L33).\r\n\r\nHowever, if express were to expose, say, an `express.registerHandlerTransform(mapFn)` (I'm sure that name can be improved on), the implementation of these modules could become much more sensible.  E.g.,\r\n\r\n```javascript\r\nexpress.registerHandlerTransform(function(handler) {\r\n    return wrapHandlerInSomeGeneratorRunner(handler);\r\n});\r\n```\r\n\r\nAs convenient as that is, the main advantage isn't really the implementation simplicity, but rather the fact that it's based around a supported API and less likely to break when express is updated.  The performance implications should be negligible, as this is a setup-phase only operation, rather than per-request.\r\n\r\nAdditionally, while I obviously have my own use case in mind here, I would anticipate this API would have several uses outside of the examples provided above, including application-specific transformation logic.\r\n\r\nThoughts?  I'd be happy to get my hands dirty if an API could be agreed on."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2418",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2418/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2418/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2418/events",
    "html_url": "https://github.com/strongloop/express/issues/2418",
    "id": 47009186,
    "number": 2418,
    "title": "API to remove middleware from stack",
    "user": {
      "login": "KidsKilla",
      "id": 50437,
      "avatar_url": "https://avatars.githubusercontent.com/u/50437?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KidsKilla",
      "html_url": "https://github.com/KidsKilla",
      "followers_url": "https://api.github.com/users/KidsKilla/followers",
      "following_url": "https://api.github.com/users/KidsKilla/following{/other_user}",
      "gists_url": "https://api.github.com/users/KidsKilla/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KidsKilla/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KidsKilla/subscriptions",
      "organizations_url": "https://api.github.com/users/KidsKilla/orgs",
      "repos_url": "https://api.github.com/users/KidsKilla/repos",
      "events_url": "https://api.github.com/users/KidsKilla/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KidsKilla/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-28T10:19:36Z",
    "updated_at": "2014-10-28T16:15:51Z",
    "closed_at": "2014-10-28T16:15:29Z",
    "body": "I need to dynamically add/remove routers during app lifetime. So now I need to access private prop `app._router.stack` to remove."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2417",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2417/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2417/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2417/events",
    "html_url": "https://github.com/strongloop/express/pull/2417",
    "id": 46996104,
    "number": 2417,
    "title": "add omitted semicolon",
    "user": {
      "login": "sawyerzhu",
      "id": 4082271,
      "avatar_url": "https://avatars.githubusercontent.com/u/4082271?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sawyerzhu",
      "html_url": "https://github.com/sawyerzhu",
      "followers_url": "https://api.github.com/users/sawyerzhu/followers",
      "following_url": "https://api.github.com/users/sawyerzhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/sawyerzhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sawyerzhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sawyerzhu/subscriptions",
      "organizations_url": "https://api.github.com/users/sawyerzhu/orgs",
      "repos_url": "https://api.github.com/users/sawyerzhu/repos",
      "events_url": "https://api.github.com/users/sawyerzhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sawyerzhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-10-28T07:12:39Z",
    "updated_at": "2014-10-28T16:26:03Z",
    "closed_at": "2014-10-28T15:00:02Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2417",
      "html_url": "https://github.com/strongloop/express/pull/2417",
      "diff_url": "https://github.com/strongloop/express/pull/2417.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2417.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2416",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2416/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2416/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2416/events",
    "html_url": "https://github.com/strongloop/express/pull/2416",
    "id": 46876762,
    "number": 2416,
    "title": "replaces two equals with threequals",
    "user": {
      "login": "Zhang",
      "id": 5522395,
      "avatar_url": "https://avatars.githubusercontent.com/u/5522395?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhang",
      "html_url": "https://github.com/Zhang",
      "followers_url": "https://api.github.com/users/Zhang/followers",
      "following_url": "https://api.github.com/users/Zhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhang/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhang/orgs",
      "repos_url": "https://api.github.com/users/Zhang/repos",
      "events_url": "https://api.github.com/users/Zhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 8,
    "created_at": "2014-10-27T07:19:56Z",
    "updated_at": "2015-01-14T00:38:51Z",
    "closed_at": "2015-01-14T00:38:51Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2416",
      "html_url": "https://github.com/strongloop/express/pull/2416",
      "diff_url": "https://github.com/strongloop/express/pull/2416.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2416.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2415",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2415/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2415/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2415/events",
    "html_url": "https://github.com/strongloop/express/pull/2415",
    "id": 46876625,
    "number": 2415,
    "title": "Replaces two equals with threequals",
    "user": {
      "login": "Zhang",
      "id": 5522395,
      "avatar_url": "https://avatars.githubusercontent.com/u/5522395?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zhang",
      "html_url": "https://github.com/Zhang",
      "followers_url": "https://api.github.com/users/Zhang/followers",
      "following_url": "https://api.github.com/users/Zhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zhang/subscriptions",
      "organizations_url": "https://api.github.com/users/Zhang/orgs",
      "repos_url": "https://api.github.com/users/Zhang/repos",
      "events_url": "https://api.github.com/users/Zhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-10-27T07:17:19Z",
    "updated_at": "2014-10-27T13:07:30Z",
    "closed_at": "2014-10-27T07:18:37Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2415",
      "html_url": "https://github.com/strongloop/express/pull/2415",
      "diff_url": "https://github.com/strongloop/express/pull/2415.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2415.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2414",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2414/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2414/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2414/events",
    "html_url": "https://github.com/strongloop/express/issues/2414",
    "id": 46856728,
    "number": 2414,
    "title": "route() should handle 405 Method not allowed",
    "user": {
      "login": "nnarhinen",
      "id": 265438,
      "avatar_url": "https://avatars.githubusercontent.com/u/265438?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nnarhinen",
      "html_url": "https://github.com/nnarhinen",
      "followers_url": "https://api.github.com/users/nnarhinen/followers",
      "following_url": "https://api.github.com/users/nnarhinen/following{/other_user}",
      "gists_url": "https://api.github.com/users/nnarhinen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nnarhinen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nnarhinen/subscriptions",
      "organizations_url": "https://api.github.com/users/nnarhinen/orgs",
      "repos_url": "https://api.github.com/users/nnarhinen/repos",
      "events_url": "https://api.github.com/users/nnarhinen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nnarhinen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 9,
    "created_at": "2014-10-26T22:13:29Z",
    "updated_at": "2015-02-27T17:37:33Z",
    "closed_at": null,
    "body": "I know this has been discussed in numerous issues here, but not about this specific case.\r\n\r\nIMHO the following code\r\n\r\n```js\r\napp.route('/user/:id').get(oneUser).delete(delUser).put(updateUser);\r\n```\r\n\r\nshould send `405 Method Not Allowed` for a `POST` request to `/user/123`.\r\n\r\nI can of course workaround this easily by adding a `.all(send405)` to all of my `route()` calls but I couldn't find any variable in req that would expose what methods the route does have (for `Allow` header).\r\n\r\nI know there are a ton of ways how `POST /user/123` could still be defined, but if you do call `.route()` then it would be IMO reasonable to believe that it is the only way of  defining methods for that one route.\r\n\r\nSo I suggest three alternative ways how I'd like this to be fixed (in the order of preference):\r\n\r\n1. Make it the default behavior to send a correct 405 response if route() does not have that method.\r\n2. Make it configurable (per router or something) to automatically send 405 responses.\r\n3. Expose configured methods to be self used in `all()`.\r\n\r\nThis most likely will raise the question about 'How about when GET returns 404, then POST should also return 404 even though with a different id it should send 405.'\r\n\r\nI kinda agree, and this is why I add first in chain a method:\r\n\r\n```js\r\nvar withUser = function(req, res, next) {\r\n  fetchUser(req.params.id, function(err, user) {\r\n    if (err) return next(err);\r\n    if (!user) return res.status(404).end();\r\n    req.user = user;\r\n    next();\r\n  });\r\n};\r\n\r\nrouter.route('/users/:id').all(withUser).get(sendUser).put(updateUser).delete(deleteUser).all(send405);\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2413",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2413/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2413/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2413/events",
    "html_url": "https://github.com/strongloop/express/issues/2413",
    "id": 46819802,
    "number": 2413,
    "title": "Why do you avoid classes and prototype?",
    "user": {
      "login": "ibc",
      "id": 16191,
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 11,
    "created_at": "2014-10-25T18:44:03Z",
    "updated_at": "2014-11-10T14:34:14Z",
    "closed_at": "2014-10-25T19:51:20Z",
    "body": "Hi, please don't take me wrong but IMHO the code is difficult to follow. For example, `router/index.js` is supposed to define a **class** (the \"Router\" class), but the code avoids using a common \"class constructor\" and instead the \"constructor\" returns another function:\r\n\r\n```\r\nvar proto = module.exports = function(options) {\r\n  [...]\r\n\r\n  function router(req, res, next) {\r\n    router.handle(req, res, next);\r\n  }\r\n\r\n  [...]\r\n\r\n  return router;\r\n};\r\n```\r\n\r\nA function that returns another function. For me this is too exotic and hard to follow.\r\n\r\nAnd then, instead of adding class instance **methods** using `Router.prototype.xxxx = function() {}` the code defines those methods with `proto.method_name = function() {}`.\r\n\r\nTaking a look to the `use()` method defined as `proto.use = function(fn) {}`, it uses `this` internally. In this no-context it is so hard to determine what `this` is.\r\n\r\nI know this is JavaScript and that JavaScript developers hate the `new` keyword and anything related to classes and OO, but what is so bad with using something really readable like the following?:\r\n\r\n```\r\nmodule.exports = Router;\r\n\r\nfunction Router(options) {\r\n  [...]\r\n  this.stack = [];\r\n}\r\n\r\nRouter.prototype.use = function(fn) {\r\n  // do stuff with fn and this.stack instead of \"proto.stack\" which nobody knows what it is.\r\n};\r\n```\r\n\r\nDon't take me wrong please, I'm just tying to understand why this masterpiece of the software, which exposes an excellent API, internally avoids using common programming practices."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2412",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2412/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2412/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2412/events",
    "html_url": "https://github.com/strongloop/express/issues/2412",
    "id": 46701468,
    "number": 2412,
    "title": "Recursive route matching can overflow stack",
    "user": {
      "login": "ahamid",
      "id": 77031,
      "avatar_url": "https://avatars.githubusercontent.com/u/77031?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahamid",
      "html_url": "https://github.com/ahamid",
      "followers_url": "https://api.github.com/users/ahamid/followers",
      "following_url": "https://api.github.com/users/ahamid/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahamid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahamid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahamid/subscriptions",
      "organizations_url": "https://api.github.com/users/ahamid/orgs",
      "repos_url": "https://api.github.com/users/ahamid/repos",
      "events_url": "https://api.github.com/users/ahamid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahamid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 20,
    "created_at": "2014-10-24T03:32:38Z",
    "updated_at": "2015-01-14T03:28:59Z",
    "closed_at": "2015-01-14T03:28:59Z",
    "body": "re: express@4.10.0, I searched but could not find a similar issue\r\n\r\nSee simple demo here: https://gist.github.com/ahamid/4064dc457a80ced1ab29\r\n\r\nAfter upgrading from express 3.x to 4.x, I noticed some behavior that was really hard to track down.  On some routes Express would throw `RangeError: Maximum call stack size exceeded`.  After some experimentation I found that changing routes of the style:\r\n\r\n```js\r\napp.post(\"thepath\", handler);\r\napp.put(\"thepath\", handler);\r\n```\r\nto\r\n```js\r\napp.route(\"thepath\").post(handler)\r\n                     .put(handler);\r\n```\r\n\r\nsuperficially made the problem go away; I assumed it had something to do with mapping multiple verbs to the same path or handler.\r\n\r\nIt turns out though that the problem is simply that Express is matching routes recursively, not iteratively, so if you just happen to request a route that was mapped later instead of earlier you run the risk of the `RangeError: Maximum call stack size exceeded`.  Obviously this depends on the stack size for the node process, how many internal calls Express makes, and chiefly the number of routes you have, which will likely have to be in the thousands.  In my particular case I am exposing a large dataset on the file system via Express and registering 3 handlers each (1400 * 3 = 4200) which turns out to be enough routes to overflow.\r\n\r\nThe behavior I would expect is that route matching is performed iteratively, and should work irrespective of # of routes mapped.\r\n\r\nThe questions here then are:\r\n1) are my assumptions correct about Express route matching implementation\r\n2) is this actually a problem that Express is interested in solving, or is the answer \"no. don't do that (map thousands of routes)\" - in that case I would humbly request a note about implementation in the docs.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2411",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2411/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2411/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2411/events",
    "html_url": "https://github.com/strongloop/express/issues/2411",
    "id": 46621183,
    "number": 2411,
    "title": "Router As Separate Module",
    "user": {
      "login": "wesleytodd",
      "id": 1027776,
      "avatar_url": "https://avatars.githubusercontent.com/u/1027776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesleytodd",
      "html_url": "https://github.com/wesleytodd",
      "followers_url": "https://api.github.com/users/wesleytodd/followers",
      "following_url": "https://api.github.com/users/wesleytodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesleytodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesleytodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesleytodd/subscriptions",
      "organizations_url": "https://api.github.com/users/wesleytodd/orgs",
      "repos_url": "https://api.github.com/users/wesleytodd/repos",
      "events_url": "https://api.github.com/users/wesleytodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesleytodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/strongloop/express/milestones/11",
      "html_url": "https://github.com/strongloop/express/milestones/5.0",
      "labels_url": "https://api.github.com/repos/strongloop/express/milestones/11/labels",
      "id": 739972,
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 1,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2014-11-26T01:36:03Z",
      "due_on": "2015-01-01T08:00:00Z",
      "closed_at": null
    },
    "comments": 20,
    "created_at": "2014-10-23T12:55:39Z",
    "updated_at": "2014-12-22T16:48:10Z",
    "closed_at": null,
    "body": "I searched through the issues but couldn't find any previous discussion of this.  Has there been any talk, or is there currently, of moving the Router out into a stand-alone module?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2410",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2410/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2410/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2410/events",
    "html_url": "https://github.com/strongloop/express/pull/2410",
    "id": 46592544,
    "number": 2410,
    "title": "Explicitly convert undefined to null for res.json",
    "user": {
      "login": "xaka",
      "id": 504813,
      "avatar_url": "https://avatars.githubusercontent.com/u/504813?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xaka",
      "html_url": "https://github.com/xaka",
      "followers_url": "https://api.github.com/users/xaka/followers",
      "following_url": "https://api.github.com/users/xaka/following{/other_user}",
      "gists_url": "https://api.github.com/users/xaka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xaka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xaka/subscriptions",
      "organizations_url": "https://api.github.com/users/xaka/orgs",
      "repos_url": "https://api.github.com/users/xaka/repos",
      "events_url": "https://api.github.com/users/xaka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xaka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 18,
    "created_at": "2014-10-23T06:21:07Z",
    "updated_at": "2015-02-18T06:27:59Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2410",
      "html_url": "https://github.com/strongloop/express/pull/2410",
      "diff_url": "https://github.com/strongloop/express/pull/2410.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2410.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2409",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2409/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2409/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2409/events",
    "html_url": "https://github.com/strongloop/express/pull/2409",
    "id": 46585390,
    "number": 2409,
    "title": "maybe a spelling mistake",
    "user": {
      "login": "xishvai",
      "id": 1906031,
      "avatar_url": "https://avatars.githubusercontent.com/u/1906031?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xishvai",
      "html_url": "https://github.com/xishvai",
      "followers_url": "https://api.github.com/users/xishvai/followers",
      "following_url": "https://api.github.com/users/xishvai/following{/other_user}",
      "gists_url": "https://api.github.com/users/xishvai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xishvai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xishvai/subscriptions",
      "organizations_url": "https://api.github.com/users/xishvai/orgs",
      "repos_url": "https://api.github.com/users/xishvai/repos",
      "events_url": "https://api.github.com/users/xishvai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xishvai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-10-23T03:33:54Z",
    "updated_at": "2014-10-23T05:41:14Z",
    "closed_at": "2014-10-23T03:36:23Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2409",
      "html_url": "https://github.com/strongloop/express/pull/2409",
      "diff_url": "https://github.com/strongloop/express/pull/2409.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2409.patch"
    },
    "body": ""
  }
]
