[
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2348",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2348/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2348/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2348/events",
    "html_url": "https://github.com/strongloop/express/issues/2348",
    "id": 42182762,
    "number": 2348,
    "title": "Update documentation for res.redirect",
    "user": {
      "login": "naholyr",
      "id": 214067,
      "avatar_url": "https://avatars.githubusercontent.com/u/214067?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naholyr",
      "html_url": "https://github.com/naholyr",
      "followers_url": "https://api.github.com/users/naholyr/followers",
      "following_url": "https://api.github.com/users/naholyr/following{/other_user}",
      "gists_url": "https://api.github.com/users/naholyr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naholyr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naholyr/subscriptions",
      "organizations_url": "https://api.github.com/users/naholyr/orgs",
      "repos_url": "https://api.github.com/users/naholyr/repos",
      "events_url": "https://api.github.com/users/naholyr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naholyr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-08T10:31:33Z",
    "updated_at": "2014-09-12T20:26:13Z",
    "closed_at": "2014-09-12T20:26:13Z",
    "body": "I juste spent a fair amount of time finding out why my usage of `res.redirect` did not work, double-checking documentation. I read the code and didn't get any clue on how mountpath-relative redirects were supposed to work, and in fact #2100 & #2086 confirms it's not supposed to work.\r\n\r\nHere is the demo pointing out the guilty sentence: https://gist.github.com/naholyr/f6a2903d72d495db6ab7\r\n\r\nI think there should be two changes:\r\n\r\n* At least remove all this misleading information about mounted apps in this section of documentation\r\n* Maybe add a convenient API to generate absolute mountpath-aware paths, I think `app.path` could be a good candidate\r\n\r\n```js\r\nrootApp.path()                  // → \"/\"\r\nmountedApp.path()               // → \"/mountpath\"\r\n// Add support for \r\nrootApp.path('other/path')      // → \"/other/path\"\r\nmountedApp.path('other/path')   // → \"/mountpath/other/path\"\r\nrootApp.path('/other/path')     // → \"/other/path\"\r\nmountedApp.path('/other/path')  // → \"/mountpath/other/path\"\r\n```\r\n\r\nIn my project I carefully add a slash in my mountpath (`app.use('/path/', otherApp)`) and use `res.redirect(app.path() + 'other/path')` but this trailing slash keeps bothering me ;)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2347",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2347/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2347/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2347/events",
    "html_url": "https://github.com/strongloop/express/pull/2347",
    "id": 42122230,
    "number": 2347,
    "title": "Remove unnecessary referencing to `this`",
    "user": {
      "login": "lemmy-",
      "id": 5200135,
      "avatar_url": "https://avatars.githubusercontent.com/u/5200135?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemmy-",
      "html_url": "https://github.com/lemmy-",
      "followers_url": "https://api.github.com/users/lemmy-/followers",
      "following_url": "https://api.github.com/users/lemmy-/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemmy-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemmy-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemmy-/subscriptions",
      "organizations_url": "https://api.github.com/users/lemmy-/orgs",
      "repos_url": "https://api.github.com/users/lemmy-/repos",
      "events_url": "https://api.github.com/users/lemmy-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemmy-/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-06T17:54:19Z",
    "updated_at": "2014-10-24T02:31:37Z",
    "closed_at": "2014-10-24T02:31:37Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2347",
      "html_url": "https://github.com/strongloop/express/pull/2347",
      "diff_url": "https://github.com/strongloop/express/pull/2347.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2347.patch"
    },
    "body": "Hey :)\r\nI've noticed some places in the code where it isn't really necessary to store `this` in a variable. I've passed current context to `forEach` loops as the second argument just to make things little more readable."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2346",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2346/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2346/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2346/events",
    "html_url": "https://github.com/strongloop/express/issues/2346",
    "id": 42114273,
    "number": 2346,
    "title": "pass app as `this` in middleware and route?",
    "user": {
      "login": "benpptung",
      "id": 364314,
      "avatar_url": "https://avatars.githubusercontent.com/u/364314?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benpptung",
      "html_url": "https://github.com/benpptung",
      "followers_url": "https://api.github.com/users/benpptung/followers",
      "following_url": "https://api.github.com/users/benpptung/following{/other_user}",
      "gists_url": "https://api.github.com/users/benpptung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benpptung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benpptung/subscriptions",
      "organizations_url": "https://api.github.com/users/benpptung/orgs",
      "repos_url": "https://api.github.com/users/benpptung/repos",
      "events_url": "https://api.github.com/users/benpptung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benpptung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 13,
    "created_at": "2014-09-06T10:58:20Z",
    "updated_at": "2014-10-13T14:38:11Z",
    "closed_at": null,
    "body": "I am wondering if it would be better if\r\nexpress can pass `app` as `this` in the middleware and route?\r\n\r\nCurrently, I've noticed that `this` is `global` in express, it is a waste and we can only get app via req.app or res.app. I might be picky lol, `this` is shorter than req.app, and it makes sense in a middleware and route.\r\n\r\nJust an idea :) "
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2345",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2345/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2345/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2345/events",
    "html_url": "https://github.com/strongloop/express/pull/2345",
    "id": 42065368,
    "number": 2345,
    "title": "Removed unused dependency.",
    "user": {
      "login": "lemmy-",
      "id": 5200135,
      "avatar_url": "https://avatars.githubusercontent.com/u/5200135?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemmy-",
      "html_url": "https://github.com/lemmy-",
      "followers_url": "https://api.github.com/users/lemmy-/followers",
      "following_url": "https://api.github.com/users/lemmy-/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemmy-/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemmy-/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemmy-/subscriptions",
      "organizations_url": "https://api.github.com/users/lemmy-/orgs",
      "repos_url": "https://api.github.com/users/lemmy-/repos",
      "events_url": "https://api.github.com/users/lemmy-/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemmy-/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-05T16:36:52Z",
    "updated_at": "2014-09-09T00:59:45Z",
    "closed_at": "2014-09-09T00:59:34Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2345",
      "html_url": "https://github.com/strongloop/express/pull/2345",
      "diff_url": "https://github.com/strongloop/express/pull/2345.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2345.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2344",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2344/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2344/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2344/events",
    "html_url": "https://github.com/strongloop/express/pull/2344",
    "id": 41856963,
    "number": 2344,
    "title": "Fixed rawgit URL in example",
    "user": {
      "login": "viniciuspinto",
      "id": 121031,
      "avatar_url": "https://avatars.githubusercontent.com/u/121031?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/viniciuspinto",
      "html_url": "https://github.com/viniciuspinto",
      "followers_url": "https://api.github.com/users/viniciuspinto/followers",
      "following_url": "https://api.github.com/users/viniciuspinto/following{/other_user}",
      "gists_url": "https://api.github.com/users/viniciuspinto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/viniciuspinto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/viniciuspinto/subscriptions",
      "organizations_url": "https://api.github.com/users/viniciuspinto/orgs",
      "repos_url": "https://api.github.com/users/viniciuspinto/repos",
      "events_url": "https://api.github.com/users/viniciuspinto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/viniciuspinto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/examples",
        "name": "examples",
        "color": "5319e7"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2014-09-03T19:35:45Z",
    "updated_at": "2014-09-08T23:32:38Z",
    "closed_at": "2014-09-08T23:32:38Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2344",
      "html_url": "https://github.com/strongloop/express/pull/2344",
      "diff_url": "https://github.com/strongloop/express/pull/2344.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2344.patch"
    },
    "body": "It was using the old \"rawgithub.com\" URL and the example was just returning a 301 error page."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2343",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2343/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2343/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2343/events",
    "html_url": "https://github.com/strongloop/express/issues/2343",
    "id": 41840224,
    "number": 2343,
    "title": "Cannot get eot file of bootstrap in public document",
    "user": {
      "login": "backlost",
      "id": 4522159,
      "avatar_url": "https://avatars.githubusercontent.com/u/4522159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/backlost",
      "html_url": "https://github.com/backlost",
      "followers_url": "https://api.github.com/users/backlost/followers",
      "following_url": "https://api.github.com/users/backlost/following{/other_user}",
      "gists_url": "https://api.github.com/users/backlost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/backlost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/backlost/subscriptions",
      "organizations_url": "https://api.github.com/users/backlost/orgs",
      "repos_url": "https://api.github.com/users/backlost/repos",
      "events_url": "https://api.github.com/users/backlost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/backlost/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2014-09-03T17:06:08Z",
    "updated_at": "2014-09-03T17:46:44Z",
    "closed_at": "2014-09-03T17:46:44Z",
    "body": "I created a fonts document in public and moves fonts files of bootstrap here.\r\nwhen the server started. the css depends on the file can't work well. "
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2342",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2342/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2342/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2342/events",
    "html_url": "https://github.com/strongloop/express/pull/2342",
    "id": 41772219,
    "number": 2342,
    "title": "tests: fix tests not working with node v0.12",
    "user": {
      "login": "misterdjules",
      "id": 811047,
      "avatar_url": "https://avatars.githubusercontent.com/u/811047?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/misterdjules",
      "html_url": "https://github.com/misterdjules",
      "followers_url": "https://api.github.com/users/misterdjules/followers",
      "following_url": "https://api.github.com/users/misterdjules/following{/other_user}",
      "gists_url": "https://api.github.com/users/misterdjules/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/misterdjules/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/misterdjules/subscriptions",
      "organizations_url": "https://api.github.com/users/misterdjules/orgs",
      "repos_url": "https://api.github.com/users/misterdjules/repos",
      "events_url": "https://api.github.com/users/misterdjules/events{/privacy}",
      "received_events_url": "https://api.github.com/users/misterdjules/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 24,
    "created_at": "2014-09-03T01:00:04Z",
    "updated_at": "2014-09-15T16:27:46Z",
    "closed_at": "2014-09-15T16:20:59Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2342",
      "html_url": "https://github.com/strongloop/express/pull/2342",
      "diff_url": "https://github.com/strongloop/express/pull/2342.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2342.patch"
    },
    "body": "Currently, test/req.ip.js assumes that the connection between the client\r\nand the server is an IPv4 connection. However, depending on the\r\nconfiguration of the host where this test runs, the connection can be an\r\nIPv4 one or an IPv6 one using an IPv4 mapped address. In the future, it\r\ncould also be a \"full\" IPv6 connection.\r\n\r\nThis change makes this test handle any type of address."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2341",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2341/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2341/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2341/events",
    "html_url": "https://github.com/strongloop/express/pull/2341",
    "id": 41735186,
    "number": 2341,
    "title": "adding methodOverride to examples/route-separation/index.js",
    "user": {
      "login": "sgardn",
      "id": 1424950,
      "avatar_url": "https://avatars.githubusercontent.com/u/1424950?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgardn",
      "html_url": "https://github.com/sgardn",
      "followers_url": "https://api.github.com/users/sgardn/followers",
      "following_url": "https://api.github.com/users/sgardn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgardn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgardn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgardn/subscriptions",
      "organizations_url": "https://api.github.com/users/sgardn/orgs",
      "repos_url": "https://api.github.com/users/sgardn/repos",
      "events_url": "https://api.github.com/users/sgardn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgardn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/examples",
        "name": "examples",
        "color": "5319e7"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-02T17:43:15Z",
    "updated_at": "2014-09-09T00:53:20Z",
    "closed_at": "2014-09-09T00:53:02Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2341",
      "html_url": "https://github.com/strongloop/express/pull/2341",
      "diff_url": "https://github.com/strongloop/express/pull/2341.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2341.patch"
    },
    "body": "when trying to run this example, methodOverride is undefined. requiring it."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2340",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2340/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2340/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2340/events",
    "html_url": "https://github.com/strongloop/express/issues/2340",
    "id": 41720869,
    "number": 2340,
    "title": "Using .end() causes Firefox No Element Found error",
    "user": {
      "login": "mlallan1307",
      "id": 7757725,
      "avatar_url": "https://avatars.githubusercontent.com/u/7757725?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mlallan1307",
      "html_url": "https://github.com/mlallan1307",
      "followers_url": "https://api.github.com/users/mlallan1307/followers",
      "following_url": "https://api.github.com/users/mlallan1307/following{/other_user}",
      "gists_url": "https://api.github.com/users/mlallan1307/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mlallan1307/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mlallan1307/subscriptions",
      "organizations_url": "https://api.github.com/users/mlallan1307/orgs",
      "repos_url": "https://api.github.com/users/mlallan1307/repos",
      "events_url": "https://api.github.com/users/mlallan1307/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mlallan1307/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 9,
    "created_at": "2014-09-02T15:20:44Z",
    "updated_at": "2014-09-02T16:31:08Z",
    "closed_at": "2014-09-02T15:53:29Z",
    "body": "In the event where you want to just send back an error code the proper way seems to be as follows:\r\n\r\n    res.status(500).end();\r\n\r\nHowever this results in an error in Firebug that says \"no element found\" and gives \"Server path name\":1 and this links to an empty file referring to the path that it tried on the server. Firefox expects the response to be valid XML with a single root element. If it is not, Firefox issues the \"no element found\" error.\r\n\r\nI was able to avoid this by instead doing:\r\n\r\n    res.set({ 'Content-Type': 'text/plain'});\r\n    res.status(500).end();\r\n\r\nOR\r\n\r\n    res.status(500).send({});\r\n\r\nWhat is the preferred way to handle this? Could .end() be changed to set the content type to \"text/plain\"?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2339",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2339/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2339/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2339/events",
    "html_url": "https://github.com/strongloop/express/issues/2339",
    "id": 41700882,
    "number": 2339,
    "title": "'listening' event for app?",
    "user": {
      "login": "deitch",
      "id": 282526,
      "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deitch",
      "html_url": "https://github.com/deitch",
      "followers_url": "https://api.github.com/users/deitch/followers",
      "following_url": "https://api.github.com/users/deitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
      "organizations_url": "https://api.github.com/users/deitch/orgs",
      "repos_url": "https://api.github.com/users/deitch/repos",
      "events_url": "https://api.github.com/users/deitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-09-02T11:50:13Z",
    "updated_at": "2014-09-02T14:10:29Z",
    "closed_at": "2014-09-02T12:51:07Z",
    "body": "The `http.Server` supports a `listening` event, so you can do:\r\n\r\n````JavaScript\r\nvar server = http.createServer(callback);\r\nserver.on('listening',someHandler);\r\nserver.listen(process.env.PORT);\r\n````\r\n\r\nCan we support the same in express?\r\n\r\n````JavaScript\r\nvar app = express();\r\n// lots of config lines\r\napp.on('listening',someHandler);\r\napp.listen(process.env.PORT);\r\n````\r\n\r\nSupport both the immediate function argument and the event styles? Granted, `app.listen()` returns on `http.Server` object, but that means we have to do it on the return from `app.listen()` rather than on the app itself?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2332",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2332/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2332/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2332/events",
    "html_url": "https://github.com/strongloop/express/issues/2332",
    "id": 41549811,
    "number": 2332,
    "title": "Common API documentation format for all Node packages",
    "user": {
      "login": "Kapeli",
      "id": 1445635,
      "avatar_url": "https://avatars.githubusercontent.com/u/1445635?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kapeli",
      "html_url": "https://github.com/Kapeli",
      "followers_url": "https://api.github.com/users/Kapeli/followers",
      "following_url": "https://api.github.com/users/Kapeli/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kapeli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kapeli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kapeli/subscriptions",
      "organizations_url": "https://api.github.com/users/Kapeli/orgs",
      "repos_url": "https://api.github.com/users/Kapeli/repos",
      "events_url": "https://api.github.com/users/Kapeli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kapeli/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 13,
    "created_at": "2014-08-30T00:19:32Z",
    "updated_at": "2014-09-02T15:26:25Z",
    "closed_at": "2014-08-30T00:35:27Z",
    "body": "I'm the developer behind [Dash](http://kapeli.com/dash), an API documentation browser.\r\n\r\nThe current state of node packages is that each package has its own custom format for providing documentation (most in a README). This makes things extremely hard if you want to collect all these docs under one app and also an inconvenience for users, as they have to learn how to reference and navigate each doc format of each package they use.\r\n\r\nI've asked the NPM team to promote a doc format that node packages should use in hope that the community would embrace it and they've asked me to contact the maintainers of the most popular packages and get them to agree on a format, and if it gets popular with the community it will get supported by NPM as well. The NPM issue is tracked here: https://github.com/npm/newww/issues/100.\r\n\r\nSome questions:\r\n1. Have you considered using an API documentation generator for your node package? I've heard of JSDoc over and over, but I've never seen a node package use it for their docs\r\n2. Do you think it would be better if the APIs of node packages would be documented inside the code (where a doc generator would turn them into actual docs), and the READMEs be used just as a guide?\r\n3. Any thoughts about this issue?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2328",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2328/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2328/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2328/events",
    "html_url": "https://github.com/strongloop/express/issues/2328",
    "id": 41348598,
    "number": 2328,
    "title": "How to render a 500 response after an uncaught error in express 4?",
    "user": {
      "login": "sidazhang",
      "id": 3519115,
      "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sidazhang",
      "html_url": "https://github.com/sidazhang",
      "followers_url": "https://api.github.com/users/sidazhang/followers",
      "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
      "organizations_url": "https://api.github.com/users/sidazhang/orgs",
      "repos_url": "https://api.github.com/users/sidazhang/repos",
      "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sidazhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 8,
    "created_at": "2014-08-28T01:53:06Z",
    "updated_at": "2014-09-15T12:20:48Z",
    "closed_at": "2014-08-28T01:59:54Z",
    "body": "When there is an error thrown inside an asynchronous function, the error does not go to the error middleware and instead goes to nowhere and the connection gets stuck\r\n\r\ne.g.: \r\n```js\r\napp.get('/', function(req, res) {\r\n   doSomethingAsync(function(err) {\r\n      throw new Error('some async exception is thrown');\r\n   })\r\n})\r\n```\r\n\r\nAnd then this happens:\r\n```\r\nPossibly unhandled Error: some async exception is thrown\r\n    at ...stacktrace...:95:9\r\nFrom previous event:\r\n    at ...stacktrace...:82:6)\r\n    at ...stacktrace...:47:6)\r\n    at ...stacktrace...:94:18)\r\n```\r\nWhen an exception is thrown from within an async process, the response basically hangs until a timeout.\r\n\r\nI have tried a bunch of domain middlewares however they all only work for express 3. I am currently on express 4.5 and I am wondering if express had changed that domain no longer works.\r\n\r\nMiddlewares: https://github.com/brianc/node-domain-middleware"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2323",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2323/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2323/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2323/events",
    "html_url": "https://github.com/strongloop/express/pull/2323",
    "id": 41219852,
    "number": 2323,
    "title": "Add support for inherited param handlers",
    "user": {
      "login": "sixlettervariables",
      "id": 8238690,
      "avatar_url": "https://avatars.githubusercontent.com/u/8238690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sixlettervariables",
      "html_url": "https://github.com/sixlettervariables",
      "followers_url": "https://api.github.com/users/sixlettervariables/followers",
      "following_url": "https://api.github.com/users/sixlettervariables/following{/other_user}",
      "gists_url": "https://api.github.com/users/sixlettervariables/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sixlettervariables/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sixlettervariables/subscriptions",
      "organizations_url": "https://api.github.com/users/sixlettervariables/orgs",
      "repos_url": "https://api.github.com/users/sixlettervariables/repos",
      "events_url": "https://api.github.com/users/sixlettervariables/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sixlettervariables/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-08-26T20:47:56Z",
    "updated_at": "2014-11-21T14:44:39Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2323",
      "html_url": "https://github.com/strongloop/express/pull/2323",
      "diff_url": "https://github.com/strongloop/express/pull/2323.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2323.patch"
    },
    "body": "This is a first cut at inherited param handlers. Likely this comes with corner cases, as I'm not an express internals expert, but it appears to work in straightforward cases. An additional parameter for `Router` is introduced to control this behavior:\r\n\r\n```javascript\r\nvar router = express.Router({ inheritParamHandlers: true });\r\n\r\napp.param('user', function (req, res, next, id) {\r\n  User.findOne(id, function (err, user) {\r\n    if (err) return next(err);\r\n    req.params.user = user;\r\n    next();\r\n  });\r\n});\r\n\r\nrouter.param('photo', function (req, res, next, id) {\r\n  Photo.findOne(id, function (err, photo) {\r\n    if (err) return next(err);\r\n    req.params.photo = photo;\r\n    next();\r\n  });\r\n});\r\n\r\nrouter.post('/update-tags/:photo', function (req, res) {\r\n  // Error: contrived example\r\n  req.params.user.update(req.params.photo, req.body, function (err) {\r\n    if (err) return res.status(500).json({ status: 'error', error: err.message });\r\n    return res.status(200).json({ status: 'updated' });\r\n  });\r\n});\r\n\r\napp.use('/users/:user', router);\r\n```\r\n\r\nI've made it separate from `mergeParams`, as this may cause unexpected behavior for users if enabled via that option. However, it does enable `mergeParams` implicitly if used. A case could be made to consolidate the two into a single option which always does both as `mergeParams` was only publicly documented recently so perhaps the exposure is small.\r\n\r\nThe parameter handlers are kept in the `Router` but now follow the request throughout the `_router.handle()` path. This *should* allow different behavior if a router is attached to different apps or paths.\r\n\r\nThis would address issue #2151."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2322",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2322/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2322/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2322/events",
    "html_url": "https://github.com/strongloop/express/issues/2322",
    "id": 41189763,
    "number": 2322,
    "title": "sendFile of response",
    "user": {
      "login": "stanac",
      "id": 8450675,
      "avatar_url": "https://avatars.githubusercontent.com/u/8450675?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanac",
      "html_url": "https://github.com/stanac",
      "followers_url": "https://api.github.com/users/stanac/followers",
      "following_url": "https://api.github.com/users/stanac/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanac/subscriptions",
      "organizations_url": "https://api.github.com/users/stanac/orgs",
      "repos_url": "https://api.github.com/users/stanac/repos",
      "events_url": "https://api.github.com/users/stanac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanac/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 10,
    "created_at": "2014-08-26T16:08:01Z",
    "updated_at": "2014-09-15T16:17:00Z",
    "closed_at": "2014-08-26T16:09:37Z",
    "body": "When trying to send file with \"res.sendFile\" I get \"Object #<ServerResponse> has no method 'sendFile'\". However if I use res.sendfile with lowercase f in file, it works. I am using version 4.2.0.\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2320",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2320/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2320/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2320/events",
    "html_url": "https://github.com/strongloop/express/pull/2320",
    "id": 41085191,
    "number": 2320,
    "title": "Add Support for Multiple View Folders",
    "user": {
      "login": "martindale",
      "id": 129761,
      "avatar_url": "https://avatars.githubusercontent.com/u/129761?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martindale",
      "html_url": "https://github.com/martindale",
      "followers_url": "https://api.github.com/users/martindale/followers",
      "following_url": "https://api.github.com/users/martindale/following{/other_user}",
      "gists_url": "https://api.github.com/users/martindale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martindale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martindale/subscriptions",
      "organizations_url": "https://api.github.com/users/martindale/orgs",
      "repos_url": "https://api.github.com/users/martindale/repos",
      "events_url": "https://api.github.com/users/martindale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martindale/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 6,
    "created_at": "2014-08-25T17:40:23Z",
    "updated_at": "2014-12-04T23:48:55Z",
    "closed_at": "2014-10-24T02:31:37Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2320",
      "html_url": "https://github.com/strongloop/express/pull/2320",
      "diff_url": "https://github.com/strongloop/express/pull/2320.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2320.patch"
    },
    "body": "This adds support for supplying an array of view folders in place of a single view folder [string], allowing for a \"fallback\" folder of views to be overridden by a preferred location, if they exist."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2319",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2319/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2319/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2319/events",
    "html_url": "https://github.com/strongloop/express/issues/2319",
    "id": 40978850,
    "number": 2319,
    "title": "app.path() is not working as intended, in all cases",
    "user": {
      "login": "hacksparrow",
      "id": 950112,
      "avatar_url": "https://avatars.githubusercontent.com/u/950112?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hacksparrow",
      "html_url": "https://github.com/hacksparrow",
      "followers_url": "https://api.github.com/users/hacksparrow/followers",
      "following_url": "https://api.github.com/users/hacksparrow/following{/other_user}",
      "gists_url": "https://api.github.com/users/hacksparrow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hacksparrow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hacksparrow/subscriptions",
      "organizations_url": "https://api.github.com/users/hacksparrow/orgs",
      "repos_url": "https://api.github.com/users/hacksparrow/repos",
      "events_url": "https://api.github.com/users/hacksparrow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hacksparrow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/investigate",
        "name": "investigate",
        "color": "bfdadc"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 9,
    "created_at": "2014-08-23T16:17:49Z",
    "updated_at": "2014-09-29T23:43:40Z",
    "closed_at": null,
    "body": "`app.path()` is not working according to the comment on `application.js`.\r\n\r\nThis test passes:\r\n```\r\n    var app = express()\r\n      , blog = express()\r\n      , blogAdmin = express();\r\n\r\n    app.use('/blog', blog);\r\n    blog.use('/admin', blogAdmin);\r\n\r\n    app.path().should.equal('');\r\n    blog.path().should.equal('/blog');\r\n    blogAdmin.path().should.equal('/blog/admin');\r\n```\r\nThis does not, as expected:\r\n```\r\n    var app = express()\r\n      , blog = express()\r\n      , blogAdmin = express();\r\n\r\n    app.use('/blog', blog);\r\n    blog.use(['/admin', '/manager'], blogAdmin);\r\n\r\n    app.path().should.equal('');\r\n    blog.path().should.equal('/blog');\r\n    blogAdmin.path().should.equal('/blog/admin');\r\n```\r\nThe test might have to be re-written, but you get the point."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2312",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2312/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2312/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2312/events",
    "html_url": "https://github.com/strongloop/express/pull/2312",
    "id": 40835983,
    "number": 2312,
    "title": "Release 4.9",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/release",
        "name": "release",
        "color": "000000"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2014-08-21T18:51:02Z",
    "updated_at": "2014-09-09T04:31:30Z",
    "closed_at": "2014-09-09T04:31:30Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2312",
      "html_url": "https://github.com/strongloop/express/pull/2312",
      "diff_url": "https://github.com/strongloop/express/pull/2312.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2312.patch"
    },
    "body": "This is a tracking issue for release 4.9.\r\n\r\n**Please keep feature requests in their own issues**\r\n\r\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase (they may occur on patches to the previous release).\r\n\r\nList of changes for release:\r\n- [x] Add `res.sendStatus` #2297\r\n- [x] Fix behavior of `req.subdomains` for IP hostnames #2308\r\n- [x] Provide client aborted error from `res.sendFile` #2305\r\n- [x] Support `X-Forwarded-Host` in `req.subdomains`\r\n\r\n**Testing this release**\r\n\r\nIf you want to try out this release, you can install it with the following command:\r\n```bash\r\n$ npm install visionmedia/express#4.9\r\n```\r\n\r\nOwners/collaborators: please do not merge this PR :)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2310",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2310/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2310/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2310/events",
    "html_url": "https://github.com/strongloop/express/issues/2310",
    "id": 40555058,
    "number": 2310,
    "title": "Shouldn't this be under expressjs organization",
    "user": {
      "login": "ilanbiala",
      "id": 3695164,
      "avatar_url": "https://avatars.githubusercontent.com/u/3695164?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ilanbiala",
      "html_url": "https://github.com/ilanbiala",
      "followers_url": "https://api.github.com/users/ilanbiala/followers",
      "following_url": "https://api.github.com/users/ilanbiala/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilanbiala/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ilanbiala/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilanbiala/subscriptions",
      "organizations_url": "https://api.github.com/users/ilanbiala/orgs",
      "repos_url": "https://api.github.com/users/ilanbiala/repos",
      "events_url": "https://api.github.com/users/ilanbiala/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ilanbiala/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/investigate",
        "name": "investigate",
        "color": "bfdadc"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 10,
    "created_at": "2014-08-19T03:28:09Z",
    "updated_at": "2015-03-22T15:52:18Z",
    "closed_at": "2015-03-22T15:52:18Z",
    "body": "Shouldn't this be under expressjs organization with all the other expressjs packages?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2308",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2308/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2308/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2308/events",
    "html_url": "https://github.com/strongloop/express/pull/2308",
    "id": 40493368,
    "number": 2308,
    "title": "Fix req.subdomains returns when passing IP address as hostname",
    "user": {
      "login": "jeremylevy",
      "id": 1233275,
      "avatar_url": "https://avatars.githubusercontent.com/u/1233275?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremylevy",
      "html_url": "https://github.com/jeremylevy",
      "followers_url": "https://api.github.com/users/jeremylevy/followers",
      "following_url": "https://api.github.com/users/jeremylevy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremylevy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremylevy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremylevy/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremylevy/orgs",
      "repos_url": "https://api.github.com/users/jeremylevy/repos",
      "events_url": "https://api.github.com/users/jeremylevy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremylevy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/bug",
        "name": "bug",
        "color": "fc2929"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 4,
    "created_at": "2014-08-18T14:23:08Z",
    "updated_at": "2014-09-09T03:50:53Z",
    "closed_at": "2014-09-09T03:50:53Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2308",
      "html_url": "https://github.com/strongloop/express/pull/2308",
      "diff_url": "https://github.com/strongloop/express/pull/2308.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2308.patch"
    },
    "body": "Currently, when passing an ip address like `127.0.0.1` as hostname, `req.subdomains` returns an array with address parts:  `['0', '127']`. I tried to fix it by returning an empty array instead.\r\n\r\nNot sure, however, whether you prefer adding an external dependency (like validator - https://github.com/chriso/validator.js) to check for IP address. (The used regex are taken from it by the way.)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2297",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2297/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2297/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2297/events",
    "html_url": "https://github.com/strongloop/express/pull/2297",
    "id": 40152618,
    "number": 2297,
    "title": "Add res.sendStatus method",
    "user": {
      "login": "seth-admittedly",
      "id": 4643337,
      "avatar_url": "https://avatars.githubusercontent.com/u/4643337?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-admittedly",
      "html_url": "https://github.com/seth-admittedly",
      "followers_url": "https://api.github.com/users/seth-admittedly/followers",
      "following_url": "https://api.github.com/users/seth-admittedly/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-admittedly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-admittedly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-admittedly/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-admittedly/orgs",
      "repos_url": "https://api.github.com/users/seth-admittedly/repos",
      "events_url": "https://api.github.com/users/seth-admittedly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-admittedly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 11,
    "created_at": "2014-08-13T13:12:52Z",
    "updated_at": "2014-09-09T04:31:31Z",
    "closed_at": "2014-09-09T04:31:31Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2297",
      "html_url": "https://github.com/strongloop/express/pull/2297",
      "diff_url": "https://github.com/strongloop/express/pull/2297.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2297.patch"
    },
    "body": "A helpful method for apps that send many simple status code responses, e.g., REST APIs. The body of the response is set using node's http.STATUS_CODES to avoid problems with clients that choke on empty body responses."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2294",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2294/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2294/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2294/events",
    "html_url": "https://github.com/strongloop/express/issues/2294",
    "id": 40017904,
    "number": 2294,
    "title": "Disable ETag for `res.sendFile()`",
    "user": {
      "login": "ritch",
      "id": 462228,
      "avatar_url": "https://avatars.githubusercontent.com/u/462228?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ritch",
      "html_url": "https://github.com/ritch",
      "followers_url": "https://api.github.com/users/ritch/followers",
      "following_url": "https://api.github.com/users/ritch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ritch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ritch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ritch/subscriptions",
      "organizations_url": "https://api.github.com/users/ritch/orgs",
      "repos_url": "https://api.github.com/users/ritch/repos",
      "events_url": "https://api.github.com/users/ritch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ritch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/strongloop/express/milestones/11",
      "html_url": "https://github.com/strongloop/express/milestones/5.0",
      "labels_url": "https://api.github.com/repos/strongloop/express/milestones/11/labels",
      "id": 739972,
      "number": 11,
      "title": "5.0",
      "description": "",
      "creator": {
        "login": "Fishrock123",
        "id": 1093990,
        "avatar_url": "https://avatars.githubusercontent.com/u/1093990?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fishrock123",
        "html_url": "https://github.com/Fishrock123",
        "followers_url": "https://api.github.com/users/Fishrock123/followers",
        "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
        "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
        "repos_url": "https://api.github.com/users/Fishrock123/repos",
        "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 1,
      "state": "open",
      "created_at": "2014-08-01T16:41:47Z",
      "updated_at": "2014-11-26T01:36:03Z",
      "due_on": "2015-01-01T08:00:00Z",
      "closed_at": null
    },
    "comments": 3,
    "created_at": "2014-08-12T01:51:37Z",
    "updated_at": "2015-04-16T23:19:33Z",
    "closed_at": null,
    "body": "`res.sendFile()` accepts an option to disable ETags. It would make sense that `app.disable('etag')` sets `sendFile()`s `options.etag` to `false` for you. This is a breaking change so it would have to wait for `5.x`."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2288",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2288/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2288/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2288/events",
    "html_url": "https://github.com/strongloop/express/pull/2288",
    "id": 39735184,
    "number": 2288,
    "title": "Upgrade `qs` to protect against security vunerability",
    "user": {
      "login": "lloydwatkin",
      "id": 271622,
      "avatar_url": "https://avatars.githubusercontent.com/u/271622?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lloydwatkin",
      "html_url": "https://github.com/lloydwatkin",
      "followers_url": "https://api.github.com/users/lloydwatkin/followers",
      "following_url": "https://api.github.com/users/lloydwatkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/lloydwatkin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lloydwatkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lloydwatkin/subscriptions",
      "organizations_url": "https://api.github.com/users/lloydwatkin/orgs",
      "repos_url": "https://api.github.com/users/lloydwatkin/repos",
      "events_url": "https://api.github.com/users/lloydwatkin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lloydwatkin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2014-08-07T15:10:27Z",
    "updated_at": "2014-09-15T15:34:21Z",
    "closed_at": "2014-08-07T16:28:17Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2288",
      "html_url": "https://github.com/strongloop/express/pull/2288",
      "diff_url": "https://github.com/strongloop/express/pull/2288.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2288.patch"
    },
    "body": "See https://nodesecurity.io/advisories/qs_dos_extended_event_loop_blocking"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2281",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2281/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2281/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2281/events",
    "html_url": "https://github.com/strongloop/express/issues/2281",
    "id": 39535754,
    "number": 2281,
    "title": "'/' route breaks strict routing",
    "user": {
      "login": "sgentle",
      "id": 441426,
      "avatar_url": "https://avatars.githubusercontent.com/u/441426?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgentle",
      "html_url": "https://github.com/sgentle",
      "followers_url": "https://api.github.com/users/sgentle/followers",
      "following_url": "https://api.github.com/users/sgentle/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgentle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgentle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgentle/subscriptions",
      "organizations_url": "https://api.github.com/users/sgentle/orgs",
      "repos_url": "https://api.github.com/users/sgentle/repos",
      "events_url": "https://api.github.com/users/sgentle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgentle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/bug",
        "name": "bug",
        "color": "fc2929"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 23,
    "created_at": "2014-08-05T16:16:46Z",
    "updated_at": "2015-01-19T05:20:45Z",
    "closed_at": null,
    "body": "Hi there,\r\n\r\nCurrently, if you define a route like this:\r\n\r\n```javascript\r\nroute = require('express').Router({strict: true});\r\nroute.get('/', function(req, res) {\r\n  res.send('hi');\r\n});\r\n```\r\n\r\nAnd `use()` that in an express application like this:\r\n```javascript\r\napp = require('express')();\r\napp.use('/strict/', route);\r\n```\r\n\r\nYou will receive a 200 when requesting `/strict/` and `/strict`. I would expect only `/strict/` to return a 200.\r\n\r\nI've found an acceptable workaround by adding a check like this:\r\n\r\n```javascript\r\nroute.get('/', function(req, res, next) {\r\n    if (req.originalUrl.slice(-1) != '/') return next();\r\n    res.send('root with slash');\r\n});\r\nroute.get('/', function(req, res) {\r\n    res.send('root without slash');\r\n});\r\n```\r\n\r\nBut I think it would be less surprising if `route.get('/')` only worked for the path ending in `/` when strict routing is enabled, and perhaps `route.get('')` could be used for the no-slash case."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2277",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2277/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2277/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2277/events",
    "html_url": "https://github.com/strongloop/express/pull/2277",
    "id": 39346053,
    "number": 2277,
    "title": "Fix app.use('/blog', mw1, mw2, blogApp)",
    "user": {
      "login": "fabien",
      "id": 2749,
      "avatar_url": "https://avatars.githubusercontent.com/u/2749?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fabien",
      "html_url": "https://github.com/fabien",
      "followers_url": "https://api.github.com/users/fabien/followers",
      "following_url": "https://api.github.com/users/fabien/following{/other_user}",
      "gists_url": "https://api.github.com/users/fabien/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fabien/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fabien/subscriptions",
      "organizations_url": "https://api.github.com/users/fabien/orgs",
      "repos_url": "https://api.github.com/users/fabien/repos",
      "events_url": "https://api.github.com/users/fabien/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fabien/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 24,
    "created_at": "2014-08-02T09:45:25Z",
    "updated_at": "2014-09-11T20:11:37Z",
    "closed_at": "2014-08-06T20:24:38Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2277",
      "html_url": "https://github.com/strongloop/express/pull/2277",
      "diff_url": "https://github.com/strongloop/express/pull/2277.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2277.patch"
    },
    "body": "This fixes the use case of mounting another app with preceding middleware, as introduced by #2224"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2276",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2276/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2276/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2276/events",
    "html_url": "https://github.com/strongloop/express/issues/2276",
    "id": 39339162,
    "number": 2276,
    "title": "Alias `res.sendfile` as `res.sendFile`",
    "user": {
      "login": "ForbesLindesay",
      "id": 1260646,
      "avatar_url": "https://avatars.githubusercontent.com/u/1260646?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ForbesLindesay",
      "html_url": "https://github.com/ForbesLindesay",
      "followers_url": "https://api.github.com/users/ForbesLindesay/followers",
      "following_url": "https://api.github.com/users/ForbesLindesay/following{/other_user}",
      "gists_url": "https://api.github.com/users/ForbesLindesay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ForbesLindesay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ForbesLindesay/subscriptions",
      "organizations_url": "https://api.github.com/users/ForbesLindesay/orgs",
      "repos_url": "https://api.github.com/users/ForbesLindesay/repos",
      "events_url": "https://api.github.com/users/ForbesLindesay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ForbesLindesay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 11,
    "created_at": "2014-08-02T01:20:04Z",
    "updated_at": "2015-04-16T20:02:14Z",
    "closed_at": "2014-08-14T03:33:25Z",
    "body": "The casing of `sendfile` is not consistent with normal JavaScript casing rules.  This makes it one of the biggest gotchas when using express.  Although it's easy to fix, it's something I keep forgetting.\r\n\r\nThis was implemented in #2266 and everyone who commented was in favour of the change, but there was some debate as to whether the implementation was up to scratch.  I'm happy to take guidance on how best to implement this.\r\n\r\n@ritch it would be great to get your thoughts on how you would like this to be implemented."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2274",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2274/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2274/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2274/events",
    "html_url": "https://github.com/strongloop/express/issues/2274",
    "id": 39193556,
    "number": 2274,
    "title": "Every simple request make memory group up，memory leak?",
    "user": {
      "login": "shanelau",
      "id": 3140898,
      "avatar_url": "https://avatars.githubusercontent.com/u/3140898?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shanelau",
      "html_url": "https://github.com/shanelau",
      "followers_url": "https://api.github.com/users/shanelau/followers",
      "following_url": "https://api.github.com/users/shanelau/following{/other_user}",
      "gists_url": "https://api.github.com/users/shanelau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shanelau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shanelau/subscriptions",
      "organizations_url": "https://api.github.com/users/shanelau/orgs",
      "repos_url": "https://api.github.com/users/shanelau/repos",
      "events_url": "https://api.github.com/users/shanelau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shanelau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-07-31T13:23:06Z",
    "updated_at": "2014-12-16T00:05:47Z",
    "closed_at": "2014-07-31T15:50:07Z",
    "body": "I've a static ExpressJS Server , create by cmd\r\n```\r\nexpress myapp  \r\n\r\n```\r\nWhen i start the server it uses 20MB of v8 heap. If i do a page reload every second the heap used grow continuously. After 4 hours it goes to 40MB of v8 heap used. The total v8 heap goes to 80MB and the RSS (total memory used by the process) goes to 130MB.\r\n\r\nWhy this simple and static server uses so much ram? It seems a memory leak. If i don't stop the page reload, the used memory keeps growing.\r\n\r\nIt's impossible to do larger projects if a simple static server like this uses too much ram.\r\n\r\nNodeJS version: v0.10.28 ExpressJS version: 4.2\r\n\r\nEDIT: I noticed that it's a problem with NodeJS, because i tried node-static instead of express, and while the used/total V8 heap stayed constant, the RSS memory used by nodejs continued to grow up."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2269",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2269/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2269/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2269/events",
    "html_url": "https://github.com/strongloop/express/issues/2269",
    "id": 39084386,
    "number": 2269,
    "title": "res.send(200) vs res.status(202).end()",
    "user": {
      "login": "Guuz",
      "id": 810327,
      "avatar_url": "https://avatars.githubusercontent.com/u/810327?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Guuz",
      "html_url": "https://github.com/Guuz",
      "followers_url": "https://api.github.com/users/Guuz/followers",
      "following_url": "https://api.github.com/users/Guuz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Guuz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Guuz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Guuz/subscriptions",
      "organizations_url": "https://api.github.com/users/Guuz/orgs",
      "repos_url": "https://api.github.com/users/Guuz/repos",
      "events_url": "https://api.github.com/users/Guuz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Guuz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 22,
    "created_at": "2014-07-30T11:50:55Z",
    "updated_at": "2014-10-17T07:55:23Z",
    "closed_at": "2014-07-31T05:50:50Z",
    "body": "Hello,\r\n\r\nI'm using `res.send(202)` which gives this warning:\r\n`express deprecated res.send(status): Use res.status(status).end() instead`\r\n\r\nThe documentation says no such thing:\r\nhttp://expressjs.com/api.html#res.send\r\n> Finally when a Number is given without any of the previously mentioned bodies, then a response body string is assigned for you. For example 200 will respond will the text \"OK\", and 404 \"Not Found\" and so on.\r\n\r\nI like this feature because it automagicly puts in the right, human readable, response body.\r\n\r\nWhen I use `res.status(202).end()` the response body is not automatically set.\r\nIn the tests it is set manually:\r\nhttps://github.com/strongloop/express/blob/master/test/res.status.js\r\n\r\nSo is it really deprecated and are the docs not updated? And if it is deprecated is there anything that has the same functionality (i.e. response body string)\r\n\r\nEdit: I found out this was recently deprecated in this commit: https://github.com/strongloop/express/commit/fd3b40533bafa7e136f68354d0be470bfe60a51c\r\nSo maybe @dougwilson can help out?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2259",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2259/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2259/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2259/events",
    "html_url": "https://github.com/strongloop/express/issues/2259",
    "id": 38590049,
    "number": 2259,
    "title": "promises",
    "user": {
      "login": "jonathanong",
      "id": 643505,
      "avatar_url": "https://avatars.githubusercontent.com/u/643505?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanong",
      "html_url": "https://github.com/jonathanong",
      "followers_url": "https://api.github.com/users/jonathanong/followers",
      "following_url": "https://api.github.com/users/jonathanong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanong/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanong/orgs",
      "repos_url": "https://api.github.com/users/jonathanong/repos",
      "events_url": "https://api.github.com/users/jonathanong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 45,
    "created_at": "2014-07-24T01:27:09Z",
    "updated_at": "2015-04-02T21:29:27Z",
    "closed_at": null,
    "body": "now that promises are going mainstream, i'm trying to think of how to make express more async friendly. an idea is to use promises.\r\n\r\n- `next()` now returns a promise\r\n- if middleware returns a promise, that promise is resolved and propagated up `next()`s\r\n\r\n```js\r\napp.use(function (req, res, next) {\r\n  // a promise must be returned, \r\n  // otherwise the function will be assumed to be synchronous\r\n  return User.get(req.session.userid).then(function (user) {\r\n    req.user = user\r\n  })\r\n  .then(next) // execute all downstream middleware\r\n  .then(function () {\r\n    // send a response after all downstream middleware have executed\r\n    // this is equivalent to koa's \"upstream\"\r\n    res.send(user)\r\n  })\r\n})\r\n```\r\n\r\nError handlers are now more koa-like:\r\n\r\n```js\r\napp.use(function (req, res, next) {\r\n  return next().catch(function (err) {\r\n    // a custom error handler\r\n    if (res.headerSent) return\r\n    res.statusCode = err.status || 500\r\n    res.send(err.message) \r\n  })\r\n})\r\n\r\napp.use(function (req, res) {\r\n  throw new Error('hahahah')\r\n})\r\n```\r\n\r\nPros:\r\n\r\n- it __should__ be backwards compatible since you don't have to resolve the promise returned from `next()`\r\n- much easier error handling including `throw`ing\r\n- solves issues shown in https://github.com/visionmedia/express/issues/2255\r\n- no more `fn.length` checking ~_~\r\n- could probably easily upgrade to es7 async functions\r\n\r\nCons:\r\n\r\n- promises\r\n- upgrading middleware and supporting both signatures might be a pain in the ass\r\n- probably a lot slower"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2249",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2249/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2249/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2249/events",
    "html_url": "https://github.com/strongloop/express/issues/2249",
    "id": 38147038,
    "number": 2249,
    "title": "Deprecate res.send(obj) json overload",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 19,
    "created_at": "2014-07-18T04:16:24Z",
    "updated_at": "2014-10-26T19:33:57Z",
    "closed_at": null,
    "body": "This is an idea for removing the `res.send(obj)` signature and it's other similar signatures that will `JSON.stringify` the value and send it as JSON. In my opinion there is no reason you cannot just type `res.json` instead. Deprecating and removing this overload will mean people do not have to make sure their variable to `res.send` is a string to get HTML output."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2248",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2248/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2248/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2248/events",
    "html_url": "https://github.com/strongloop/express/issues/2248",
    "id": 38135577,
    "number": 2248,
    "title": "Memory Leak with EventSource Stream",
    "user": {
      "login": "roundrobin",
      "id": 452232,
      "avatar_url": "https://avatars.githubusercontent.com/u/452232?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roundrobin",
      "html_url": "https://github.com/roundrobin",
      "followers_url": "https://api.github.com/users/roundrobin/followers",
      "following_url": "https://api.github.com/users/roundrobin/following{/other_user}",
      "gists_url": "https://api.github.com/users/roundrobin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roundrobin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roundrobin/subscriptions",
      "organizations_url": "https://api.github.com/users/roundrobin/orgs",
      "repos_url": "https://api.github.com/users/roundrobin/repos",
      "events_url": "https://api.github.com/users/roundrobin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roundrobin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 22,
    "created_at": "2014-07-17T23:14:41Z",
    "updated_at": "2014-12-16T00:06:38Z",
    "closed_at": "2014-07-17T23:26:48Z",
    "body": "I experience a memory leak with my express.js app when connecting a bigger number of *EventSource* clients through  ```text/event-stream``` to the endpoint. While running the express server I log every second the *RSS* and *Heap*.\r\n\r\nThe problem is after disconnecting all clients from the stream the *RSS* and *Heap Used* is not decreasing, even after manually calling the GC via ```global.gc();``` & ```expose-gc```.\r\n\r\nCan you give me any pointer how to find out why it's not getting cleared?"
  }
]
