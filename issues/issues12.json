[
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1812",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1812/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1812/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1812/events",
    "html_url": "https://github.com/strongloop/express/issues/1812",
    "id": 22386214,
    "number": 1812,
    "title": "Streaming views?",
    "user": {
      "login": "AnnanFay",
      "id": 766048,
      "avatar_url": "https://avatars.githubusercontent.com/u/766048?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AnnanFay",
      "html_url": "https://github.com/AnnanFay",
      "followers_url": "https://api.github.com/users/AnnanFay/followers",
      "following_url": "https://api.github.com/users/AnnanFay/following{/other_user}",
      "gists_url": "https://api.github.com/users/AnnanFay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AnnanFay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AnnanFay/subscriptions",
      "organizations_url": "https://api.github.com/users/AnnanFay/orgs",
      "repos_url": "https://api.github.com/users/AnnanFay/repos",
      "events_url": "https://api.github.com/users/AnnanFay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AnnanFay/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 14,
    "created_at": "2013-11-09T13:22:28Z",
    "updated_at": "2014-11-20T23:11:50Z",
    "closed_at": "2014-02-23T10:49:33Z",
    "body": "I am completely new to nodejs so sorry if I say anything silly or unclear.\r\n\r\nI am trying to get express working with [mu](https://github.com/raycmorgan/Mu). mu returns streams instead of strings, which does not seem to work with the res.render method.\r\n\r\nThe app.engine function doesn't get access to res so you can't just write a new engine function. Maybe wrapping res.render is the best idea?\r\n\r\nThis code is working, but seems a bit awkward:\r\n```javascript\r\nvar express = require('express');\r\nvar mu = require('mu2');\r\nvar app = express();\r\n\r\nfunction engine (path, options, callback) {\r\n    try {\r\n        var stream = mu.compileAndRender(path, options);\r\n        callback(null, stream);\r\n    } catch (err) {\r\n        callback(err);    \r\n    }\r\n}\r\n\r\napp.engine('html', engine);\r\napp.set('view engine', 'html');\r\napp.set('views', __dirname + '/views');\r\n\r\napp.get('/', function(req, res){\r\n    res.render('index', {\r\n        title: 'Index page 1'\r\n    }, function (err, stream) {\r\n        stream.pipe(res);\r\n    });\r\n});\r\napp.get('/2', function(req, res){\r\n    res.render('index', {\r\n        title: 'Index page 2'\r\n    }, function (err, stream) {\r\n        stream.pipe(res);\r\n    });\r\n});\r\n\r\napp.listen(8000);\r\nconsole.log('Listening on port 8000');\r\n```"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1765",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1765/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1765/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1765/events",
    "html_url": "https://github.com/strongloop/express/issues/1765",
    "id": 20174924,
    "number": 1765,
    "title": "Consider support for dynamic middleware loading",
    "user": {
      "login": "adamterlson",
      "id": 2498418,
      "avatar_url": "https://avatars.githubusercontent.com/u/2498418?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamterlson",
      "html_url": "https://github.com/adamterlson",
      "followers_url": "https://api.github.com/users/adamterlson/followers",
      "following_url": "https://api.github.com/users/adamterlson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamterlson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamterlson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamterlson/subscriptions",
      "organizations_url": "https://api.github.com/users/adamterlson/orgs",
      "repos_url": "https://api.github.com/users/adamterlson/repos",
      "events_url": "https://api.github.com/users/adamterlson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamterlson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 19,
    "created_at": "2013-09-27T14:49:51Z",
    "updated_at": "2014-11-19T13:25:33Z",
    "closed_at": "2013-09-27T19:40:32Z",
    "body": "I've been playing around with a server that can dynamically configure itself with middleware based on user preferences.  Think of a little form with some checkboxes, and toggling a box will load/unload a particular bit of middleware.\r\n\r\nWhile I am able to technically do this, the means by which I've made it \"possible\" is horrible.\r\n\r\n`````````javascript\r\n// *** This is bad ***\r\n// Add the middleware\r\napp.use(myNewMiddleware);\r\n\r\n// Grab the last item in the stack, move it to the 3rd position\r\n// (which happens to be after expressInit in this particular case)\r\n// I've also written a line to grab the router and move it to the \r\n// bottom, but I'm not sure that's any better\r\napp.stack.splice(2, 0, app.stack.splice(app.stack.length-1, 1)[0]);\r\n````````````\r\n\r\nMy objective: find a solid way to add middleware *after* expressInit but *before* router to allow for dynamic middleware configuration at any time.\r\n\r\n```````````javascript\r\n// app.stack ==>\r\n[ \r\n  { route: '', handle: [Function: query] },\r\n  { route: '', handle: [Function: expressInit] },\r\n  { route: '', handle: [Function: myNewMiddleware] }, // <--- Inject middleware here\r\n  { route: '', handle: [Function: router] }\r\n]\r\n\r\n`````````````\r\n\r\nAny thoughts on how bad this idea is are welcome!"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1753",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1753/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1753/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1753/events",
    "html_url": "https://github.com/strongloop/express/issues/1753",
    "id": 19389603,
    "number": 1753,
    "title": "req.session._csrf is deprecated, use req.csrfToken() instead",
    "user": {
      "login": "pachacutec",
      "id": 1857880,
      "avatar_url": "https://avatars.githubusercontent.com/u/1857880?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pachacutec",
      "html_url": "https://github.com/pachacutec",
      "followers_url": "https://api.github.com/users/pachacutec/followers",
      "following_url": "https://api.github.com/users/pachacutec/following{/other_user}",
      "gists_url": "https://api.github.com/users/pachacutec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pachacutec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pachacutec/subscriptions",
      "organizations_url": "https://api.github.com/users/pachacutec/orgs",
      "repos_url": "https://api.github.com/users/pachacutec/repos",
      "events_url": "https://api.github.com/users/pachacutec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pachacutec/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/needs%20tests",
        "name": "needs tests",
        "color": "e11d21"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2013-09-12T14:32:16Z",
    "updated_at": "2014-11-29T09:08:15Z",
    "closed_at": "2013-09-12T22:36:46Z",
    "body": "I am getting the req.session._csrf is deprecated, use req.csrfToken() instead but when I try to use the req.csrToken\r\nbut \r\nTypeError: Object #<IncomingMessage> has no method 'csrfToken'\r\n    at app.post.newAppOrder (/home/a/frontend/app.js:139:13)\r\n    at callbacks (/home/a/frontend/node_modules/express/lib/router/index.js:164:37)\r\n\r\n\r\n app.use(express.csrf());\r\n\r\nI am using the   \"version\": \"3.3.5\" \r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1730",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1730/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1730/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1730/events",
    "html_url": "https://github.com/strongloop/express/issues/1730",
    "id": 18505405,
    "number": 1730,
    "title": "Documented app.param('id', /^\\d+$/); does not work",
    "user": {
      "login": "Jack12816",
      "id": 2496275,
      "avatar_url": "https://avatars.githubusercontent.com/u/2496275?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jack12816",
      "html_url": "https://github.com/Jack12816",
      "followers_url": "https://api.github.com/users/Jack12816/followers",
      "following_url": "https://api.github.com/users/Jack12816/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jack12816/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jack12816/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jack12816/subscriptions",
      "organizations_url": "https://api.github.com/users/Jack12816/orgs",
      "repos_url": "https://api.github.com/users/Jack12816/repos",
      "events_url": "https://api.github.com/users/Jack12816/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jack12816/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2013-08-24T11:45:40Z",
    "updated_at": "2015-03-05T15:13:23Z",
    "closed_at": "2013-08-24T11:52:20Z",
    "body": "Hello,\r\n\r\nthe documentation (http://expressjs.com/api.html) suggests the use of:\r\n```js\r\napp.param('id', /^\\d+$/);\r\n```\r\n\r\nBut all I get is:\r\n\r\n    Error: invalid param() call for id, got /^\\d+$/\r\n        at Router.param (/mnt/projects/Coding/Node.js/greppy-demo/node_modules/express/lib/router/index.js:67:11)\r\n        at /mnt/projects/Coding/Node.js/greppy-demo/node_modules/express/lib/application.js:230:20\r\n        at Array.forEach (native)\r\n        at Function.app.param (/mnt/projects/Coding/Node.js/greppy-demo/node_modules/express/lib/application.js:229:9)\r\n\r\nI'm using express 3.3.5. Is it deprecated or how can it be used instead of the\r\nexample?\r\n\r\nRegards, Jack."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1619",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1619/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1619/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1619/events",
    "html_url": "https://github.com/strongloop/express/issues/1619",
    "id": 14210725,
    "number": 1619,
    "title": "dont produce ETag for non-GET",
    "user": {
      "login": "tj",
      "id": 25254,
      "avatar_url": "https://avatars.githubusercontent.com/u/25254?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tj",
      "html_url": "https://github.com/tj",
      "followers_url": "https://api.github.com/users/tj/followers",
      "following_url": "https://api.github.com/users/tj/following{/other_user}",
      "gists_url": "https://api.github.com/users/tj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tj/subscriptions",
      "organizations_url": "https://api.github.com/users/tj/orgs",
      "repos_url": "https://api.github.com/users/tj/repos",
      "events_url": "https://api.github.com/users/tj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2013-05-10T21:35:45Z",
    "updated_at": "2015-02-12T22:14:23Z",
    "closed_at": "2013-05-10T21:44:06Z",
    "body": "doesn't make much sense"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1366",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1366/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1366/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1366/events",
    "html_url": "https://github.com/strongloop/express/issues/1366",
    "id": 7560467,
    "number": 1366,
    "title": "Express 3 has no \"app.close()\"",
    "user": {
      "login": "glynnbird",
      "id": 697925,
      "avatar_url": "https://avatars.githubusercontent.com/u/697925?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glynnbird",
      "html_url": "https://github.com/glynnbird",
      "followers_url": "https://api.github.com/users/glynnbird/followers",
      "following_url": "https://api.github.com/users/glynnbird/following{/other_user}",
      "gists_url": "https://api.github.com/users/glynnbird/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glynnbird/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glynnbird/subscriptions",
      "organizations_url": "https://api.github.com/users/glynnbird/orgs",
      "repos_url": "https://api.github.com/users/glynnbird/repos",
      "events_url": "https://api.github.com/users/glynnbird/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glynnbird/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2012-10-13T08:38:30Z",
    "updated_at": "2015-01-05T15:49:47Z",
    "closed_at": "2012-10-15T16:20:45Z",
    "body": "Imagine you want to be able to terminate your Node.js app and drain all existing connections before quitting, you might come up with a solution as outlined here:\r\n\r\nhttp://blog.argteam.com/coding/hardening-node-js-for-production-part-3-zero-downtime-deployments-with-nginx\r\n\r\ne.g.\r\n\r\n* respond to SIGTERM or SIGINT events\r\n* tell your Express app to stop accepting new connections\r\n* get called back by Express when the last connection has been serviced\r\n\r\nThis would all you to do graceful deployments of new code without terminating existing requests (assuming your load balancer sends traffic to other servers).\r\n\r\nAs of Express 3, the app.close() method seems to have disappeared, which means Express users have no means of gracefully stopping an application as far as I can see."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1283",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1283/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1283/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1283/events",
    "html_url": "https://github.com/strongloop/express/issues/1283",
    "id": 6187588,
    "number": 1283,
    "title": "Session not working using expressjs",
    "user": {
      "login": "sridhar480",
      "id": 1335982,
      "avatar_url": "https://avatars.githubusercontent.com/u/1335982?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sridhar480",
      "html_url": "https://github.com/sridhar480",
      "followers_url": "https://api.github.com/users/sridhar480/followers",
      "following_url": "https://api.github.com/users/sridhar480/following{/other_user}",
      "gists_url": "https://api.github.com/users/sridhar480/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sridhar480/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sridhar480/subscriptions",
      "organizations_url": "https://api.github.com/users/sridhar480/orgs",
      "repos_url": "https://api.github.com/users/sridhar480/repos",
      "events_url": "https://api.github.com/users/sridhar480/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sridhar480/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2012-08-13T11:03:38Z",
    "updated_at": "2014-09-28T19:43:38Z",
    "closed_at": "2012-08-28T16:16:57Z",
    "body": "Iam developed Web application using Nodejs with express and socket.io ,mongodb.\nHere problem iam facing login problem i mean session not working when i redirect other page .Only specific systems(PC&laptops) login problem occur.\n\nCode url: https://gist.github.com/e4e42db128c9bd046d7f"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1186",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1186/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1186/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1186/events",
    "html_url": "https://github.com/strongloop/express/pull/1186",
    "id": 5198421,
    "number": 1186,
    "title": "Adds multiple view directory handling",
    "user": {
      "login": "natural",
      "id": 146692,
      "avatar_url": "https://avatars.githubusercontent.com/u/146692?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natural",
      "html_url": "https://github.com/natural",
      "followers_url": "https://api.github.com/users/natural/followers",
      "following_url": "https://api.github.com/users/natural/following{/other_user}",
      "gists_url": "https://api.github.com/users/natural/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natural/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natural/subscriptions",
      "organizations_url": "https://api.github.com/users/natural/orgs",
      "repos_url": "https://api.github.com/users/natural/repos",
      "events_url": "https://api.github.com/users/natural/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natural/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 26,
    "created_at": "2012-06-21T16:50:12Z",
    "updated_at": "2014-11-07T06:25:18Z",
    "closed_at": "2012-08-01T21:57:23Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/1186",
      "html_url": "https://github.com/strongloop/express/pull/1186",
      "diff_url": "https://github.com/strongloop/express/pull/1186.diff",
      "patch_url": "https://github.com/strongloop/express/pull/1186.patch"
    },
    "body": "The code in this commit allows express to retrieve view files from multiple directories.  The existing `options.root` parameter is maintained for compatibility.  All tests pass.\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1132",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1132/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1132/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1132/events",
    "html_url": "https://github.com/strongloop/express/issues/1132",
    "id": 4535836,
    "number": 1132,
    "title": "Newline/Paragraph separators not escaped for use in JSONP",
    "user": {
      "login": "tidoust",
      "id": 1122927,
      "avatar_url": "https://avatars.githubusercontent.com/u/1122927?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tidoust",
      "html_url": "https://github.com/tidoust",
      "followers_url": "https://api.github.com/users/tidoust/followers",
      "following_url": "https://api.github.com/users/tidoust/following{/other_user}",
      "gists_url": "https://api.github.com/users/tidoust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tidoust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tidoust/subscriptions",
      "organizations_url": "https://api.github.com/users/tidoust/orgs",
      "repos_url": "https://api.github.com/users/tidoust/repos",
      "events_url": "https://api.github.com/users/tidoust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tidoust/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 14,
    "created_at": "2012-05-11T15:32:43Z",
    "updated_at": "2014-10-02T01:41:20Z",
    "closed_at": "2012-12-28T17:25:04Z",
    "body": "For better or for worse, JSON is not a true subset of JavaScript as two characters sneaked their way into JSON:\r\n- ```\\u2028```: line separator\r\n- ```\\u2029```: paragraph separator\r\n\r\nFor JavaScript, these two characters are considered to be the same as ```\\n```. That's transparent most of the time, but JSONP is all about returning JSON wrapped into JavaScript and, as such, the JSON that gets wrapped must conform to the JavaScript language. ```JSON.stringify``` does not guarantee that (well, it depends on the parser used, but the one in node.js does not).\r\n\r\nIn particular, the following code will trigger a JavaScript exception if fetched from within a Web browser:\r\n\r\n```\r\nvar express = require('express');\r\nvar app = express.createServer();\r\n\r\napp.enable('jsonp callback');\r\napp.get('/', function (req, res) {\r\n res.json({ property: 'hello\\u2028world' }, { 'Content-Type': 'text/javascript' });\r\n});\r\napp.listen(5000);\r\n```\r\n\r\nThe separator characters need to be escaped before they are returned, with code such as:\r\n```body.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029')```\r\n\r\nSee [JSON: The JavaScript subset that isn't](http://timelessrepo.com/json-isnt-a-javascript-subset) for a good summary of the problem.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/1026",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/1026/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/1026/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/1026/events",
    "html_url": "https://github.com/strongloop/express/issues/1026",
    "id": 3383750,
    "number": 1026,
    "title": "Session Storage Fails on Android 2.3.x",
    "user": {
      "login": "darkyen",
      "id": 1041315,
      "avatar_url": "https://avatars.githubusercontent.com/u/1041315?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darkyen",
      "html_url": "https://github.com/darkyen",
      "followers_url": "https://api.github.com/users/darkyen/followers",
      "following_url": "https://api.github.com/users/darkyen/following{/other_user}",
      "gists_url": "https://api.github.com/users/darkyen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darkyen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darkyen/subscriptions",
      "organizations_url": "https://api.github.com/users/darkyen/orgs",
      "repos_url": "https://api.github.com/users/darkyen/repos",
      "events_url": "https://api.github.com/users/darkyen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darkyen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2012-02-25T07:51:17Z",
    "updated_at": "2015-04-16T21:15:39Z",
    "closed_at": "2013-09-10T04:40:31Z",
    "body": "Well i was making a comet server [for the sake of learning] using express.js \r\n\r\nfor user authentication i used the session support with express..\r\n\r\nBut when i tested the app on Android it failed to load/store session objects..\r\n\r\nWhich makes an infinite loop of authentication.. on my client and which floods the server with 100s of request.. \r\n\r\n\r\nFurther i stack traced the bug and found out that the cookies are intact so where is things going wrong ???? \r\n\r\n\r\nAndroid issue or Express JS issue ?? !??!?!\r\n\r\nBecause the thing works pretty stable on browsers like Chrome & Firefox and even IE "
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/792",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/792/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/792/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/792/events",
    "html_url": "https://github.com/strongloop/express/issues/792",
    "id": 1334218,
    "number": 792,
    "title": "whitelist/blacklist views for caching",
    "user": {
      "login": "mahemoff",
      "id": 55860,
      "avatar_url": "https://avatars.githubusercontent.com/u/55860?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mahemoff",
      "html_url": "https://github.com/mahemoff",
      "followers_url": "https://api.github.com/users/mahemoff/followers",
      "following_url": "https://api.github.com/users/mahemoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/mahemoff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mahemoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mahemoff/subscriptions",
      "organizations_url": "https://api.github.com/users/mahemoff/orgs",
      "repos_url": "https://api.github.com/users/mahemoff/repos",
      "events_url": "https://api.github.com/users/mahemoff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mahemoff/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 10,
    "created_at": "2011-08-03T00:09:01Z",
    "updated_at": "2015-04-10T18:13:50Z",
    "closed_at": "2011-08-03T11:23:33Z",
    "body": "Is it possible to choose which views are cached, or will Express just cache them all?\r\n\r\n(context http://stackoverflow.com/questions/6917009/caching-in-node-express-how-do-you-whitelist-blacklist-views)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/787",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/787/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/787/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/787/events",
    "html_url": "https://github.com/strongloop/express/issues/787",
    "id": 1312973,
    "number": 787,
    "title": "Any way to use SCSS instead of SASS?",
    "user": {
      "login": "lifeiscontent",
      "id": 180963,
      "avatar_url": "https://avatars.githubusercontent.com/u/180963?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lifeiscontent",
      "html_url": "https://github.com/lifeiscontent",
      "followers_url": "https://api.github.com/users/lifeiscontent/followers",
      "following_url": "https://api.github.com/users/lifeiscontent/following{/other_user}",
      "gists_url": "https://api.github.com/users/lifeiscontent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lifeiscontent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lifeiscontent/subscriptions",
      "organizations_url": "https://api.github.com/users/lifeiscontent/orgs",
      "repos_url": "https://api.github.com/users/lifeiscontent/repos",
      "events_url": "https://api.github.com/users/lifeiscontent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lifeiscontent/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2011-07-29T21:50:54Z",
    "updated_at": "2014-11-13T21:48:22Z",
    "closed_at": "2012-06-17T02:37:22Z",
    "body": "Just curious to know if there was a way currently to use the SCSS extension of Sassy CSS in express.\r\n\r\nand if not I'd really like support for it!\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/751",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/751/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/751/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/751/events",
    "html_url": "https://github.com/strongloop/express/issues/751",
    "id": 1214498,
    "number": 751,
    "title": "Error: Can't set headers after they are sent. ",
    "user": {
      "login": "motionworks",
      "id": 767594,
      "avatar_url": "https://avatars.githubusercontent.com/u/767594?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/motionworks",
      "html_url": "https://github.com/motionworks",
      "followers_url": "https://api.github.com/users/motionworks/followers",
      "following_url": "https://api.github.com/users/motionworks/following{/other_user}",
      "gists_url": "https://api.github.com/users/motionworks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/motionworks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/motionworks/subscriptions",
      "organizations_url": "https://api.github.com/users/motionworks/orgs",
      "repos_url": "https://api.github.com/users/motionworks/repos",
      "events_url": "https://api.github.com/users/motionworks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/motionworks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 23,
    "created_at": "2011-07-13T09:34:36Z",
    "updated_at": "2014-10-25T22:10:51Z",
    "closed_at": "2013-09-09T06:57:10Z",
    "body": "Below are the error : \r\n\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at ServerResponse.header (/node_modules/express/lib/response.js:281:10)\r\n    at ServerResponse.json (/node_modules/express/lib/response.js:134:8)\r\n    at ServerResponse.send (/node_modules/express/lib/response.js:78:21)\r\n    at Object.callback (/var/www/TGV/lib/controller.js:60:22)\r\n    at /var/www/TGV/lib/db/dbGo.js:40:23\r\n    at Query.execFind (/var/www/TGV/node_modules/mongoose/lib/mongoose/query.js:633:12)\r\n    at Query.find (/var/www/TGV/node_modules/mongoose/lib/mongoose/query.js:91:15)\r\n    at Function.find (/var/www/TGV/node_modules/mongoose/lib/mongoose/model.js:409:16)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at next (/node_modules/connect/lib/http.js:195:11)\r\n    at param (/node_modules/express/lib/router/index.js:230:9)\r\n    at param (/node_modules/express/lib/router/index.js:224:11)\r\n    at param (/node_modules/express/lib/router/index.js:224:11)\r\n    at pass (/node_modules/express/lib/router/index.js:232:6)\r\n    at Router._dispatch (/node_modules/express/lib/router/index.js:255:4)\r\n    at Object.handle (/node_modules/express/lib/router/index.js:45:10)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at next (/node_modules/connect/lib/http.js:207:9)\r\n    at param (/node_modules/express/lib/router/index.js:230:9)\r\n    at param (/node_modules/express/lib/router/index.js:224:11)\r\n    at param (/node_modules/express/lib/router/index.js:224:11)\r\n    at pass (/node_modules/express/lib/router/index.js:232:6)\r\n    at Router._dispatch (/node_modules/express/lib/router/index.js:255:4)\r\n    at Object.handle (/node_modules/express/lib/router/index.js:45:10)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at param (/node_modules/express/lib/router/index.js:230:9)\r\n    at param (/node_modules/express/lib/router/index.js:224:11)\r\n    at pass (/node_modules/express/lib/router/index.js:232:6)\r\n    at Router._dispatch (/node_modules/express/lib/router/index.js:255:4)\r\n    at Object.handle (/node_modules/express/lib/router/index.js:45:10)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n    at next (/node_modules/connect/lib/http.js:150:23)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at param (/node_modules/express/lib/router/index.js:230:9)\r\n    at pass (/node_modules/express/lib/router/index.js:232:6)\r\n    at Router._dispatch (/node_modules/express/lib/router/index.js:255:4)\r\n    at Object.handle (/node_modules/express/lib/router/index.js:45:10)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n    at next (/node_modules/connect/lib/http.js:150:23)\r\n    at pass (/node_modules/connect/lib/middleware/router.js:195:9)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at next (/node_modules/connect/lib/http.js:207:9)\r\n    at next (/node_modules/connect/lib/http.js:150:23)\r\n    at pass (/node_modules/connect/lib/middleware/router.js:195:9)\r\n    at Object.router [as handle] (/node_modules/connect/lib/middleware/router.js:197:6)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n    at Object.fetchUserFromSession [as handle] (/node_modules/everyauth/index.js:37:27)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at next (/node_modules/connect/lib/http.js:150:23)\r\n    at next (/node_modules/connect/lib/http.js:207:9)\r\n    at Object.fetchUserFromSession [as handle] (/node_modules/everyauth/index.js:37:27)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n    at Object.registerReqGettersAndMethods [as handle] (/node_modules/everyauth/index.js:31:9)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n    at HTTPServer.handle (/node_modules/connect/lib/http.js:211:3)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at next (/node_modules/connect/lib/http.js:150:23)\r\n    at next (/node_modules/connect/lib/http.js:207:9)\r\n    at Object.registerReqGettersAndMethods [as handle] (/node_modules/everyauth/index.js:31:9)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n    at HTTPServer.handle (/node_modules/connect/lib/http.js:211:3)\r\n    at Object.handle (/node_modules/connect/lib/http.js:105:14)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at next (/node_modules/connect/lib/http.js:150:23)\r\n    at next (/node_modules/connect/lib/http.js:207:9)\r\n    at HTTPServer.handle (/node_modules/connect/lib/http.js:211:3)\r\n    at Object.handle (/node_modules/connect/lib/http.js:105:14)\r\n    at next (/node_modules/connect/lib/http.js:198:15)\r\n    at /node_modules/connect/lib/middleware/session.js:323:9\r\n    at /node_modules/connect/lib/middleware/session.js:338:9\r\n\r\n\r\n\r\nnode.js:134\r\n\r\n        throw e; // process.nextTick error, or 'error' event on first tick\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n^\r\n\r\n\r\nError: Can't set headers after they are sent.\r\n    at ServerResponse.<anonymous> (http.js:527:11)\r\n    at ServerResponse.setHeader (/node_modules/connect/lib/patch.js:47:22)\r\n    at next (/node_modules/connect/lib/http.js:162:13)\r\n    at next (/node_modules/connect/lib/http.js:207:9)\r\n    at /node_modules/connect/lib/middleware/session.js:323:9\r\n    at /node_modules/connect/lib/middleware/session.js:338:9\r\n    at Array.<anonymous> (/node_modules/connect/lib/middleware/session/memory.js:57:7)\r\n    at EventEmitter._tickCallback (node.js:126:26)\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/722",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/722/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/722/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/722/events",
    "html_url": "https://github.com/strongloop/express/issues/722",
    "id": 1108140,
    "number": 722,
    "title": "Express server delayed recovery after connect-redis reconnects",
    "user": {
      "login": "joecroninallen",
      "id": 486323,
      "avatar_url": "https://avatars.githubusercontent.com/u/486323?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joecroninallen",
      "html_url": "https://github.com/joecroninallen",
      "followers_url": "https://api.github.com/users/joecroninallen/followers",
      "following_url": "https://api.github.com/users/joecroninallen/following{/other_user}",
      "gists_url": "https://api.github.com/users/joecroninallen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joecroninallen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joecroninallen/subscriptions",
      "organizations_url": "https://api.github.com/users/joecroninallen/orgs",
      "repos_url": "https://api.github.com/users/joecroninallen/repos",
      "events_url": "https://api.github.com/users/joecroninallen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joecroninallen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2011-06-24T03:50:21Z",
    "updated_at": "2015-01-22T19:44:27Z",
    "closed_at": "2011-06-25T01:51:14Z",
    "body": "Here's the steps to take to see this issue I am having when the connect-redis client temporarily loses its connection:\r\n\r\n1) Start redis database used by connect-redis module to store sessions\r\n2) Start express server\r\n3) Run test client to show that express server can handle http requests\r\n4) Shutdown redis database\r\n5) Now, the express server is unable to handle connections (as expected) and the client \"hangs\" before timing out.\r\n6) Turn Redis Database back on.\r\n7) Note that redis client used by connect-redis immediately regains connection.  (I see this because I captured the \"connect\" event on the node redis client.)\r\n8) Run test client again and for several minutes, requests continue to hang\r\n9) Eventually after a few minutes, the express server can handle connections again.\r\n\r\nIts as if there is some cache that needs to \"timeout\" before the state can be reset, but I don't know.  The expected behavior of course is that as soon as the at our Redis database is back up, Express should be able to start handling requests again.\r\n\r\nAny ideas?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/632",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/632/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/632/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/632/events",
    "html_url": "https://github.com/strongloop/express/issues/632",
    "id": 791420,
    "number": 632,
    "title": "JSON / JSONP responses should default to UTF-8",
    "user": {
      "login": "dshaw",
      "id": 4322,
      "avatar_url": "https://avatars.githubusercontent.com/u/4322?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dshaw",
      "html_url": "https://github.com/dshaw",
      "followers_url": "https://api.github.com/users/dshaw/followers",
      "following_url": "https://api.github.com/users/dshaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/dshaw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dshaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dshaw/subscriptions",
      "organizations_url": "https://api.github.com/users/dshaw/orgs",
      "repos_url": "https://api.github.com/users/dshaw/repos",
      "events_url": "https://api.github.com/users/dshaw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dshaw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2011-04-19T23:55:44Z",
    "updated_at": "2015-03-30T20:42:41Z",
    "closed_at": "2011-04-20T16:00:21Z",
    "body": "Behavior should be the same as HTML, defaults or not. Adding res.charset on every repsonse is a PITA. Setting something like app.set('charset', 'utf-8') might be nice."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/314",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/314/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/314/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/314/events",
    "html_url": "https://github.com/strongloop/express/issues/314",
    "id": 200828,
    "number": 314,
    "title": "delete cookie",
    "user": {
      "login": "weepy",
      "id": 820,
      "avatar_url": "https://avatars.githubusercontent.com/u/820?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/weepy",
      "html_url": "https://github.com/weepy",
      "followers_url": "https://api.github.com/users/weepy/followers",
      "following_url": "https://api.github.com/users/weepy/following{/other_user}",
      "gists_url": "https://api.github.com/users/weepy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/weepy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/weepy/subscriptions",
      "organizations_url": "https://api.github.com/users/weepy/orgs",
      "repos_url": "https://api.github.com/users/weepy/repos",
      "events_url": "https://api.github.com/users/weepy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/weepy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 8,
    "created_at": "2010-05-19T14:58:46Z",
    "updated_at": "2015-01-09T12:28:49Z",
    "closed_at": "2010-06-04T00:58:13Z",
    "body": "It doesn't seem possible to delete a cookie value.  I would expect something like :\r\n<code>this.cookie(\"myval\", null)</code>"
  }
]
