[
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2558",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2558/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2558/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2558/events",
    "html_url": "https://github.com/strongloop/express/issues/2558",
    "id": 58478047,
    "number": 2558,
    "title": "Add .set() to Express Router",
    "user": {
      "login": "gtomitsuka",
      "id": 10295671,
      "avatar_url": "https://avatars.githubusercontent.com/u/10295671?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gtomitsuka",
      "html_url": "https://github.com/gtomitsuka",
      "followers_url": "https://api.github.com/users/gtomitsuka/followers",
      "following_url": "https://api.github.com/users/gtomitsuka/following{/other_user}",
      "gists_url": "https://api.github.com/users/gtomitsuka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gtomitsuka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gtomitsuka/subscriptions",
      "organizations_url": "https://api.github.com/users/gtomitsuka/orgs",
      "repos_url": "https://api.github.com/users/gtomitsuka/repos",
      "events_url": "https://api.github.com/users/gtomitsuka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gtomitsuka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-21T22:32:42Z",
    "updated_at": "2015-02-23T05:30:46Z",
    "closed_at": "2015-02-23T05:28:22Z",
    "body": "Hello,\r\n\r\nI've been working on a project and pretend using both EJS and Jade for it.\r\nFor this purpose, I thought separating stuff in multiple routers would work. However, when I tried to run it, I noticed the `express.Router()` does not include a `router.set('view engine', 'ejs')`. I am currently getting the files using `fs` and it works fine, but I really would like to have the advantages and simpler code that rendering with Express has. "
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2557",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2557/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2557/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2557/events",
    "html_url": "https://github.com/strongloop/express/pull/2557",
    "id": 58469305,
    "number": 2557,
    "title": "test: Fixed done typo",
    "user": {
      "login": "sethkrasnianski",
      "id": 1910114,
      "avatar_url": "https://avatars.githubusercontent.com/u/1910114?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sethkrasnianski",
      "html_url": "https://github.com/sethkrasnianski",
      "followers_url": "https://api.github.com/users/sethkrasnianski/followers",
      "following_url": "https://api.github.com/users/sethkrasnianski/following{/other_user}",
      "gists_url": "https://api.github.com/users/sethkrasnianski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sethkrasnianski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sethkrasnianski/subscriptions",
      "organizations_url": "https://api.github.com/users/sethkrasnianski/orgs",
      "repos_url": "https://api.github.com/users/sethkrasnianski/repos",
      "events_url": "https://api.github.com/users/sethkrasnianski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sethkrasnianski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/bug",
        "name": "bug",
        "color": "fc2929"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/tests",
        "name": "tests",
        "color": "944008"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-21T18:27:55Z",
    "updated_at": "2015-02-23T06:04:25Z",
    "closed_at": "2015-02-23T06:04:25Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2557",
      "html_url": "https://github.com/strongloop/express/pull/2557",
      "diff_url": "https://github.com/strongloop/express/pull/2557.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2557.patch"
    },
    "body": "Noticed line 32 had the typo `if (err) return don(err);`"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2556",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2556/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2556/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2556/events",
    "html_url": "https://github.com/strongloop/express/issues/2556",
    "id": 58403462,
    "number": 2556,
    "title": "upgrade event does not fired",
    "user": {
      "login": "StreetStrider",
      "id": 2124761,
      "avatar_url": "https://avatars.githubusercontent.com/u/2124761?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StreetStrider",
      "html_url": "https://github.com/StreetStrider",
      "followers_url": "https://api.github.com/users/StreetStrider/followers",
      "following_url": "https://api.github.com/users/StreetStrider/following{/other_user}",
      "gists_url": "https://api.github.com/users/StreetStrider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StreetStrider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StreetStrider/subscriptions",
      "organizations_url": "https://api.github.com/users/StreetStrider/orgs",
      "repos_url": "https://api.github.com/users/StreetStrider/repos",
      "events_url": "https://api.github.com/users/StreetStrider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StreetStrider/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-20T20:05:40Z",
    "updated_at": "2015-02-20T20:28:16Z",
    "closed_at": "2015-02-20T20:10:52Z",
    "body": "It seemes that express@4 and express@3 does not fire `upgrade` event when client WebSocket requests it. Here's the code. Let's first try to use std `http` module:\r\n```javascript\r\nvar\r\n\thttp = require('http');\r\n\r\nvar server = http\r\n.createServer(function (rq, rs)\r\n{\r\n\trs.end('<title>test page</title>');\r\n})\r\n.listen(8080, console.log.bind(console, 'server started'));\r\n\r\nserver.on('upgrade', function (_, socket)\r\n{\r\n\tconsole.log('upgrade event fired', socket);\r\n});\r\n```\r\nOn client:\r\n```javascript\r\nnew WebSocket('ws://localhost:8080');\r\n```\r\nThis works. Server logs `upgrade` event, client does not throw any errors. Now, let's replace `http` with `express`. Here's the analogous code with required adaptations:\r\n```javascript\r\nvar\r\n\tserver = require('express')();\r\n\r\nserver.get('/', function (rq, rs)\r\n{\r\n\trs.end('<title>test page</title>')\r\n})\r\n.listen(8080, console.log.bind(console, 'server started'));\r\n\r\nserver.on('upgrade', function (_, socket)\r\n{\r\n\tconsole.log('upgrade event fired', socket);\r\n});\r\n```\r\nThe client is the same. This code does not work: server does not fire event, and client throws handshake error.\r\n\r\nI'm trying to integrate express with [ws](https://github.com/websockets/ws) module. It can use express instance and relies on `upgrade` event. I've logged through its code, and looks like error somewhere on express side. Or maybe I don't understand express API properly. Anyway, I'm looking for help."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2555",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2555/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2555/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2555/events",
    "html_url": "https://github.com/strongloop/express/issues/2555",
    "id": 58170885,
    "number": 2555,
    "title": "Should Express 4.x support Node.js 0.8?",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-19T05:54:24Z",
    "updated_at": "2015-02-19T06:34:11Z",
    "closed_at": null,
    "body": "With Express 3.x users looking for somewhere to go and 5.0 being on the horizon (and doesn't need 0.8 support), should 0.8 support get added to Express 4.x? I don't believe there are any blockers, since there are no non-0.8 dependencies."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2554",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2554/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2554/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2554/events",
    "html_url": "https://github.com/strongloop/express/pull/2554",
    "id": 58164333,
    "number": 2554,
    "title": "Release 4.12",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/release",
        "name": "release",
        "color": "000000"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-19T03:41:03Z",
    "updated_at": "2015-02-23T06:04:25Z",
    "closed_at": "2015-02-23T06:04:25Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2554",
      "html_url": "https://github.com/strongloop/express/pull/2554",
      "diff_url": "https://github.com/strongloop/express/pull/2554.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2554.patch"
    },
    "body": "This is a tracking issue for release 4.12.\r\n\r\n**Please keep feature requests in their own issues**\r\n\r\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\r\n\r\nList of changes for release:\r\n- [x] Add AppVeyor for Windows testing\r\n- [x] Fix `\"trust proxy\"` setting to inherit when app is mounted (regression) #2550 #2551\r\n- [x] Generate `ETag`s for all request responses #2546 \r\n- [x] Node.js 0.12 support\r\n- [x] Use `content-type` to parse `Content-Type` headers\r\n\r\n**Testing this release**\r\n\r\nIf you want to try out this release, you can install it with the following commands:\r\n```bash\r\n$ npm cache clean express\r\n$ npm install strongloop/express#4.12\r\n```\r\n\r\nOwners/collaborators: please do not merge this PR :)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2553",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2553/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2553/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2553/events",
    "html_url": "https://github.com/strongloop/express/pull/2553",
    "id": 58164275,
    "number": 2553,
    "title": "Release 4.12",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-19T03:40:07Z",
    "updated_at": "2015-02-19T03:41:25Z",
    "closed_at": "2015-02-19T03:41:25Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2553",
      "html_url": "https://github.com/strongloop/express/pull/2553",
      "diff_url": "https://github.com/strongloop/express/pull/2553.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2553.patch"
    },
    "body": "This is a tracking issue for release 4.12.\r\n\r\n**Please keep feature requests in their own issues**\r\n\r\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\r\n\r\nList of changes for release:\r\n- [x] Fix `\"trust proxy\"` setting to inherit when app is mounted (regression) #2550 #2551\r\n- [x] Generate `ETag`s for all request responses #2546 \r\n- [x] Node.js 0.12 support\r\n- [x] Use `content-type` to parse `Content-Type` headers\r\n\r\n**Testing this release**\r\n\r\nIf you want to try out this release, you can install it with the following commands:\r\n```bash\r\n$ npm cache clean express\r\n$ npm install strongloop/express#4.12\r\n```\r\n\r\nOwners/collaborators: please do not merge this PR :)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2552",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2552/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2552/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2552/events",
    "html_url": "https://github.com/strongloop/express/issues/2552",
    "id": 57886227,
    "number": 2552,
    "title": "Fix setting inheritance",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/ideas",
        "name": "ideas",
        "color": "d7e102"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-17T05:50:09Z",
    "updated_at": "2015-04-08T06:32:39Z",
    "closed_at": null,
    "body": "Looking for feedback on this, but a recent issue was brought up with \"trust proxy\" and got me reading through a bunch of old issues on here.\r\n\r\nPersonally I like having apps as isolated islands, but sometimes it's nice/makes sense to inherit some settings from the parent app when using sub apps. There was a suggestion back in https://github.com/strongloop/express/issues/905#issuecomment-4750824 to add \"inherit ___\" settings where you would pick and choose settings to inherit. This seems kludgy to me, but I guess works?\r\n\r\nReally, right now the way mounted sub apps work with settings is half-assed :) They pretend like they will inherit settings, unless they are special magical default Express settings. You can't have it both ways, Express!\r\n\r\nSo, what should we do for 5.0:\r\n\r\n1. Remove setting inheritance and make it opt-in only\r\n  a. per setting\r\n  b. any setting\r\n2. Fix setting inheritance to differentiate \"default settings\" from Express itself vs user-set settings. When sub apps are mounted, all non-user-set settings will thus be inherited (which means default Express settings would now be inherited)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2551",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2551/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2551/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2551/events",
    "html_url": "https://github.com/strongloop/express/pull/2551",
    "id": 57808064,
    "number": 2551,
    "title": "Fix: 'trust proxy' setting not inherited by mounted app.",
    "user": {
      "login": "papandreou",
      "id": 373545,
      "avatar_url": "https://avatars.githubusercontent.com/u/373545?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/papandreou",
      "html_url": "https://github.com/papandreou",
      "followers_url": "https://api.github.com/users/papandreou/followers",
      "following_url": "https://api.github.com/users/papandreou/following{/other_user}",
      "gists_url": "https://api.github.com/users/papandreou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/papandreou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/papandreou/subscriptions",
      "organizations_url": "https://api.github.com/users/papandreou/orgs",
      "repos_url": "https://api.github.com/users/papandreou/repos",
      "events_url": "https://api.github.com/users/papandreou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/papandreou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/bug",
        "name": "bug",
        "color": "fc2929"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 14,
    "created_at": "2015-02-16T14:07:21Z",
    "updated_at": "2015-02-23T16:42:31Z",
    "closed_at": "2015-02-23T06:04:25Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2551",
      "html_url": "https://github.com/strongloop/express/pull/2551",
      "diff_url": "https://github.com/strongloop/express/pull/2551.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2551.patch"
    },
    "body": "The issue was introduced in 566720be where `app.defaultConfiguration` was updated to set 'trust proxy' unconditionally, which means that the default value of false would always shadow the value that should be inherited from the parent app.\r\n\r\nThis fix avoids setting a default value and instead handles the absence of a 'trust proxy fn' setting whenever it's used.\r\n\r\nFrom a cursory glance I think a better fix would involve changing the `all` function exported by the `proxy-addr` module to treat a `trust` parameter of `false` or `undefined` as \"trust none\" instead of \"trust all\".\r\n\r\nFixes #2550."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2550",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2550/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2550/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2550/events",
    "html_url": "https://github.com/strongloop/express/issues/2550",
    "id": 57791872,
    "number": 2550,
    "title": "Regression: \"trust proxy\" setting not inherited by mounted app",
    "user": {
      "login": "papandreou",
      "id": 373545,
      "avatar_url": "https://avatars.githubusercontent.com/u/373545?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/papandreou",
      "html_url": "https://github.com/papandreou",
      "followers_url": "https://api.github.com/users/papandreou/followers",
      "following_url": "https://api.github.com/users/papandreou/following{/other_user}",
      "gists_url": "https://api.github.com/users/papandreou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/papandreou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/papandreou/subscriptions",
      "organizations_url": "https://api.github.com/users/papandreou/orgs",
      "repos_url": "https://api.github.com/users/papandreou/repos",
      "events_url": "https://api.github.com/users/papandreou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/papandreou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/bug",
        "name": "bug",
        "color": "fc2929"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-16T11:13:48Z",
    "updated_at": "2015-02-23T06:04:25Z",
    "closed_at": "2015-02-23T06:04:25Z",
    "body": "Bisect says this broke in 566720be15 (between 3.6.0 and 3.7.0) when some new capabilitites were added to `trust proxy`.\r\n\r\n```js\r\nvar express = require('express');\r\nvar app = express();\r\n\r\napp.set('trust proxy', true);\r\napp.set('foobarquux', true);\r\n\r\nvar subApp = express()\r\n    .get('/', function (req, res) {\r\n        res.send({ip: req.ip, foobarquux: subApp.get('foobarquux'), trust: subApp.get('trust proxy')});\r\n    });\r\n\r\napp.use('/', subApp);\r\n\r\napp.listen(1337);\r\n```\r\n\r\nBefore that commit, the above server returned:\r\n\r\n```json\r\n{\r\n  \"ip\": \"127.0.0.1\",\r\n  \"foobarquux\": true,\r\n  \"trust\": true\r\n}\r\n```\r\n\r\nAnd after:\r\n\r\n```json\r\n{\r\n  \"ip\": \"127.0.0.1\",\r\n  \"foobarquux\": true,\r\n  \"trust\": false\r\n}\r\n```\r\n\r\nAs the `foobarquux` setting demonstrates, settings are clearly supposed to be inherited."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2549",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2549/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2549/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2549/events",
    "html_url": "https://github.com/strongloop/express/issues/2549",
    "id": 57759117,
    "number": 2549,
    "title": "OPTIONS request calls route.all method",
    "user": {
      "login": "rhys-vdw",
      "id": 822105,
      "avatar_url": "https://avatars.githubusercontent.com/u/822105?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhys-vdw",
      "html_url": "https://github.com/rhys-vdw",
      "followers_url": "https://api.github.com/users/rhys-vdw/followers",
      "following_url": "https://api.github.com/users/rhys-vdw/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhys-vdw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhys-vdw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhys-vdw/subscriptions",
      "organizations_url": "https://api.github.com/users/rhys-vdw/orgs",
      "repos_url": "https://api.github.com/users/rhys-vdw/repos",
      "events_url": "https://api.github.com/users/rhys-vdw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhys-vdw/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 18,
    "created_at": "2015-02-16T02:34:13Z",
    "updated_at": "2015-02-16T05:28:58Z",
    "closed_at": "2015-02-16T03:35:13Z",
    "body": "Hi, this is a bit complex, but I assume it boils down to a misunderstanding of the API.\r\n\r\nMy routing is set up like this:\r\n\r\n\r\n`app.coffee`\r\n```coffeescript\r\nrouter = require 'router'\r\n# ...\r\npassport.use User.createStrategy()\r\npassport.serializeUser User.serializeUser()\r\npassport.deserializeUser User.deserializeUser()\r\n\r\napp = express()\r\n\r\napp.use bodyParser.json()\r\napp.use cookieParser()\r\napp.use session\r\n  secret: '----'\r\n  key: '---'\r\n  cookie:\r\n    maxAge: moment.duration(30, 'days').asMilliseconds()\r\n  saveUninitialized: true\r\n  resave: true\r\napp.use passport.initialize()\r\napp.use passport.session()\r\napp.use router\r\n```\r\n\r\n`router.coffee`\r\n```coffee\r\nclientsRouter = require 'clients-router'\r\nrouter = express.Router()\r\n# ...\r\nrouter.use '/clients', clientsRouter\r\n# ...\r\nmodule.exports = router\r\n```\r\n\r\n`clients-router.coffee`\r\n```\r\n\r\nclientsRouter = express.Router()\r\n\r\nclientsRouter.route '/'\r\n.all   User.administratorOnly()\r\n.get   pex.send (req) -> Client.fetchAll()\r\n.post  pex.send (req) -> Client.forge(req.body).save()\r\n\r\nmodule.exports = clientsRouter\r\n```\r\n\r\nSo, routers twice nested. The problem here is that `User.administratorOnly()` is called **before** `passport.session()`. So I get a 401 from my `administratorOnly` call when I hit this route.\r\n\r\nEverything is okay, however, if I move the check into the method specific middleware like this:\r\n\r\n```\r\nclientsRouter.route '/'\r\n.get   User.administratorOnly(), pex.send (req) -> Client.fetchAll()\r\n.post  User.administratorOnly(), pex.send (req) -> Client.forge(req.body).save()\r\n```\r\n\r\nI'd have assumed that the 'all' middleware would be fired immediately before `get`. But I can see (from logs) that `administratorOnly` is being called **before** Passport's `deserializeUser` function. (Therefore there is no access to the `req.user` object). Is this a bug?\r\n\r\n(PS. Sorry for CoffeeScript, also `pex.send` just returns a middleware that wraps a promise.)"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2548",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2548/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2548/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2548/events",
    "html_url": "https://github.com/strongloop/express/issues/2548",
    "id": 57727086,
    "number": 2548,
    "title": "Cannot set property 'cache-control' of undefined in io.js/v0.12",
    "user": {
      "login": "halfdan",
      "id": 176576,
      "avatar_url": "https://avatars.githubusercontent.com/u/176576?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/halfdan",
      "html_url": "https://github.com/halfdan",
      "followers_url": "https://api.github.com/users/halfdan/followers",
      "following_url": "https://api.github.com/users/halfdan/following{/other_user}",
      "gists_url": "https://api.github.com/users/halfdan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/halfdan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/halfdan/subscriptions",
      "organizations_url": "https://api.github.com/users/halfdan/orgs",
      "repos_url": "https://api.github.com/users/halfdan/repos",
      "events_url": "https://api.github.com/users/halfdan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/halfdan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-15T11:23:27Z",
    "updated_at": "2015-02-15T18:25:15Z",
    "closed_at": "2015-02-15T16:58:03Z",
    "body": "Not exactly sure what is happening here but express.js is failing on io.js and v0.12 when used within Ghost: https://travis-ci.org/halfdan/Ghost/builds/50824137\r\n\r\n```\r\nTypeError: Cannot set property 'cache-control' of undefined\r\n      at ServerResponse.OutgoingMessage.setHeader (_http_outgoing.js:341:22)\r\n      at ServerResponse.header (/home/travis/build/halfdan/Ghost/node_modules/express/lib/response.js:695:10)\r\n      at ServerResponse.header (/home/travis/build/halfdan/Ghost/node_modules/express/lib/response.js:698:12)\r\n      at Object.errors.error404 (/home/travis/build/halfdan/Ghost/core/server/errors/index.js:290:13)\r\n      at Context.<anonymous> (/home/travis/build/halfdan/Ghost/core/test/unit/error_handling_spec.js:342:20)\r\n```\r\n\r\nHere's a piece of code that shows the issue:\r\n\r\n```\r\nvar express = require('express');\r\nvar res = express.response;\r\nres.set({'cache-header': 'foo'});\r\n```\r\n\r\nAbove code works in v0.10 but not in v0.12. Express version is latest 4.11.2.\r\n\r\nref #2539, #2538 \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2547",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2547/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2547/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2547/events",
    "html_url": "https://github.com/strongloop/express/issues/2547",
    "id": 57716194,
    "number": 2547,
    "title": "Reject two(2+) in a row incoming requests.",
    "user": {
      "login": "vasyl-romanchak",
      "id": 8040136,
      "avatar_url": "https://avatars.githubusercontent.com/u/8040136?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasyl-romanchak",
      "html_url": "https://github.com/vasyl-romanchak",
      "followers_url": "https://api.github.com/users/vasyl-romanchak/followers",
      "following_url": "https://api.github.com/users/vasyl-romanchak/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasyl-romanchak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasyl-romanchak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasyl-romanchak/subscriptions",
      "organizations_url": "https://api.github.com/users/vasyl-romanchak/orgs",
      "repos_url": "https://api.github.com/users/vasyl-romanchak/repos",
      "events_url": "https://api.github.com/users/vasyl-romanchak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasyl-romanchak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-15T03:30:32Z",
    "updated_at": "2015-02-17T21:45:28Z",
    "closed_at": "2015-02-17T21:45:28Z",
    "body": "Sometimes we need restrict executing repeating requests from a user if the first request has not been finished. For example: We do want register user at some service, and only after that put him into database with external id. I would like to have a service where I can set protected routes.\r\nI have solved this problem by checking flag at request.start() -> and removed it after the request has been completed. Anyway I'm looking for your suggestion guys."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2546",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2546/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2546/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2546/events",
    "html_url": "https://github.com/strongloop/express/issues/2546",
    "id": 57614696,
    "number": 2546,
    "title": "ETag generation for non-GET requests",
    "user": {
      "login": "ryanmeador",
      "id": 1176600,
      "avatar_url": "https://avatars.githubusercontent.com/u/1176600?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanmeador",
      "html_url": "https://github.com/ryanmeador",
      "followers_url": "https://api.github.com/users/ryanmeador/followers",
      "following_url": "https://api.github.com/users/ryanmeador/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanmeador/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanmeador/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanmeador/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanmeador/orgs",
      "repos_url": "https://api.github.com/users/ryanmeador/repos",
      "events_url": "https://api.github.com/users/ryanmeador/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanmeador/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 6,
    "created_at": "2015-02-13T15:50:25Z",
    "updated_at": "2015-02-19T04:05:10Z",
    "closed_at": "2015-02-19T04:05:10Z",
    "body": "In issue #1619, ETag support was limited to only GET requests.  It seems to me that it would be valuable on any type of request, such as a POST to perform a search that returns the same results for the same input (see my more detailed comment on that issue).  Could you add this enhancement on the 3.x and 4.x lines (I'm presently running the former, not sure when I'll upgrade)?  Thanks!"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2545",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2545/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2545/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2545/events",
    "html_url": "https://github.com/strongloop/express/pull/2545",
    "id": 57517124,
    "number": 2545,
    "title": "Add support for conditional loading of middleware",
    "user": {
      "login": "gustavnikolaj",
      "id": 1371503,
      "avatar_url": "https://avatars.githubusercontent.com/u/1371503?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gustavnikolaj",
      "html_url": "https://github.com/gustavnikolaj",
      "followers_url": "https://api.github.com/users/gustavnikolaj/followers",
      "following_url": "https://api.github.com/users/gustavnikolaj/following{/other_user}",
      "gists_url": "https://api.github.com/users/gustavnikolaj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gustavnikolaj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gustavnikolaj/subscriptions",
      "organizations_url": "https://api.github.com/users/gustavnikolaj/orgs",
      "repos_url": "https://api.github.com/users/gustavnikolaj/repos",
      "events_url": "https://api.github.com/users/gustavnikolaj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gustavnikolaj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2015-02-12T20:47:02Z",
    "updated_at": "2015-02-24T14:15:03Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2545",
      "html_url": "https://github.com/strongloop/express/pull/2545",
      "diff_url": "https://github.com/strongloop/express/pull/2545.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2545.patch"
    },
    "body": "I have a need to be able to install middleware based on the value of configuration.\r\n\r\nIt could be done with [express-noop](https://www.npmjs.com/package/express-noop) like this:\r\n```js\r\napp.use(condition ? middleware : require('express-noop')());\r\n```\r\n\r\nThat is doing it's job, but it is wasteful, as there is no need to register any middleware if the condition is false. It's only being evaluated up front any way.\r\n\r\nIt could also be done by using an if sentence.\r\n```js\r\nvar app = express();\r\n\r\nif (condition) {\r\n    app.use(middleware);\r\n}\r\n```\r\n\r\nBut it is annoying when you are nesting express applications to build structures:\r\n```js\r\nvar app = express();\r\nvar app2 = express();\r\n\r\nif (condition) {\r\n    app2.use(middleware);\r\n}\r\n\r\napp2.use(bar)\r\n\r\napp.use(foo)\r\n   .use(app2);\r\n```\r\n\r\nWith this PR you could use `.useif()` instead of use and make it all much more convenient and readable:\r\n```js\r\nvar app = express();\r\n\r\napp\r\n  .use(foo)\r\n  .use(express()\r\n    .useif(condition, middleware)\r\n    .use(bar));\r\n```\r\n\r\nI hope that I made my motivation and use-case clear, and that the test coverage and code style lives up to your expectations. If there is anything that I can improve, I'll be more than happy to change it."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2544",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2544/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2544/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2544/events",
    "html_url": "https://github.com/strongloop/express/issues/2544",
    "id": 57438385,
    "number": 2544,
    "title": "400 respose when request param is $%",
    "user": {
      "login": "DinisCruz",
      "id": 656739,
      "avatar_url": "https://avatars.githubusercontent.com/u/656739?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DinisCruz",
      "html_url": "https://github.com/DinisCruz",
      "followers_url": "https://api.github.com/users/DinisCruz/followers",
      "following_url": "https://api.github.com/users/DinisCruz/following{/other_user}",
      "gists_url": "https://api.github.com/users/DinisCruz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DinisCruz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DinisCruz/subscriptions",
      "organizations_url": "https://api.github.com/users/DinisCruz/orgs",
      "repos_url": "https://api.github.com/users/DinisCruz/repos",
      "events_url": "https://api.github.com/users/DinisCruz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DinisCruz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-12T09:51:41Z",
    "updated_at": "2015-02-12T21:54:51Z",
    "closed_at": "2015-02-12T16:37:04Z",
    "body": "As you can see at https://github.com/TeamMentor/TM_4_0_Design/issues/421 we had an issue when the presence of **$%** in the request was causing the request to fail (that issue has a unit test to replicate it)\r\n\r\nI tracked the error to the **decodeURIComponent** native EcmaScript.js function, and I guess this behaviour is 'by design'? (i.e. throw exception when uri component cannot be decoded)\r\n\r\nIf so, what is the recommended way to handle this? \r\n\r\nShould we catch it with a global error handler? like for example:\r\n```coffee\r\n      app.use (err, req, res, next)->\r\n          res.status(500)\r\n             .send(err.message)\r\n```\r\n\r\n@dougwilson what do you think? \r\n\r\nThe fact that we have this exception inside express is an interesting edge case for us, since as you can see at [Validate the search string to sanitize from potential injection attacks](https://github.com/TeamMentor/TM_4_0_Design/issues/355) we actually need to allow the user to provide all sorts of crazy search payloads.\r\n\r\nHumm, I wonder if the same behaviour happens on a post variable"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2543",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2543/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2543/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2543/events",
    "html_url": "https://github.com/strongloop/express/pull/2543",
    "id": 57348027,
    "number": 2543,
    "title": "Make \"use\" app method style-consitent with othe app methods",
    "user": {
      "login": "AlexYursha",
      "id": 4990557,
      "avatar_url": "https://avatars.githubusercontent.com/u/4990557?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexYursha",
      "html_url": "https://github.com/AlexYursha",
      "followers_url": "https://api.github.com/users/AlexYursha/followers",
      "following_url": "https://api.github.com/users/AlexYursha/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexYursha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexYursha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexYursha/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexYursha/orgs",
      "repos_url": "https://api.github.com/users/AlexYursha/repos",
      "events_url": "https://api.github.com/users/AlexYursha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexYursha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-11T17:25:52Z",
    "updated_at": "2015-02-11T17:27:49Z",
    "closed_at": "2015-02-11T17:27:46Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2543",
      "html_url": "https://github.com/strongloop/express/pull/2543",
      "diff_url": "https://github.com/strongloop/express/pull/2543.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2543.patch"
    },
    "body": "Just a stylistic change so that everything looks the same."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2542",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2542/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2542/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2542/events",
    "html_url": "https://github.com/strongloop/express/issues/2542",
    "id": 57302794,
    "number": 2542,
    "title": "Express server setup with http and https and CORS issue",
    "user": {
      "login": "marcelijanowski",
      "id": 345851,
      "avatar_url": "https://avatars.githubusercontent.com/u/345851?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcelijanowski",
      "html_url": "https://github.com/marcelijanowski",
      "followers_url": "https://api.github.com/users/marcelijanowski/followers",
      "following_url": "https://api.github.com/users/marcelijanowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcelijanowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcelijanowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcelijanowski/subscriptions",
      "organizations_url": "https://api.github.com/users/marcelijanowski/orgs",
      "repos_url": "https://api.github.com/users/marcelijanowski/repos",
      "events_url": "https://api.github.com/users/marcelijanowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcelijanowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-11T11:12:45Z",
    "updated_at": "2015-02-16T23:28:57Z",
    "closed_at": "2015-02-16T23:28:57Z",
    "body": "I have such configuration in express server.js :\r\n```javascript\r\n app.use(function (request, response, next) {\r\n   response.header('Access-Control-Allow-Origin', '*');\r\n   response.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\r\n   response.header(\r\n    'Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With, X-Api-Key'\r\n  );\r\n\r\n  next();\r\n})\r\n\r\napp.options('*', function (request, response) {\r\n  response.send(200);\r\n});\r\n\r\napp.listen(httpPort, function () {\r\n  console.log('Listening on port: ' + httpPort);\r\n});\r\n\r\nhttpsServer = https.createServer(credentials, app);\r\nhttpsServer.listen(httpsPort, function () {\r\n  console.log('Listening on port: ' + httpsPort);\r\n});\r\n```\r\n\r\nAlso I have to enpoints : https://local:8000 and http://local:8001\r\n\r\nAt moment I'm trying to do call from http://local:8001 to https://local:8001/api but getting CORS issue :\r\n\r\nCross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://local:8000/api/. This can be fixed by moving the resource to the same domain or enabling CORS.\r\n\r\nHow to sort problem with CORS on express server"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2541",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2541/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2541/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2541/events",
    "html_url": "https://github.com/strongloop/express/issues/2541",
    "id": 57234878,
    "number": 2541,
    "title": "Failure parsing urls from windows client",
    "user": {
      "login": "brycefisher",
      "id": 220106,
      "avatar_url": "https://avatars.githubusercontent.com/u/220106?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brycefisher",
      "html_url": "https://github.com/brycefisher",
      "followers_url": "https://api.github.com/users/brycefisher/followers",
      "following_url": "https://api.github.com/users/brycefisher/following{/other_user}",
      "gists_url": "https://api.github.com/users/brycefisher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brycefisher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brycefisher/subscriptions",
      "organizations_url": "https://api.github.com/users/brycefisher/orgs",
      "repos_url": "https://api.github.com/users/brycefisher/repos",
      "events_url": "https://api.github.com/users/brycefisher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brycefisher/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-02-10T20:52:47Z",
    "updated_at": "2015-02-10T22:09:39Z",
    "closed_at": "2015-02-10T21:59:02Z",
    "body": "### Scenario\r\n\r\nIn production, a number of windows based crawlers are trying to index our site. Unfortunately, they're using windows-1252 encoding which breaks the router.\r\n\r\n### Steps to reproduce:\r\n\r\n * Make index.js\r\n\r\n```javascript\r\nvar express = require('express');\r\nvar app = express();\r\n\r\napp.get('/*', function(req, res){ // The * is the key bit for this example\r\n    res.send('hello world');\r\n});\r\napp.listen(3000);\r\n```\r\n\r\n * Add a package.json listing express as a dependency && npm install\r\n * In the terminal\r\n\r\n```bash\r\n$ cd /path/to/code\r\n$ node index.js\r\n```\r\n\r\n * In the browser, go to http://127.0.0.1:3000/%E2_7\r\n * You'll an error message related to decoding url params\r\n\r\n### Context\r\n\r\nI see that https://github.com/strongloop/express/issues/2384 addressed a similar topic from the point of view of functionality. I'd like to raise this issue again from the scalability and performance point of view. \r\n\r\n### My questions:\r\n\r\n 1. Does express already have a mechanism to more *gracefully* handle badly encoded urls rather than crashing during the routing step?\r\n 2. If not, can this sort of mechanism be added?\r\n 3. Do you have any recommendations on good ways to mitigate errors related to this sort of request?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2540",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2540/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2540/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2540/events",
    "html_url": "https://github.com/strongloop/express/pull/2540",
    "id": 57134300,
    "number": 2540,
    "title": "Ajax example based on jQuery",
    "user": {
      "login": "DarkScorpion",
      "id": 1926649,
      "avatar_url": "https://avatars.githubusercontent.com/u/1926649?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DarkScorpion",
      "html_url": "https://github.com/DarkScorpion",
      "followers_url": "https://api.github.com/users/DarkScorpion/followers",
      "following_url": "https://api.github.com/users/DarkScorpion/following{/other_user}",
      "gists_url": "https://api.github.com/users/DarkScorpion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DarkScorpion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DarkScorpion/subscriptions",
      "organizations_url": "https://api.github.com/users/DarkScorpion/orgs",
      "repos_url": "https://api.github.com/users/DarkScorpion/repos",
      "events_url": "https://api.github.com/users/DarkScorpion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DarkScorpion/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/examples",
        "name": "examples",
        "color": "5319e7"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-10T05:57:59Z",
    "updated_at": "2015-02-10T06:13:32Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2540",
      "html_url": "https://github.com/strongloop/express/pull/2540",
      "diff_url": "https://github.com/strongloop/express/pull/2540.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2540.patch"
    },
    "body": "I not seen ajax example and decided to add."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2539",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2539/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2539/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2539/events",
    "html_url": "https://github.com/strongloop/express/issues/2539",
    "id": 57098600,
    "number": 2539,
    "title": "io.js support",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/future",
        "name": "future",
        "color": "e102d8"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 31,
    "created_at": "2015-02-09T22:16:29Z",
    "updated_at": "2015-03-17T06:11:34Z",
    "closed_at": "2015-03-17T06:04:02Z",
    "body": "This is a tracking issue for when \"official\" io.js support comes to Express 4.x and 3.x. As of now, support for io.js is not completely known, but if there are issues, please open a new issue and they will be fixed, even before \"official\" support.\r\n\r\nOfficial support will not arrive until https://github.com/iojs/io.js/issues/269 or something similar is resolved; Express needs to be able to specify engine compatibility on installation."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2538",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2538/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2538/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2538/events",
    "html_url": "https://github.com/strongloop/express/issues/2538",
    "id": 57098491,
    "number": 2538,
    "title": "Node.js 0.12 Support",
    "user": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/3.x",
        "name": "3.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/future",
        "name": "future",
        "color": "e102d8"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-09T22:15:32Z",
    "updated_at": "2015-02-23T06:04:25Z",
    "closed_at": "2015-02-23T06:04:25Z",
    "body": "This is a tracking issue for when \"official\" 0.12 support comes to Express 4.x and 3.x. As of now, both 4.x and 3.x should not have issues on Node.js 0.12, but if they do, please open a new issue and they will be fixed, even before \"official\" support.\r\n\r\nOfficial support arrives with 4.12.0 and 3.20.0\r\n\r\n**Please, make new issues regarding problem you find, rather than posting anything here about issues**"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2537",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2537/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2537/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2537/events",
    "html_url": "https://github.com/strongloop/express/issues/2537",
    "id": 57032395,
    "number": 2537,
    "title": "app.get('/:id?', fn) not work if id is null",
    "user": {
      "login": "damphat",
      "id": 677382,
      "avatar_url": "https://avatars.githubusercontent.com/u/677382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damphat",
      "html_url": "https://github.com/damphat",
      "followers_url": "https://api.github.com/users/damphat/followers",
      "following_url": "https://api.github.com/users/damphat/following{/other_user}",
      "gists_url": "https://api.github.com/users/damphat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damphat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damphat/subscriptions",
      "organizations_url": "https://api.github.com/users/damphat/orgs",
      "repos_url": "https://api.github.com/users/damphat/repos",
      "events_url": "https://api.github.com/users/damphat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damphat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-09T13:48:02Z",
    "updated_at": "2015-02-10T16:11:47Z",
    "closed_at": null,
    "body": "```\r\n>npm i strongloop/express\r\n```\r\n\r\napp.js\r\n\r\n```\r\napp.enable('strict routing');\r\napp.get('/:id?', function(req, res) {\r\n    res.end(req.params.id);\r\n});\r\n```\r\n\r\n```id``` is optional so try with id = \"\":\r\n```\r\n> GET /\r\nCannot GET /\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2536",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2536/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2536/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2536/events",
    "html_url": "https://github.com/strongloop/express/pull/2536",
    "id": 56987885,
    "number": 2536,
    "title": "Update license year",
    "user": {
      "login": "lpww",
      "id": 8637335,
      "avatar_url": "https://avatars.githubusercontent.com/u/8637335?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lpww",
      "html_url": "https://github.com/lpww",
      "followers_url": "https://api.github.com/users/lpww/followers",
      "following_url": "https://api.github.com/users/lpww/following{/other_user}",
      "gists_url": "https://api.github.com/users/lpww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lpww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lpww/subscriptions",
      "organizations_url": "https://api.github.com/users/lpww/orgs",
      "repos_url": "https://api.github.com/users/lpww/repos",
      "events_url": "https://api.github.com/users/lpww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lpww/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-02-09T04:28:14Z",
    "updated_at": "2015-02-09T04:29:29Z",
    "closed_at": "2015-02-09T04:29:19Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2536",
      "html_url": "https://github.com/strongloop/express/pull/2536",
      "diff_url": "https://github.com/strongloop/express/pull/2536.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2536.patch"
    },
    "body": "Updated license year for 2015. No other files were changed\r\n![express license year](https://cloud.githubusercontent.com/assets/8637335/6101006/e3cca624-afd0-11e4-96a3-43920608369e.png)\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2535",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2535/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2535/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2535/events",
    "html_url": "https://github.com/strongloop/express/issues/2535",
    "id": 56987571,
    "number": 2535,
    "title": "some regexps do not work with `.use()` but do with `.all()`",
    "user": {
      "login": "mscdex",
      "id": 54666,
      "avatar_url": "https://avatars.githubusercontent.com/u/54666?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mscdex",
      "html_url": "https://github.com/mscdex",
      "followers_url": "https://api.github.com/users/mscdex/followers",
      "following_url": "https://api.github.com/users/mscdex/following{/other_user}",
      "gists_url": "https://api.github.com/users/mscdex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mscdex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mscdex/subscriptions",
      "organizations_url": "https://api.github.com/users/mscdex/orgs",
      "repos_url": "https://api.github.com/users/mscdex/repos",
      "events_url": "https://api.github.com/users/mscdex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mscdex/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/discuss",
        "name": "discuss",
        "color": "02d7e1"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-09T04:22:01Z",
    "updated_at": "2015-02-09T05:19:14Z",
    "closed_at": null,
    "body": "It seems there is a bug with using (at least some) regexps with `.use()` since using the same exact regexp with `.all()` works as expected.\r\n\r\nExample:\r\n\r\n```javascript\r\nvar app = require('express')();\r\n\r\n// works:\r\n//app.all(/\\/lang$/, function(req, res) {\r\n// doesn't work:\r\napp.use(/\\/lang$/, function(req, res) {\r\n  res.send('caught by middleware');\r\n});\r\n\r\napp.listen(8000);\r\n\r\n// now try hitting `http://localhost:8000/foo/lang` in your browser\r\n```\r\n\r\nI tested this with Express 4.11.2.\r\n\r\n**Update:** It seems `http://localhost:8000/lang` *does* with `app.use()`, not other paths (e.g. `/foo/lang`)..."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2534",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2534/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2534/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2534/events",
    "html_url": "https://github.com/strongloop/express/pull/2534",
    "id": 56974268,
    "number": 2534,
    "title": "examples/mvc -> fixed pet/:id/edit",
    "user": {
      "login": "Bullewinkle",
      "id": 3613558,
      "avatar_url": "https://avatars.githubusercontent.com/u/3613558?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bullewinkle",
      "html_url": "https://github.com/Bullewinkle",
      "followers_url": "https://api.github.com/users/Bullewinkle/followers",
      "following_url": "https://api.github.com/users/Bullewinkle/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bullewinkle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bullewinkle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bullewinkle/subscriptions",
      "organizations_url": "https://api.github.com/users/Bullewinkle/orgs",
      "repos_url": "https://api.github.com/users/Bullewinkle/repos",
      "events_url": "https://api.github.com/users/Bullewinkle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bullewinkle/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/examples",
        "name": "examples",
        "color": "5319e7"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-08T23:41:02Z",
    "updated_at": "2015-02-19T04:04:21Z",
    "closed_at": "2015-02-19T04:04:21Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2534",
      "html_url": "https://github.com/strongloop/express/pull/2534",
      "diff_url": "https://github.com/strongloop/express/pull/2534.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2534.patch"
    },
    "body": "There was a bug in template on route pet/:id/edit. Server tried to find 'user' in 'pets' object, then responded with status 500. Fixed now."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2533",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2533/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2533/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2533/events",
    "html_url": "https://github.com/strongloop/express/pull/2533",
    "id": 56938130,
    "number": 2533,
    "title": "Add node.js 0.12 and io.js to travis.yml",
    "user": {
      "login": "demohi",
      "id": 1209159,
      "avatar_url": "https://avatars.githubusercontent.com/u/1209159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/demohi",
      "html_url": "https://github.com/demohi",
      "followers_url": "https://api.github.com/users/demohi/followers",
      "following_url": "https://api.github.com/users/demohi/following{/other_user}",
      "gists_url": "https://api.github.com/users/demohi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/demohi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/demohi/subscriptions",
      "organizations_url": "https://api.github.com/users/demohi/orgs",
      "repos_url": "https://api.github.com/users/demohi/repos",
      "events_url": "https://api.github.com/users/demohi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/demohi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-08T04:13:00Z",
    "updated_at": "2015-02-08T04:22:04Z",
    "closed_at": "2015-02-08T04:21:52Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2533",
      "html_url": "https://github.com/strongloop/express/pull/2533",
      "diff_url": "https://github.com/strongloop/express/pull/2533.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2533.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2532",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2532/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2532/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2532/events",
    "html_url": "https://github.com/strongloop/express/issues/2532",
    "id": 56882148,
    "number": 2532,
    "title": "support for matrix parameters when routing",
    "user": {
      "login": "koulmomo",
      "id": 983861,
      "avatar_url": "https://avatars.githubusercontent.com/u/983861?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koulmomo",
      "html_url": "https://github.com/koulmomo",
      "followers_url": "https://api.github.com/users/koulmomo/followers",
      "following_url": "https://api.github.com/users/koulmomo/following{/other_user}",
      "gists_url": "https://api.github.com/users/koulmomo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koulmomo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koulmomo/subscriptions",
      "organizations_url": "https://api.github.com/users/koulmomo/orgs",
      "repos_url": "https://api.github.com/users/koulmomo/repos",
      "events_url": "https://api.github.com/users/koulmomo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koulmomo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-06T23:21:46Z",
    "updated_at": "2015-02-07T01:06:31Z",
    "closed_at": null,
    "body": "Here is an issue on another project that has a nice explanation of what [matrix parameters](https://github.com/medialize/URI.js/issues/181#issuecomment-62303246) are as well as a [StackOverflow question](http://stackoverflow.com/questions/401981/when-to-use-query-parameters-versus-matrix-parameters) explaining their usefulness. \r\nOnly referencing them since I myself had only just recently learned about them.\r\n\r\nI am not looking for a comprehensive solution to fully support matrix parameters in express (by perhaps aggregating them in a `req.matrix` object). For now I'd settle for a having the express routing support correctly matching paths with matrix params with their handlers.\r\n\r\nThe expected behavior I am hoping for:\r\n\r\nusing the app generated by the [express-generator](http://expressjs.com/starter/generator.html)\r\n\r\n`/users;foo=bar` should not `404` and instead map to the handler for `/users`\r\n\r\nIf there are absolutely no plans to support matrix parameters, it would be nice to have a warning or explicitly declaring it in the routing section of the docs.\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2531",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2531/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2531/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2531/events",
    "html_url": "https://github.com/strongloop/express/issues/2531",
    "id": 56814762,
    "number": 2531,
    "title": "Loosing params consistency in child routes with mergeParams",
    "user": {
      "login": "YouriT",
      "id": 1449797,
      "avatar_url": "https://avatars.githubusercontent.com/u/1449797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YouriT",
      "html_url": "https://github.com/YouriT",
      "followers_url": "https://api.github.com/users/YouriT/followers",
      "following_url": "https://api.github.com/users/YouriT/following{/other_user}",
      "gists_url": "https://api.github.com/users/YouriT/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YouriT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YouriT/subscriptions",
      "organizations_url": "https://api.github.com/users/YouriT/orgs",
      "repos_url": "https://api.github.com/users/YouriT/repos",
      "events_url": "https://api.github.com/users/YouriT/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YouriT/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2015-02-06T14:00:29Z",
    "updated_at": "2015-02-06T15:12:36Z",
    "closed_at": "2015-02-06T14:15:55Z",
    "body": "Hi folks,\r\n\r\nI'm facing an issue which is that if I nest 2 routers like in the example below, my modifications on the ```req.params``` object are not kept in the child route. Any thought on how to resolve it ?\r\n\r\n```js\r\nvar express = require('express');\r\n\r\nmodule.exports = function(app) {\r\n\r\n\tvar myRouter = express.Router();\r\n\tvar mySpecificRouter = express.Router({\r\n\t\tmergeParams: true\r\n\t});\r\n\r\n\tmyRouter.all('*', app.requestHelper.verifyToken);\r\n\r\n\tmyRouter.route('/')\r\n\t\t.get(app.controller.my.list);\r\n\r\n\tmyRouter\r\n\t\t.use('/:id', function(req, res, next) {\r\n\t\t\tif (/^[0-9]+$/.test(req.params.id)) {\r\n\t\t\t\tconsole.log('parent params before parsing', req.params);\r\n\t\t\t\treq.params.id = parseInt(req.params.id, 10);\r\n\t\t\t\tconsole.log('parent params', req.params);\r\n\t\t\t\tnext();\r\n\t\t\t} else {\r\n\t\t\t\tapp.status(400).send({error:'bad request'});\r\n\t\t\t}\r\n\t\t}, mySpecificRouter);\r\n\r\n\tmySpecificRouter\r\n\t\t.route('/')\r\n\t\t.get(function(req, res, next) {\r\n\t\t\tconsole.log('child params', req.params);\r\n\t\t\tapp.status(200).send({});\r\n\t\t});\r\n\r\n\tapp.use('/route', myRouter);\r\n};\r\n```\r\n\r\nSo the console log of a get request on /route/101 give me the following:\r\n```\r\nparent params before parsing {id: '100'}\r\nparent params {id: 100}\r\nchild params {id: '101'}\r\n```\r\n\r\nWhen I check in the ```parentParams``` in the index of the router I see the original object instead of the altered one...\r\n\r\nThanks !"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2530",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2530/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2530/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2530/events",
    "html_url": "https://github.com/strongloop/express/pull/2530",
    "id": 56720190,
    "number": 2530,
    "title": "Update path-to-regexp to 1.0.3",
    "user": {
      "login": "micha149",
      "id": 298880,
      "avatar_url": "https://avatars.githubusercontent.com/u/298880?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/micha149",
      "html_url": "https://github.com/micha149",
      "followers_url": "https://api.github.com/users/micha149/followers",
      "following_url": "https://api.github.com/users/micha149/following{/other_user}",
      "gists_url": "https://api.github.com/users/micha149/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/micha149/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/micha149/subscriptions",
      "organizations_url": "https://api.github.com/users/micha149/orgs",
      "repos_url": "https://api.github.com/users/micha149/repos",
      "events_url": "https://api.github.com/users/micha149/events{/privacy}",
      "received_events_url": "https://api.github.com/users/micha149/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/5.x",
        "name": "5.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/deps",
        "name": "deps",
        "color": "444444"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-02-05T19:53:23Z",
    "updated_at": "2015-02-05T20:04:05Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2530",
      "html_url": "https://github.com/strongloop/express/pull/2530",
      "diff_url": "https://github.com/strongloop/express/pull/2530.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2530.patch"
    },
    "body": "I updated `path-to-regexp` to the latest version. Because this will break slightly backwards compatibility, I would suggest to do this update for the upcoming major release. Major changes are the following:\r\n\r\n- Regular expressions have to be wrapped by parentheses e.g. `/users/(\\\\d+)`\r\n- Standalone asterisk must be written as expression e.g. `/(.*)`\r\n- Match one or more parameters e.g `/templates/:template+`\r\n- Match zero or more parameters `/files/:path*`\r\n- Optional parameters `:foo/:bar?`"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2529",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2529/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2529/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2529/events",
    "html_url": "https://github.com/strongloop/express/issues/2529",
    "id": 56481283,
    "number": 2529,
    "title": "Deprecated message thrown when using res.status",
    "user": {
      "login": "limianwang",
      "id": 1587797,
      "avatar_url": "https://avatars.githubusercontent.com/u/1587797?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/limianwang",
      "html_url": "https://github.com/limianwang",
      "followers_url": "https://api.github.com/users/limianwang/followers",
      "following_url": "https://api.github.com/users/limianwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/limianwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/limianwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/limianwang/subscriptions",
      "organizations_url": "https://api.github.com/users/limianwang/orgs",
      "repos_url": "https://api.github.com/users/limianwang/repos",
      "events_url": "https://api.github.com/users/limianwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/limianwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2015-02-04T05:12:05Z",
    "updated_at": "2015-02-04T05:24:28Z",
    "closed_at": "2015-02-04T05:24:28Z",
    "body": "I have been aware that since express@4.x, `res.send(201, obj)` format has been deprecated. But I am running into a situation where in 4.x I would want to send an `id` back, as shown as follows:\r\n\r\n```js\r\nvar app = express();\r\n\r\napp.use(function(req, res) {\r\n  res.statusCode(201).send(1111); // where this is the ID.\r\n});\r\n\r\nrequest(app)\r\n   .get('/')\r\n   .expect(1111)\r\n   .expect(201, done);\r\n```\r\n\r\nBut I would get the deprecated message:\r\n\r\n`express deprecated res.send(status)`\r\n\r\nI was wondering if how should I approach this situation in `express` where I would want to send an integer back without having to do the following:\r\n\r\n```js\r\napp.use(function(req, res) {\r\n  res.statusCode(201).send({ id: 1111 }); // where this is the ID.\r\n});\r\n```"
  }
]
