[
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2619",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2619/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2619/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2619/events",
    "html_url": "https://github.com/strongloop/express/pull/2619",
    "id": 68725345,
    "number": 2619,
    "title": "change res.links() to also accept array",
    "user": {
      "login": "vincfalk",
      "id": 4114239,
      "avatar_url": "https://avatars.githubusercontent.com/u/4114239?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincfalk",
      "html_url": "https://github.com/vincfalk",
      "followers_url": "https://api.github.com/users/vincfalk/followers",
      "following_url": "https://api.github.com/users/vincfalk/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincfalk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincfalk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincfalk/subscriptions",
      "organizations_url": "https://api.github.com/users/vincfalk/orgs",
      "repos_url": "https://api.github.com/users/vincfalk/repos",
      "events_url": "https://api.github.com/users/vincfalk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincfalk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-04-15T16:15:47Z",
    "updated_at": "2015-04-15T16:18:29Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2619",
      "html_url": "https://github.com/strongloop/express/pull/2619",
      "diff_url": "https://github.com/strongloop/express/pull/2619.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2619.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2618",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2618/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2618/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2618/events",
    "html_url": "https://github.com/strongloop/express/issues/2618",
    "id": 68318738,
    "number": 2618,
    "title": "Best way to simulate a request internally?",
    "user": {
      "login": "timbur",
      "id": 7020411,
      "avatar_url": "https://avatars.githubusercontent.com/u/7020411?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timbur",
      "html_url": "https://github.com/timbur",
      "followers_url": "https://api.github.com/users/timbur/followers",
      "following_url": "https://api.github.com/users/timbur/following{/other_user}",
      "gists_url": "https://api.github.com/users/timbur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timbur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timbur/subscriptions",
      "organizations_url": "https://api.github.com/users/timbur/orgs",
      "repos_url": "https://api.github.com/users/timbur/repos",
      "events_url": "https://api.github.com/users/timbur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timbur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-04-14T09:40:47Z",
    "updated_at": "2015-04-14T14:53:30Z",
    "closed_at": "2015-04-14T14:52:36Z",
    "body": "Sorry if this has been answered elsewhere.  I can't seem to find an elegant solution.\r\n\r\nSuppose I have a `clone` method on some controller (`Router`):\r\n\r\n```js\r\ncontroller.post(':id/clone', function (req, res, next) {\r\n  // simulate the GET request to retrieve the resource as the user normally would see it\r\n  // maybe change a couple of values\r\n  // simulate the POST request to create the clone and return the response as usual\r\n});\r\n```\r\n\r\nThis internal simulation is necessary because I have a handful of decorators attached to requests that filter and validate certain properties based on user permissions, etc., and it would be a pain to refactor them into this `clone` decorator, especially if I can simulate the requests.\r\n\r\nI've done something like this before, but it was pretty hacked together, as I had to dig into the internals of Express and \"fake\" the request and response handler. Surely there's a better way?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2617",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2617/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2617/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2617/events",
    "html_url": "https://github.com/strongloop/express/issues/2617",
    "id": 67533532,
    "number": 2617,
    "title": "req.params not in correct order when use a * before",
    "user": {
      "login": "ECP-Black",
      "id": 370674,
      "avatar_url": "https://avatars.githubusercontent.com/u/370674?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ECP-Black",
      "html_url": "https://github.com/ECP-Black",
      "followers_url": "https://api.github.com/users/ECP-Black/followers",
      "following_url": "https://api.github.com/users/ECP-Black/following{/other_user}",
      "gists_url": "https://api.github.com/users/ECP-Black/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ECP-Black/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ECP-Black/subscriptions",
      "organizations_url": "https://api.github.com/users/ECP-Black/orgs",
      "repos_url": "https://api.github.com/users/ECP-Black/repos",
      "events_url": "https://api.github.com/users/ECP-Black/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ECP-Black/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-10T07:35:10Z",
    "updated_at": "2015-04-16T09:02:34Z",
    "closed_at": null,
    "body": "Hello \r\n\r\ni have a problem with the params in the url (express v 4.12.3):\r\n\r\n```javascript\r\nvar express = require('express');\r\nvar app = express();\r\n\r\napp.get('*/test/:id/status', function (req, res) {\r\n    res.send(req.params);\r\n});\r\napp.listen(3000);\r\n```\r\nWhen requesting with the url: \r\nhttp://localhost:3000/a/b/d/test/theId/status\r\n\r\nthe output will be:\r\n```javascript\r\n { '0': 'theId', id: '/a/b/d' }\r\n```\r\n\r\nThe wildcard will be assign to the param id.\r\n\r\nKind regards,\r\nDennis\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2616",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2616/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2616/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2616/events",
    "html_url": "https://github.com/strongloop/express/pull/2616",
    "id": 66455197,
    "number": 2616,
    "title": "Add .npmignore to exclude development files from the npm package",
    "user": {
      "login": "panuhorsmalahti",
      "id": 2162413,
      "avatar_url": "https://avatars.githubusercontent.com/u/2162413?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/panuhorsmalahti",
      "html_url": "https://github.com/panuhorsmalahti",
      "followers_url": "https://api.github.com/users/panuhorsmalahti/followers",
      "following_url": "https://api.github.com/users/panuhorsmalahti/following{/other_user}",
      "gists_url": "https://api.github.com/users/panuhorsmalahti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/panuhorsmalahti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/panuhorsmalahti/subscriptions",
      "organizations_url": "https://api.github.com/users/panuhorsmalahti/orgs",
      "repos_url": "https://api.github.com/users/panuhorsmalahti/repos",
      "events_url": "https://api.github.com/users/panuhorsmalahti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/panuhorsmalahti/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2015-04-05T16:30:53Z",
    "updated_at": "2015-04-05T17:36:16Z",
    "closed_at": "2015-04-05T16:56:23Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2616",
      "html_url": "https://github.com/strongloop/express/pull/2616",
      "diff_url": "https://github.com/strongloop/express/pull/2616.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2616.patch"
    },
    "body": "I copied .gitignore as .npmignore and added a few development files and folders to be excluded from the npm package as they're unnecessary. Also removed node_modules as it's unnecessary as per npm's [documentation](https://docs.npmjs.com/misc/developers)."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2615",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2615/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2615/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2615/events",
    "html_url": "https://github.com/strongloop/express/pull/2615",
    "id": 66247083,
    "number": 2615,
    "title": "Added Route.prototype.verbs",
    "user": {
      "login": "B3rn475",
      "id": 2686902,
      "avatar_url": "https://avatars.githubusercontent.com/u/2686902?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/B3rn475",
      "html_url": "https://github.com/B3rn475",
      "followers_url": "https://api.github.com/users/B3rn475/followers",
      "following_url": "https://api.github.com/users/B3rn475/following{/other_user}",
      "gists_url": "https://api.github.com/users/B3rn475/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/B3rn475/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/B3rn475/subscriptions",
      "organizations_url": "https://api.github.com/users/B3rn475/orgs",
      "repos_url": "https://api.github.com/users/B3rn475/repos",
      "events_url": "https://api.github.com/users/B3rn475/events{/privacy}",
      "received_events_url": "https://api.github.com/users/B3rn475/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 9,
    "created_at": "2015-04-03T23:23:51Z",
    "updated_at": "2015-04-04T21:17:48Z",
    "closed_at": "2015-04-04T21:17:48Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2615",
      "html_url": "https://github.com/strongloop/express/pull/2615",
      "diff_url": "https://github.com/strongloop/express/pull/2615.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2615.patch"
    },
    "body": "This method allows to register a set of verbs in just one call and allows to define a default route for all the Others.\r\n\r\nThis is different from using all, because the default route is added only to the verbs for which there is not a defined one."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2614",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2614/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2614/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2614/events",
    "html_url": "https://github.com/strongloop/express/issues/2614",
    "id": 66231041,
    "number": 2614,
    "title": "IPv4/v6 problems trying to connect to the server",
    "user": {
      "login": "dendril",
      "id": 29705,
      "avatar_url": "https://avatars.githubusercontent.com/u/29705?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dendril",
      "html_url": "https://github.com/dendril",
      "followers_url": "https://api.github.com/users/dendril/followers",
      "following_url": "https://api.github.com/users/dendril/following{/other_user}",
      "gists_url": "https://api.github.com/users/dendril/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dendril/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dendril/subscriptions",
      "organizations_url": "https://api.github.com/users/dendril/orgs",
      "repos_url": "https://api.github.com/users/dendril/repos",
      "events_url": "https://api.github.com/users/dendril/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dendril/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-04-03T21:27:08Z",
    "updated_at": "2015-04-03T22:41:50Z",
    "closed_at": "2015-04-03T22:12:28Z",
    "body": "Hey all,\r\n\r\nI'm not 100% sure if it could be an express problem or just an error in my network configuration, I hope someone could give me a hand understanding this error.\r\n\r\nI'm using this simple code to create a server:\r\n\r\n```js\r\n'use strict';\r\n\r\nvar express = require('express');\r\n\r\nvar PORT = 8080,\r\n  SERVER = 'http://localhost:' + PORT;\r\n\r\nvar app = express(),\r\n  server;\r\n\r\napp.get('/', function(req, res) {\r\n  res.sendStatus(200);\r\n});\r\n```\r\n\r\nIn the terminal, I'm running the following commands:\r\n\r\n> $ curl -v http://localhost:8080/\r\n> \\* Hostname was NOT found in DNS cache\r\n> \\*   Trying ::1...\r\n> \\* connect to ::1 port 8080 failed: Connection refused\r\n> \\*   Trying fe80::1...\r\n> \\* connect to fe80::1 port 8080 failed: Connection refused\r\n> \\* Failed to connect to localhost port 8080: Connection refused\r\n> \\* Closing connection 0\r\n> curl: (7) Failed to connect to localhost port 8080: Connection refused\r\n\r\nbut:\r\n\r\n> $ curl -v http://127.0.0.1:8080/\r\n> \\* Hostname was NOT found in DNS cache\r\n> \\*   Trying 127.0.0.1...\r\n> \\* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\r\n> \\> GET / HTTP/1.1\r\n> \\> User-Agent: curl/7.37.1\r\n> \\> Host: 127.0.0.1:8080\r\n> \\> Accept: */*\r\n> \\> \r\n> \\< HTTP/1.1 200 OK\r\n> \\< X-Powered-By: Express\r\n> \\< Content-Type: text/plain; charset=utf-8\r\n> \\< Content-Length: 2\r\n> \\< ETag: W/\"2-d736d92d\"\r\n> \\< Date: Fri, 03 Apr 2015 21:16:30 GMT\r\n> \\< Connection: keep-alive\r\n> \\< \r\n> \\* Connection #0 to host 127.0.0.1 left intact\r\n\r\nI'm using node@0.10.35, express@4.12.3, running on OSX 10.10.2 (14C109).\r\n\r\nAny ideas?\r\n\r\nI'll really appreciate any help."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2613",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2613/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2613/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2613/events",
    "html_url": "https://github.com/strongloop/express/issues/2613",
    "id": 66219806,
    "number": 2613,
    "title": "QUESTION: Why is obj.__proto__=... being used instead of calling Object.create",
    "user": {
      "login": "g00dnatur3",
      "id": 1024460,
      "avatar_url": "https://avatars.githubusercontent.com/u/1024460?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/g00dnatur3",
      "html_url": "https://github.com/g00dnatur3",
      "followers_url": "https://api.github.com/users/g00dnatur3/followers",
      "following_url": "https://api.github.com/users/g00dnatur3/following{/other_user}",
      "gists_url": "https://api.github.com/users/g00dnatur3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/g00dnatur3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/g00dnatur3/subscriptions",
      "organizations_url": "https://api.github.com/users/g00dnatur3/orgs",
      "repos_url": "https://api.github.com/users/g00dnatur3/repos",
      "events_url": "https://api.github.com/users/g00dnatur3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/g00dnatur3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-04-03T20:08:13Z",
    "updated_at": "2015-04-03T20:17:03Z",
    "closed_at": "2015-04-03T20:16:19Z",
    "body": "In the ./lib/express.js & in the ./lib/router/index.js (and probably more places) the `__proto__` is being set directly either in the form `obj.__proto__ =` ... or in the form  `obj = { __proto__: ... }`\r\n\r\nMozilla does not recommend this:\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\r\n\r\nthey say it will heavily impact performance in modern javascript engines... I am not sure how relevant this is to vp8 engine, but Mozilla suggests using `Object.create` instead.\r\n\r\nIs there a reason why you opted no to use `Object.create`?\r\n\r\nJust very curious about this decision.\r\n\r\nThank you"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2612",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2612/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2612/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2612/events",
    "html_url": "https://github.com/strongloop/express/issues/2612",
    "id": 66090941,
    "number": 2612,
    "title": "Bind UI events",
    "user": {
      "login": "YP28",
      "id": 4119194,
      "avatar_url": "https://avatars.githubusercontent.com/u/4119194?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YP28",
      "html_url": "https://github.com/YP28",
      "followers_url": "https://api.github.com/users/YP28/followers",
      "following_url": "https://api.github.com/users/YP28/following{/other_user}",
      "gists_url": "https://api.github.com/users/YP28/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YP28/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YP28/subscriptions",
      "organizations_url": "https://api.github.com/users/YP28/orgs",
      "repos_url": "https://api.github.com/users/YP28/repos",
      "events_url": "https://api.github.com/users/YP28/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YP28/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-04-03T06:43:31Z",
    "updated_at": "2015-04-03T13:09:32Z",
    "closed_at": null,
    "body": "I don't know whether this is already possible or not, I couldn't find it when I needed it. I'm looking for the possibility to bind UI events from within Express. Like so:\r\nroutes\r\n```javascript\r\nvar indexEvents = require('../events/ui/index');\r\napp.get('/', function(req,res,next) {\r\n    var response = res.render('index');\r\n    response.bindEvents(indexEvents);\r\n    return response;\r\n}\r\n```\r\nevents/ui/index\r\n```javascript\r\nvar user = require('../models/user');\r\ndocument.findElementById('thisisanidinmytemplate').on('click', function() {\r\n    // possibility to access Express/NodeJS\r\n    var thisuser = user.find(this.val('id'));\r\n    thisuser.save();\r\n});\r\n```\r\nI don't know if this is technically possible, nor do I know where to put this thread (would this be a Node or Express feature?)."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2611",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2611/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2611/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2611/events",
    "html_url": "https://github.com/strongloop/express/pull/2611",
    "id": 65935649,
    "number": 2611,
    "title": "Change res.links() to accept array",
    "user": {
      "login": "vincfalk",
      "id": 4114239,
      "avatar_url": "https://avatars.githubusercontent.com/u/4114239?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincfalk",
      "html_url": "https://github.com/vincfalk",
      "followers_url": "https://api.github.com/users/vincfalk/followers",
      "following_url": "https://api.github.com/users/vincfalk/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincfalk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincfalk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincfalk/subscriptions",
      "organizations_url": "https://api.github.com/users/vincfalk/orgs",
      "repos_url": "https://api.github.com/users/vincfalk/repos",
      "events_url": "https://api.github.com/users/vincfalk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincfalk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2015-04-02T14:11:33Z",
    "updated_at": "2015-04-15T16:03:05Z",
    "closed_at": "2015-04-15T16:03:05Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2611",
      "html_url": "https://github.com/strongloop/express/pull/2611",
      "diff_url": "https://github.com/strongloop/express/pull/2611.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2611.patch"
    },
    "body": "Had a use case and seen that there's already an issue regarding this ([https://github.com/strongloop/express/issues/2575](https://github.com/strongloop/express/issues/2575)).. "
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2610",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2610/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2610/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2610/events",
    "html_url": "https://github.com/strongloop/express/pull/2610",
    "id": 65665933,
    "number": 2610,
    "title": "update",
    "user": {
      "login": "dshm",
      "id": 5553150,
      "avatar_url": "https://avatars.githubusercontent.com/u/5553150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dshm",
      "html_url": "https://github.com/dshm",
      "followers_url": "https://api.github.com/users/dshm/followers",
      "following_url": "https://api.github.com/users/dshm/following{/other_user}",
      "gists_url": "https://api.github.com/users/dshm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dshm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dshm/subscriptions",
      "organizations_url": "https://api.github.com/users/dshm/orgs",
      "repos_url": "https://api.github.com/users/dshm/repos",
      "events_url": "https://api.github.com/users/dshm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dshm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-04-01T11:49:42Z",
    "updated_at": "2015-04-02T03:34:42Z",
    "closed_at": "2015-04-01T11:57:33Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2610",
      "html_url": "https://github.com/strongloop/express/pull/2610",
      "diff_url": "https://github.com/strongloop/express/pull/2610.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2610.patch"
    },
    "body": "thanks for this!!"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2609",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2609/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2609/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2609/events",
    "html_url": "https://github.com/strongloop/express/issues/2609",
    "id": 65574278,
    "number": 2609,
    "title": "app.post 4.12.3",
    "user": {
      "login": "Yuotta",
      "id": 5524801,
      "avatar_url": "https://avatars.githubusercontent.com/u/5524801?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yuotta",
      "html_url": "https://github.com/Yuotta",
      "followers_url": "https://api.github.com/users/Yuotta/followers",
      "following_url": "https://api.github.com/users/Yuotta/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yuotta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yuotta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yuotta/subscriptions",
      "organizations_url": "https://api.github.com/users/Yuotta/orgs",
      "repos_url": "https://api.github.com/users/Yuotta/repos",
      "events_url": "https://api.github.com/users/Yuotta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yuotta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 6,
    "created_at": "2015-04-01T00:26:19Z",
    "updated_at": "2015-04-01T17:30:57Z",
    "closed_at": "2015-04-01T03:31:17Z",
    "body": "Is this still a thing? I can't find a reason anywhere but can someone explain how to do post requests in 4.12.3? As well as using the body-parser middleware? "
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2608",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2608/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2608/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2608/events",
    "html_url": "https://github.com/strongloop/express/issues/2608",
    "id": 65536481,
    "number": 2608,
    "title": "req.path not set if specifying mountpoint for app.use",
    "user": {
      "login": "strawhatgami",
      "id": 1622005,
      "avatar_url": "https://avatars.githubusercontent.com/u/1622005?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/strawhatgami",
      "html_url": "https://github.com/strawhatgami",
      "followers_url": "https://api.github.com/users/strawhatgami/followers",
      "following_url": "https://api.github.com/users/strawhatgami/following{/other_user}",
      "gists_url": "https://api.github.com/users/strawhatgami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/strawhatgami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/strawhatgami/subscriptions",
      "organizations_url": "https://api.github.com/users/strawhatgami/orgs",
      "repos_url": "https://api.github.com/users/strawhatgami/repos",
      "events_url": "https://api.github.com/users/strawhatgami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/strawhatgami/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-31T20:18:02Z",
    "updated_at": "2015-03-31T20:47:54Z",
    "closed_at": "2015-03-31T20:29:18Z",
    "body": "This is the code I added to a freshly installed express app:\r\n```\r\napp.use(function(req, res, next){\r\n  console.log(\"without mountpoint: req.path = \", req.path )\r\n  next();\r\n});\r\napp.use(/^\\/(.*|$)/, function(req, res, next){\r\n  console.log(\"with regex mountpoint: req.path = \", req.path )\r\n  next();\r\n});\r\napp.use('/nlc', function(req, res, next){\r\n  console.log(\"with string mountpoint: req.path = \", req.path )\r\n  next();\r\n});\r\n``` \r\n\r\nWhen I ask for /nlc, I get in console:\r\n```\r\nwithout mountpoint: req.path =  /nlc\r\nwith regex mountpoint: req.path =  /\r\nwith string mountpoint: req.path =  /\r\nGET /nlc 404 45.197 ms - 917\r\n```\r\n\r\nIs there any reason why req.path is set to '/' instead of its expected value when I specify a mountpoint?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2607",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2607/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2607/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2607/events",
    "html_url": "https://github.com/strongloop/express/issues/2607",
    "id": 65410606,
    "number": 2607,
    "title": "Error while installing new npm package in node web application.",
    "user": {
      "login": "BijurajE",
      "id": 11734893,
      "avatar_url": "https://avatars.githubusercontent.com/u/11734893?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BijurajE",
      "html_url": "https://github.com/BijurajE",
      "followers_url": "https://api.github.com/users/BijurajE/followers",
      "following_url": "https://api.github.com/users/BijurajE/following{/other_user}",
      "gists_url": "https://api.github.com/users/BijurajE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BijurajE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BijurajE/subscriptions",
      "organizations_url": "https://api.github.com/users/BijurajE/orgs",
      "repos_url": "https://api.github.com/users/BijurajE/repos",
      "events_url": "https://api.github.com/users/BijurajE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BijurajE/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-31T09:44:40Z",
    "updated_at": "2015-03-31T12:02:36Z",
    "closed_at": "2015-03-31T12:02:36Z",
    "body": "Registry url: https://registry.npmjs.org/\r\nCurrent Time: 31-03-2015 14:47:34\r\nLast Refreshed: 31-03-2015 14:46:13\r\nNumber of Results: 144832\r\n====Executing command 'npm install express --save '====\r\n\r\nnpm WARN package.json NodejsWebApp1@0.1.0 No repository field.\r\nnpm ERR! Windows_NT 6.2.9200\r\nnpm ERR! argv \"E:\\\\NodeJs\\\\\\\\node.exe\" \"E:\\\\NodeJs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\" \"express\" \"--save\"\r\nnpm ERR! node v0.12.1\r\nnpm ERR! npm  v2.5.1\r\nnpm ERR! code ETIMEDOUT\r\nnpm ERR! errno ETIMEDOUT\r\nnpm ERR! syscall connect\r\nnpm ERR! network connect ETIMEDOUT\r\nnpm ERR! network This is most likely not a problem with npm itself\r\nnpm ERR! network and is related to network connectivity.\r\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\r\nnpm ERR! network \r\nnpm ERR! network If you are behind a proxy, please make sure that the\r\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\r\nnpm ERR! Please include the following file with any support request:\r\nnpm ERR!     E:\\Bijuraj\\GamiService\\NodejsWebApp1\\NodejsWebApp1\\npm-debug.log\r\n\r\n====npm command completed with exit code 1===="
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2606",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2606/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2606/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2606/events",
    "html_url": "https://github.com/strongloop/express/issues/2606",
    "id": 64839836,
    "number": 2606,
    "title": "Can't enable CORS",
    "user": {
      "login": "juancabrera",
      "id": 355253,
      "avatar_url": "https://avatars.githubusercontent.com/u/355253?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juancabrera",
      "html_url": "https://github.com/juancabrera",
      "followers_url": "https://api.github.com/users/juancabrera/followers",
      "following_url": "https://api.github.com/users/juancabrera/following{/other_user}",
      "gists_url": "https://api.github.com/users/juancabrera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juancabrera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juancabrera/subscriptions",
      "organizations_url": "https://api.github.com/users/juancabrera/orgs",
      "repos_url": "https://api.github.com/users/juancabrera/repos",
      "events_url": "https://api.github.com/users/juancabrera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juancabrera/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-27T19:52:17Z",
    "updated_at": "2015-04-02T18:00:19Z",
    "closed_at": "2015-04-02T18:00:17Z",
    "body": "I'm working on a [fluxible](http://fluxible.io/) + react flux project and can't make CORS works (connecting to an external REST API). I tried [cors](https://www.npmjs.com/package/cors) but is not working neither. \r\n\r\nThis is the code of server.js (where I start the server). Relevant lines where I set the headers (```res.header```);\r\n\r\n```javascript\r\nrequire(\"babel/register\");\r\n\r\nvar http           = require('http'),\r\n    express        = require('express'),\r\n    cors           = require('cors'),\r\n    expressState   = require('express-state'),\r\n    favicon        = require('serve-favicon'), \r\n    navigateAction = require('flux-router-component').navigateAction,\r\n    React          = require('react'),\r\n    app            = require('./app'),\r\n    HtmlComponent  = React.createFactory(require('./components/Html.jsx'));\r\n\r\nvar server = express();\r\n\r\n// server.use(cors());\r\nserver.all('/', function(req, res, next) {\r\n  res.header('Access-Control-Allow-Origin', '*');\r\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\r\n  res.header('Access-Control-Allow-Headers', 'X-Requested-With, Accept, Origin, Referer, User-Agent, Content-Type, Authorization');\r\n\r\n  if (req.method === 'OPTIONS') {\r\n    res.send(200);\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexpressState.extend(server);\r\n\r\nserver.set('state namespace', 'App');\r\nserver.use('/static', express.static(__dirname + '/static'));\r\nserver.use(favicon(__dirname + '/static/favicon.ico'));\r\nserver.use(function (req, res, next) {\r\n  var context = app.createContext({ req : req });\r\n\r\n  context.getActionContext().executeAction(navigateAction, {\r\n    url: req.url\r\n  },\r\n  function (err) {\r\n    // handle errors\r\n    if (err) {\r\n      if (err.status && err.status === 404) {\r\n        next();\r\n      } else {\r\n        next(err);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // dehydrate app\r\n    res.expose(app.dehydrate(context), 'App');\r\n\r\n    // rendering application\r\n    var AppComponent = app.getAppComponent();\r\n\r\n    // rendering markup component\r\n    var html = React.renderToStaticMarkup(HtmlComponent({\r\n      state:   res.locals.state,\r\n      context: context.getComponentContext(),\r\n      markup:  React.renderToString(AppComponent({\r\n        context: context.getComponentContext()\r\n      }))\r\n    }));\r\n\r\n    res.write(html);\r\n    res.end();\r\n  });\r\n});\r\n\r\nvar port = process.env.PORT || 1111;\r\nserver.listen(port);\r\n\r\nconsole.log('Listening on port ' + port);\r\n```"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2604",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2604/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2604/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2604/events",
    "html_url": "https://github.com/strongloop/express/issues/2604",
    "id": 64053646,
    "number": 2604,
    "title": "Calling next('route') from app.use middleware ",
    "user": {
      "login": "tikotzky",
      "id": 200528,
      "avatar_url": "https://avatars.githubusercontent.com/u/200528?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tikotzky",
      "html_url": "https://github.com/tikotzky",
      "followers_url": "https://api.github.com/users/tikotzky/followers",
      "following_url": "https://api.github.com/users/tikotzky/following{/other_user}",
      "gists_url": "https://api.github.com/users/tikotzky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tikotzky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tikotzky/subscriptions",
      "organizations_url": "https://api.github.com/users/tikotzky/orgs",
      "repos_url": "https://api.github.com/users/tikotzky/repos",
      "events_url": "https://api.github.com/users/tikotzky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tikotzky/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-24T17:27:27Z",
    "updated_at": "2015-03-24T19:16:17Z",
    "closed_at": "2015-03-24T17:46:04Z",
    "body": "In the example below I would expect `mw2` to get skipped and `mw3` to get called because `mw1` is calling `next('route');`. \r\nWhat is actually happening is `mw2` is getting called even though `mw1` is calling `next('route');`.\r\n\r\nIf I use `app.all` instead of `app.use` I get the behavior I would expect .\r\n\r\nIs `app.use` behaving as intented or should `next('route');` be skipping `mw2`?\r\n\r\n```javascript\r\nfunction mw1(req, res, next){\r\n  next('route');\r\n}\r\n\r\nfunction mw2(req, res, next){\r\n  console.log('I would expect this to never get called');\r\n  res.render('something')\r\n}\r\n\r\nfunction mw3(req, res, next){\r\n  console.log('I would expect this to get called instead');\r\n  res.render('something-else')\r\n}\r\n\r\napp.use('/sub', mw1, mw1);\r\napp.use('/sub', mw3);\r\n```"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2603",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2603/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2603/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2603/events",
    "html_url": "https://github.com/strongloop/express/issues/2603",
    "id": 64048515,
    "number": 2603,
    "title": "Multiple callbacks on app.param. Eg: app.param('resource', cb1, cb2)",
    "user": {
      "login": "razvanz",
      "id": 3844203,
      "avatar_url": "https://avatars.githubusercontent.com/u/3844203?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/razvanz",
      "html_url": "https://github.com/razvanz",
      "followers_url": "https://api.github.com/users/razvanz/followers",
      "following_url": "https://api.github.com/users/razvanz/following{/other_user}",
      "gists_url": "https://api.github.com/users/razvanz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/razvanz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/razvanz/subscriptions",
      "organizations_url": "https://api.github.com/users/razvanz/orgs",
      "repos_url": "https://api.github.com/users/razvanz/repos",
      "events_url": "https://api.github.com/users/razvanz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/razvanz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-24T17:04:49Z",
    "updated_at": "2015-03-25T08:18:47Z",
    "closed_at": null,
    "body": "Duplicate of #2181, but since it has been locked I have to create a new issue.\r\n\r\nI saw in the [last comment](https://github.com/strongloop/express/issues/2181#issuecomment-46851349) from #2181 that a use case was required:\r\n\r\nConsidering one would want to do both authorization and loading for en entity, having both callbacks defined in the `app.param()` would be more readable, as well as provide controller reuse:\r\n\r\n```javascript\r\napp.all('/app/entity*', permissions.initEntityAuth);\r\n\r\napp.all('/app/entity/:entityid*',\r\n  entity.authorize,\r\n  entity.loadEntity,\r\n  function (req, res, next) {\r\n    return next('route');\r\n  });\r\n\r\napp.route('/app/entity/:entityid')\r\n    .get(...)\r\n    .put(...);\r\n```\r\nvs\r\n```javascript\r\napp.all('/app/entity*', permissions.initEntityAuth);\r\n\r\napp.param('entityid', \r\n   // everything done inside this controller. Reuse level 0.\r\n   entity.authorizeAndLoad);\r\n\r\napp.route('/app/entity/:entityid')\r\n    .get(...)\r\n    .put(...);\r\n```\r\nvs\r\n```javascript\r\napp.all('/app/entity*', permissions.initEntityAuth);\r\n\r\napp.param('entityid', \r\n    // Ohh, no. I have to maintain an async_wrap now\r\n    some_async_wrap(entity.authorize, entity.loadEntity));\r\n\r\napp.route('/app/entity/:entityid')\r\n    .get(...)\r\n    .put(...);\r\n```\r\nvs\r\n```javascript\r\n// It seems to be much more readable as well as keeping the code reuse \r\napp.all('/app/entity*', permissions.initEntityAuth);\r\n\r\napp.param('entityid', \r\n   entity.authorize, \r\n   entity.loadEntity);\r\n\r\napp.route('/app/entity/:entityid')\r\n    .get(...)\r\n    .put(...);\r\n```\r\n\r\nWhat do you think?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2602",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2602/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2602/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2602/events",
    "html_url": "https://github.com/strongloop/express/pull/2602",
    "id": 63702432,
    "number": 2602,
    "title": "response.js: use statusCodes short cut instead of http.STATUS_CODES",
    "user": {
      "login": "tcort",
      "id": 216720,
      "avatar_url": "https://avatars.githubusercontent.com/u/216720?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tcort",
      "html_url": "https://github.com/tcort",
      "followers_url": "https://api.github.com/users/tcort/followers",
      "following_url": "https://api.github.com/users/tcort/following{/other_user}",
      "gists_url": "https://api.github.com/users/tcort/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tcort/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tcort/subscriptions",
      "organizations_url": "https://api.github.com/users/tcort/orgs",
      "repos_url": "https://api.github.com/users/tcort/repos",
      "events_url": "https://api.github.com/users/tcort/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tcort/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-23T11:36:40Z",
    "updated_at": "2015-03-23T20:37:04Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2602",
      "html_url": "https://github.com/strongloop/express/pull/2602",
      "diff_url": "https://github.com/strongloop/express/pull/2602.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2602.patch"
    },
    "body": "At the top of the file there is a short cut for http.STATUS_CODES:\r\n\r\n  var statusCodes = http.STATUS_CODES;\r\n\r\nA couple of places in the module still referenced http.STATUS_CODES\r\ndirectly. Replace those references with the short cut, statusCodes."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2601",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2601/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2601/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2601/events",
    "html_url": "https://github.com/strongloop/express/issues/2601",
    "id": 63593563,
    "number": 2601,
    "title": "Convert router stack to an object of arrays",
    "user": {
      "login": "ilanbiala",
      "id": 3695164,
      "avatar_url": "https://avatars.githubusercontent.com/u/3695164?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ilanbiala",
      "html_url": "https://github.com/ilanbiala",
      "followers_url": "https://api.github.com/users/ilanbiala/followers",
      "following_url": "https://api.github.com/users/ilanbiala/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilanbiala/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ilanbiala/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilanbiala/subscriptions",
      "organizations_url": "https://api.github.com/users/ilanbiala/orgs",
      "repos_url": "https://api.github.com/users/ilanbiala/repos",
      "events_url": "https://api.github.com/users/ilanbiala/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ilanbiala/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 12,
    "created_at": "2015-03-23T00:31:11Z",
    "updated_at": "2015-04-06T16:34:10Z",
    "closed_at": null,
    "body": "Object and array access is almost equal in performance, so why not change the stack from an array of layers to an object with paths as the keys and an array with all the handlers as the values? That would mean that If a middleware is at the \"end\" of the stack, it could still be accessed in a comparable amount of time. For example, two stacks, with simplified layers:\r\n```\r\n\r\nvar stack = [{\r\n  regexp: /^\\/?(?=/|$)/i,\r\n  handle: Function\r\n}, {\r\n  regexp: /^\\/?(?=/|$)/i,\r\n  handle: Function\r\n}, {\r\n  regexp: /^\\/products\\/?$/i,\r\n  handle: Function,\r\n  route: { path: '/products', stack: [Object], methods: [Object] }\r\n}, { \r\n  regexp: /^\\/product\\/(?:([^/]+?))\\/?$/i,\r\n  handle: Function,\r\n  route: { path: '/product/:id', stack: [Object], methods: [Object] }\r\n}, {\r\n  regexp: /^\\/product\\/?$/i,\r\n  handle: Function,\r\n  route: { path: '/product', stack: [Object], methods: [Object] }\r\n}, {\r\n  regexp: /^\\/product\\/(?:([^/]+?))\\/?$/i,\r\n  handle: Function,\r\n  route: { path: '/product/:id', stack: [Object], methods: [Object] }\r\n}, {\r\n  regexp: /^\\/product\\/(?:([^/]+?))\\/?$/i,\r\n  handle: Function,\r\n  route: { path: '/product/:id', stack: [Object], methods: [Object] }\r\n}, {\r\n  regexp: /^\\/products\\/?$/i,\r\n  handle: Function,\r\n  route: { path: '/products', stack: [Object], methods: [Object] }\r\n}];\r\n\r\n// Accessing a route here requires iterating through all the layers in the array.\r\n// Now say the stack were an object\r\nvar stack = {\r\n  '^\\/products\\/?$': {\r\n    handle: Function,\r\n    route: { path: '/products', stack: [Object], methods: [Object] }\r\n  }\r\n};\r\n```\r\nAccessing a specific middleware in the object stack should be faster by skipping over all the inapplicable middlewares. This approach could go with either a path -> Array of handlers or path -> method type -> Array of handlers. Depending on whether the user has lots of handlers on one path, it may make sense to switch to filtered by method, but that requires some more thought. This is just a general inquiry into optimizing routing in Express. Any thoughts? I looked for some issues with ideas like this but I didn't find anything specific, so I decided to open one here to get some discussion going."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2600",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2600/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2600/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2600/events",
    "html_url": "https://github.com/strongloop/express/pull/2600",
    "id": 63527068,
    "number": 2600,
    "title": "Update document for ```res.set``` method",
    "user": {
      "login": "damphat",
      "id": 677382,
      "avatar_url": "https://avatars.githubusercontent.com/u/677382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damphat",
      "html_url": "https://github.com/damphat",
      "followers_url": "https://api.github.com/users/damphat/followers",
      "following_url": "https://api.github.com/users/damphat/following{/other_user}",
      "gists_url": "https://api.github.com/users/damphat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damphat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damphat/subscriptions",
      "organizations_url": "https://api.github.com/users/damphat/orgs",
      "repos_url": "https://api.github.com/users/damphat/repos",
      "events_url": "https://api.github.com/users/damphat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damphat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-22T12:23:42Z",
    "updated_at": "2015-03-23T01:05:38Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2600",
      "html_url": "https://github.com/strongloop/express/pull/2600",
      "diff_url": "https://github.com/strongloop/express/pull/2600.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2600.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2599",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2599/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2599/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2599/events",
    "html_url": "https://github.com/strongloop/express/pull/2599",
    "id": 63142244,
    "number": 2599,
    "title": "Change express.logger in route-separation example",
    "user": {
      "login": "alex-dixon",
      "id": 9045165,
      "avatar_url": "https://avatars.githubusercontent.com/u/9045165?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-dixon",
      "html_url": "https://github.com/alex-dixon",
      "followers_url": "https://api.github.com/users/alex-dixon/followers",
      "following_url": "https://api.github.com/users/alex-dixon/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-dixon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-dixon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-dixon/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-dixon/orgs",
      "repos_url": "https://api.github.com/users/alex-dixon/repos",
      "events_url": "https://api.github.com/users/alex-dixon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-dixon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/examples",
        "name": "examples",
        "color": "5319e7"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-20T02:31:55Z",
    "updated_at": "2015-03-20T02:36:38Z",
    "closed_at": "2015-03-20T02:36:38Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2599",
      "html_url": "https://github.com/strongloop/express/pull/2599",
      "diff_url": "https://github.com/strongloop/express/pull/2599.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2599.patch"
    },
    "body": "In the route-separation example, morgan had been included in index.js and assigned to variable 'logger'. However, express.logger was used instead of the variable assigned to morgan. This generated the following error in Express 4: \r\n```\r\nError: Most middleware (like logger) is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.\r\n    at Function.Object.defineProperty.get (/Users/alexdixon/express/lib/express.js:89:13)\r\n    at Object.<anonymous> (/Users/alexdixon/express/examples/route-separation/index.js:24:19)\r\n```\r\nexpress.logger has been replaced with the existing variable for morgan. The example can now be run in the current version of the app."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2598",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2598/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2598/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2598/events",
    "html_url": "https://github.com/strongloop/express/pull/2598",
    "id": 62766069,
    "number": 2598,
    "title": "Fix typo in README",
    "user": {
      "login": "seedofjoy",
      "id": 3496596,
      "avatar_url": "https://avatars.githubusercontent.com/u/3496596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seedofjoy",
      "html_url": "https://github.com/seedofjoy",
      "followers_url": "https://api.github.com/users/seedofjoy/followers",
      "following_url": "https://api.github.com/users/seedofjoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/seedofjoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seedofjoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seedofjoy/subscriptions",
      "organizations_url": "https://api.github.com/users/seedofjoy/orgs",
      "repos_url": "https://api.github.com/users/seedofjoy/repos",
      "events_url": "https://api.github.com/users/seedofjoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seedofjoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/docs",
        "name": "docs",
        "color": "d4c5f9"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-18T18:25:18Z",
    "updated_at": "2015-03-18T18:46:53Z",
    "closed_at": "2015-03-18T18:46:53Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2598",
      "html_url": "https://github.com/strongloop/express/pull/2598",
      "diff_url": "https://github.com/strongloop/express/pull/2598.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2598.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2597",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2597/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2597/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2597/events",
    "html_url": "https://github.com/strongloop/express/issues/2597",
    "id": 62506566,
    "number": 2597,
    "title": "Add isset() to express?",
    "user": {
      "login": "smithb1994",
      "id": 4524249,
      "avatar_url": "https://avatars.githubusercontent.com/u/4524249?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smithb1994",
      "html_url": "https://github.com/smithb1994",
      "followers_url": "https://api.github.com/users/smithb1994/followers",
      "following_url": "https://api.github.com/users/smithb1994/following{/other_user}",
      "gists_url": "https://api.github.com/users/smithb1994/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smithb1994/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smithb1994/subscriptions",
      "organizations_url": "https://api.github.com/users/smithb1994/orgs",
      "repos_url": "https://api.github.com/users/smithb1994/repos",
      "events_url": "https://api.github.com/users/smithb1994/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smithb1994/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 9,
    "created_at": "2015-03-17T20:12:26Z",
    "updated_at": "2015-03-17T20:56:39Z",
    "closed_at": "2015-03-17T20:33:27Z",
    "body": "In PHP you can do   \r\n`if( isset($var) ) { ... }`\r\n  \r\nIn JavaScript you often use \r\n`if( typeof var != 'undefined' ) { ... }`\r\nfor similar functionality.  \r\n  \r\nIt would be great to have this functionality built into express by default, to clean up the code a little bit.   \r\n\r\nWhat do you guys think?"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2596",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2596/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2596/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2596/events",
    "html_url": "https://github.com/strongloop/express/issues/2596",
    "id": 61945362,
    "number": 2596,
    "title": "Removing routes at runtime",
    "user": {
      "login": "blitzprog",
      "id": 438936,
      "avatar_url": "https://avatars.githubusercontent.com/u/438936?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blitzprog",
      "html_url": "https://github.com/blitzprog",
      "followers_url": "https://api.github.com/users/blitzprog/followers",
      "following_url": "https://api.github.com/users/blitzprog/following{/other_user}",
      "gists_url": "https://api.github.com/users/blitzprog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blitzprog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blitzprog/subscriptions",
      "organizations_url": "https://api.github.com/users/blitzprog/orgs",
      "repos_url": "https://api.github.com/users/blitzprog/repos",
      "events_url": "https://api.github.com/users/blitzprog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blitzprog/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/4.x",
        "name": "4.x",
        "color": "ededed"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-16T02:19:53Z",
    "updated_at": "2015-03-17T04:02:51Z",
    "closed_at": "2015-03-17T04:02:51Z",
    "body": "First off, let me say that I'm an Express beginner and so far I'm very impressed with what it can do.\r\nI set up my node.js application to watch file changes and those file changes actually can incur the need to alter routes. Therefore I searched the [routing documentation](http://expressjs.com/guide/routing.html) and it seems there is no official, documented way to do it.\r\n\r\nI quickly searched if this issue already existed on GitHub but I couldn't find it via \"remove\" or \"remove routes\".\r\n\r\nA few minutes of Google-fu later it seems there are some ways to do it:\r\nhttp://stackoverflow.com/questions/15027514/node-js-remove-route-while-server-is-running\r\nhttp://stackoverflow.com/questions/10378690/remove-route-mappings-in-nodejs-express\r\n\r\nHowever those don't seem to be well documented and I don't see why Express shouldn't have an officially documented function à la \"app.remove()\" or a similar mechanism to remove routes.\r\n\r\nIf there is something I missed please let me know."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2595",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2595/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2595/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2595/events",
    "html_url": "https://github.com/strongloop/express/issues/2595",
    "id": 61945021,
    "number": 2595,
    "title": "/lib/response.js -> undefined is not a function at this.get()",
    "user": {
      "login": "lukeavsec",
      "id": 11494567,
      "avatar_url": "https://avatars.githubusercontent.com/u/11494567?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukeavsec",
      "html_url": "https://github.com/lukeavsec",
      "followers_url": "https://api.github.com/users/lukeavsec/followers",
      "following_url": "https://api.github.com/users/lukeavsec/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukeavsec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukeavsec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukeavsec/subscriptions",
      "organizations_url": "https://api.github.com/users/lukeavsec/orgs",
      "repos_url": "https://api.github.com/users/lukeavsec/repos",
      "events_url": "https://api.github.com/users/lukeavsec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukeavsec/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-16T02:14:46Z",
    "updated_at": "2015-03-16T03:17:54Z",
    "closed_at": "2015-03-16T02:20:37Z",
    "body": "I honestly don't even know what information to provide.\r\nAll I know is my stack trace says:\r\n\r\n*Possibly unhandled TypeError: undefined is not a function... lib\\response.js:130:17*\r\n\r\nI am using *bluebird* promise library and the error is being generated when I try:\r\n\r\n    .then(response.send, next);\r\n\r\nbut not when I do:\r\n\r\n    .then(function(result) {\r\n        response.send(result)\r\n    }, next);"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2594",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2594/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2594/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2594/events",
    "html_url": "https://github.com/strongloop/express/issues/2594",
    "id": 61690307,
    "number": 2594,
    "title": "WebSocket GET handshake (upgrade) routing",
    "user": {
      "login": "ibc",
      "id": 16191,
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 7,
    "created_at": "2015-03-14T20:29:24Z",
    "updated_at": "2015-03-22T15:18:54Z",
    "closed_at": null,
    "body": "I don't meam an \"integrated WebSocket server\" but the possibility of performing express routing for WebSocket handshake requests.\r\n\r\nNode `httpServer` emits an \"upgrade\" event for HTTP GET requests including a \"Upgrade\" header. Express may provide a new \"method\" called \"websocket\" for handling them (if the \"Upgrade\" header has value \"websocket\"), so the GET request may be processed as any other HTTP verb:\r\n\r\n```javascript\r\nvar app = express();\r\n\r\napp.websocket('/websocket/:service', function(req, res, next) {\r\n  [...]\r\n});\r\n```\r\n\r\nIn this way, Cookies present in the HTTP request may be checked using express middlewares (for example)."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2593",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2593/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2593/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2593/events",
    "html_url": "https://github.com/strongloop/express/issues/2593",
    "id": 61661506,
    "number": 2593,
    "title": "Router mergeParams=true does not work ",
    "user": {
      "login": "ibc",
      "id": 16191,
      "avatar_url": "https://avatars.githubusercontent.com/u/16191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ibc",
      "html_url": "https://github.com/ibc",
      "followers_url": "https://api.github.com/users/ibc/followers",
      "following_url": "https://api.github.com/users/ibc/following{/other_user}",
      "gists_url": "https://api.github.com/users/ibc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ibc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ibc/subscriptions",
      "organizations_url": "https://api.github.com/users/ibc/orgs",
      "repos_url": "https://api.github.com/users/ibc/repos",
      "events_url": "https://api.github.com/users/ibc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ibc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-14T17:41:11Z",
    "updated_at": "2015-03-17T11:36:50Z",
    "closed_at": "2015-03-14T17:57:04Z",
    "body": "\r\nexpress 4.12.2. According to the Router doc about `mergeParams` option:\r\n\r\n> Preserve the `req.params` values from the parent router. If the parent and the child have conflicting param names, the child’s value take precedence.\r\n\r\nMay be I miss something, but it does not behave in that way at all:\r\n\r\n```javascript\r\nvar express = require('express');\r\nvar app = express();\r\n\r\n\r\napp.get('/users/:username', function(req, res, next) {\r\n        console.log('> app.get');\r\n\r\n\tif (req.params.username !== 'alice') {\r\n\t\tthrow new Error('app.get: username != alice');\r\n\t}\r\n\r\n\tnext();\r\n});\r\n\r\nvar router1 = express.Router({mergeParams: true});\r\napp.use(router1);\r\n\r\nrouter1.get('*', function(req, res, next) {\r\n        console.log('> router1.get');\r\n\r\n        // This throws.  \r\n \tif (req.params.username !== 'alice') {\r\n\t\tthrow new Error('router1.get: username != alice');\r\n\t}\r\n\r\n\tnext();\r\n});\r\n\r\napp.listen(5000, '0.0.0.0');\r\n```\r\n\r\nNow send a GET request with url \"/users/alice\" and it will print:\r\n\r\n```\r\n> app.get\r\n> router.get\r\nError: router1.get: username != alice\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2592",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2592/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2592/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2592/events",
    "html_url": "https://github.com/strongloop/express/pull/2592",
    "id": 61558562,
    "number": 2592,
    "title": "It must be assert.equal(actual, expected)",
    "user": {
      "login": "damphat",
      "id": 677382,
      "avatar_url": "https://avatars.githubusercontent.com/u/677382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damphat",
      "html_url": "https://github.com/damphat",
      "followers_url": "https://api.github.com/users/damphat/followers",
      "following_url": "https://api.github.com/users/damphat/following{/other_user}",
      "gists_url": "https://api.github.com/users/damphat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damphat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damphat/subscriptions",
      "organizations_url": "https://api.github.com/users/damphat/orgs",
      "repos_url": "https://api.github.com/users/damphat/repos",
      "events_url": "https://api.github.com/users/damphat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damphat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/tests",
        "name": "tests",
        "color": "944008"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-14T10:56:03Z",
    "updated_at": "2015-03-17T05:20:17Z",
    "closed_at": "2015-03-17T05:20:17Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2592",
      "html_url": "https://github.com/strongloop/express/pull/2592",
      "diff_url": "https://github.com/strongloop/express/pull/2592.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2592.patch"
    },
    "body": "```\r\n  it.only('should be callable', function(){\r\n    var app = express();\r\n    // BUG HERE!\r\n    assert(typeof app, 'function');\r\n  })\r\n```"
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2591",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2591/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2591/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2591/events",
    "html_url": "https://github.com/strongloop/express/issues/2591",
    "id": 61187993,
    "number": 2591,
    "title": "Calling next('route') in middleware is ignored if a router is next in the chain",
    "user": {
      "login": "hellominotaur",
      "id": 9801369,
      "avatar_url": "https://avatars.githubusercontent.com/u/9801369?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellominotaur",
      "html_url": "https://github.com/hellominotaur",
      "followers_url": "https://api.github.com/users/hellominotaur/followers",
      "following_url": "https://api.github.com/users/hellominotaur/following{/other_user}",
      "gists_url": "https://api.github.com/users/hellominotaur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hellominotaur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hellominotaur/subscriptions",
      "organizations_url": "https://api.github.com/users/hellominotaur/orgs",
      "repos_url": "https://api.github.com/users/hellominotaur/repos",
      "events_url": "https://api.github.com/users/hellominotaur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hellominotaur/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/invalid",
        "name": "invalid",
        "color": "e6e6e6"
      }
    ],
    "state": "closed",
    "locked": true,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 5,
    "created_at": "2015-03-13T19:03:53Z",
    "updated_at": "2015-03-13T22:18:53Z",
    "closed_at": "2015-03-13T19:14:50Z",
    "body": "The following test :\r\n```javascript\r\ndescribe('when next(\"route\") is called on a mounted route with prefixed middleware', function(){\r\n  it('should jump to application route', function(done){\r\n    var app = express();\r\n    var router = express.Router();\r\n\r\n    function fn(req, res, next){\r\n      res.set('X-Hit', '1');\r\n      next('route');\r\n    }\r\n\r\n    router.get('/bar',  function(req,res,next){\r\n      res.end('failure');\r\n    });\r\n\r\n    app.use('/foo', fn, router);\r\n\r\n    app.get('/foo/bar', function(req, res){\r\n      res.status(200);\r\n      res.end('success');\r\n    });\r\n\r\n    request(app)\r\n    .get('/foo/bar')\r\n    .expect('X-Hit', '1')\r\n    .expect(200, 'success', done);\r\n  })\r\n})\r\n```\r\nWhen applied to `test/app.router.js` will fail. Instead of jumping to the next registered '/foo/bar', it ends up calling the mounted '/bar' route anyway."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2590",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2590/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2590/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2590/events",
    "html_url": "https://github.com/strongloop/express/issues/2590",
    "id": 61109417,
    "number": 2590,
    "title": "Calling a route from a route",
    "user": {
      "login": "wavded",
      "id": 26638,
      "avatar_url": "https://avatars.githubusercontent.com/u/26638?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavded",
      "html_url": "https://github.com/wavded",
      "followers_url": "https://api.github.com/users/wavded/followers",
      "following_url": "https://api.github.com/users/wavded/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavded/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavded/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavded/subscriptions",
      "organizations_url": "https://api.github.com/users/wavded/orgs",
      "repos_url": "https://api.github.com/users/wavded/repos",
      "events_url": "https://api.github.com/users/wavded/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavded/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/question",
        "name": "question",
        "color": "cc317c"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-03-13T15:51:22Z",
    "updated_at": "2015-03-17T07:21:56Z",
    "closed_at": null,
    "body": "@dougwilson and co. I'm working on an isomorphic application that can call routes either from the client or server side.. client side is simple of course but how would you recommend calling routes from inside an express route/middleware.  I've seen some attempts but was looking for your advice on a best way to do that."
  },
  {
    "url": "https://api.github.com/repos/strongloop/express/issues/2589",
    "labels_url": "https://api.github.com/repos/strongloop/express/issues/2589/labels{/name}",
    "comments_url": "https://api.github.com/repos/strongloop/express/issues/2589/comments",
    "events_url": "https://api.github.com/repos/strongloop/express/issues/2589/events",
    "html_url": "https://github.com/strongloop/express/pull/2589",
    "id": 61061971,
    "number": 2589,
    "title": "Fix the bug in example project: \"cookie-sessions\".",
    "user": {
      "login": "wangyangkobe",
      "id": 3325533,
      "avatar_url": "https://avatars.githubusercontent.com/u/3325533?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wangyangkobe",
      "html_url": "https://github.com/wangyangkobe",
      "followers_url": "https://api.github.com/users/wangyangkobe/followers",
      "following_url": "https://api.github.com/users/wangyangkobe/following{/other_user}",
      "gists_url": "https://api.github.com/users/wangyangkobe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangyangkobe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangyangkobe/subscriptions",
      "organizations_url": "https://api.github.com/users/wangyangkobe/orgs",
      "repos_url": "https://api.github.com/users/wangyangkobe/repos",
      "events_url": "https://api.github.com/users/wangyangkobe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangyangkobe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/examples",
        "name": "examples",
        "color": "5319e7"
      },
      {
        "url": "https://api.github.com/repos/strongloop/express/labels/pr",
        "name": "pr",
        "color": "006b75"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "dougwilson",
      "id": 67512,
      "avatar_url": "https://avatars.githubusercontent.com/u/67512?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougwilson",
      "html_url": "https://github.com/dougwilson",
      "followers_url": "https://api.github.com/users/dougwilson/followers",
      "following_url": "https://api.github.com/users/dougwilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougwilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougwilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougwilson/subscriptions",
      "organizations_url": "https://api.github.com/users/dougwilson/orgs",
      "repos_url": "https://api.github.com/users/dougwilson/repos",
      "events_url": "https://api.github.com/users/dougwilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougwilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "milestone": null,
    "comments": 0,
    "created_at": "2015-03-13T13:17:59Z",
    "updated_at": "2015-03-17T05:18:14Z",
    "closed_at": "2015-03-17T05:18:14Z",
    "pull_request": {
      "url": "https://api.github.com/repos/strongloop/express/pulls/2589",
      "html_url": "https://github.com/strongloop/express/pull/2589",
      "diff_url": "https://github.com/strongloop/express/pull/2589.diff",
      "patch_url": "https://github.com/strongloop/express/pull/2589.patch"
    },
    "body": "When i run example project \"cookie-sessions\", there is a bug which is caused by missing the lib \"cookie-session\"."
  }
]
